[{"SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'": {"{VALUE0}": "english channel", "{COLUMN0}": "name", "{COLUMN1}": "result", "{COLUMN2}": "bulgarian_commander", "{COLUMN3}": "id", "{COLUMN4}": "lost_in_battle", "{COLUMN5}": "location", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "="}, "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014": {"{VALUE6}": "2014", "{COLUMN0}": "name", "{COLUMN1}": "stadium_id", "{COLUMN2}": "year", "{TABLE0}": "stadium", "{TABLE1}": "concert", "{OP0}": "="}, "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";": {"{VALUE0}": "a love of a lifetime", "{COLUMN0}": "series_name", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "episode", "{TABLE0}": "tv channel", "{TABLE1}": "tv series", "{OP0}": "="}, "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'": {"{VALUE0}": "tabatha gehling", "{COLUMN0}": "created", "{COLUMN1}": "state", "{COLUMN2}": "phone_number", "{COLUMN3}": "contestant_number", "{COLUMN4}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{OP0}": "="}, "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'": {"{VALUE0}": "virginia", "{COLUMN0}": "first_name", "{COLUMN1}": "name", "{COLUMN2}": "owner_id", "{COLUMN3}": "state", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{OP0}": "="}, "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "weight", "{COLUMN3}": "abandoned_yn", "{TABLE0}": "dogs", "{OP0}": "="}, "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014": {"{VALUE9}": "2014", "{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{COLUMN2}": "concert_id", "{COLUMN3}": "year", "{TABLE0}": "singer in concert", "{TABLE1}": "singer", "{TABLE2}": "concert", "{OP0}": "="}, "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5": {"{VALUE0}": "5", "{COLUMN0}": "version_number", "{COLUMN1}": "template_type_code", "{TABLE0}": "templates", "{OP0}": ">"}, "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'": {"{VALUE0}": "usa", "{COLUMN0}": "first_name", "{COLUMN1}": "birth_date", "{COLUMN2}": "country_code", "{TABLE0}": "players", "{OP0}": "="}, "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'": {"{VALUE0}": "t", "{COLUMN0}": "killed", "{COLUMN1}": "injured", "{COLUMN2}": "caused_by_ship_id", "{COLUMN3}": "id", "{COLUMN4}": "tonnage", "{TABLE0}": "death", "{TABLE1}": "ship", "{OP0}": "="}, "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'": {"{VALUE0}": "boril", "{COLUMN0}": "name", "{COLUMN1}": "result", "{COLUMN2}": "bulgarian_commander", "{TABLE0}": "battle", "{OP0}": "!="}, "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'": {"{VALUE0}": "brig", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "lost_in_battle", "{COLUMN3}": "ship_type", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "="}, "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'": {"{VALUE0}": "bachelor", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "student_id", "{COLUMN4}": "degree_program_id", "{COLUMN5}": "degree_summary_name", "{TABLE0}": "students", "{TABLE1}": "student enrolment", "{TABLE2}": "degree programs", "{OP0}": "="}, "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";": {"{VALUE0}": "sky radio", "{COLUMN0}": "title", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "series_name", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";": {"{VALUE0}": "sky radio", "{COLUMN0}": "episode", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "series_name", "{TABLE0}": "tv channel", "{TABLE1}": "tv series", "{OP0}": "="}, "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'": {"{VALUE0}": "todd casey", "{COLUMN0}": "country", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "written_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'": {"{VALUE0}": "todd casey", "{COLUMN0}": "country", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "written_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'": {"{VALUE0}": "ben jones", "{COLUMN0}": "id", "{COLUMN1}": "channel", "{COLUMN2}": "directed_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008": {"{VALUE5}": "2008", "{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{COLUMN3}": "year_of_founded", "{TABLE0}": "conductor", "{OP0}": ">"}, "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'": {"{VALUE0}": "north", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "email_address", "{COLUMN3}": "state", "{TABLE0}": "owners", "{OP0}": "like"}, "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000": {"{VALUE6}": "300000", "{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{COLUMN2}": "sales", "{TABLE0}": "singer", "{TABLE1}": "song", "{OP0}": ">"}, "SELECT DISTINCT country FROM singer WHERE age  >  20": {"{VALUE0}": "20", "{COLUMN0}": "country", "{COLUMN1}": "age", "{TABLE0}": "singer", "{OP0}": ">"}, "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'": {"{VALUE0}": "hey", "{COLUMN0}": "name", "{COLUMN1}": "country", "{COLUMN2}": "song_name", "{TABLE0}": "singer", "{OP0}": "like"}, "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"": {"{VALUE0}": "usa", "{COLUMN0}": "airline", "{COLUMN1}": "abbreviation", "{COLUMN2}": "country", "{TABLE0}": "airlines", "{OP0}": "="}, "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"": {"{VALUE0}": "robbin cv", "{COLUMN0}": "document_id", "{COLUMN1}": "template_id", "{COLUMN2}": "document_description", "{COLUMN3}": "document_name", "{TABLE0}": "documents", "{OP0}": "="}, "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"": {"{VALUE0}": "data base", "{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{COLUMN2}": "document_name", "{TABLE0}": "templates", "{TABLE1}": "documents", "{OP0}": "="}, "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"": {"{VALUE0}": "bk", "{COLUMN0}": "document_name", "{COLUMN1}": "template_id", "{COLUMN2}": "template_type_code", "{TABLE0}": "templates", "{TABLE1}": "documents", "{OP0}": "="}, "select name from teacher where hometown != \"little lever urban district\"": {"{VALUE0}": "little lever urban district", "{COLUMN0}": "name", "{COLUMN1}": "hometown", "{TABLE0}": "teacher", "{OP0}": "!="}, "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"": {"{VALUE0}": "math", "{COLUMN0}": "name", "{COLUMN1}": "course", "{COLUMN2}": "course_id", "{COLUMN3}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher", "{OP0}": "="}, "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1": {"{VALUE1}": "1", "{COLUMN0}": "total_spent", "{COLUMN1}": "id", "{COLUMN2}": "visitor_id", "{COLUMN3}": "level_of_membership", "{TABLE0}": "customer", "{TABLE1}": "visit", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";": {"{VALUE0}": "the rise of the blue beetle!", "{COLUMN0}": "series_name", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "title", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "SELECT Name FROM people WHERE Nationality != \"Russia\"": {"{VALUE0}": "russia", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "people", "{OP0}": "!="}, "SELECT max(created) FROM votes WHERE state  =  'CA'": {"{VALUE0}": "ca", "{COLUMN0}": "created", "{COLUMN1}": "state", "{TABLE0}": "votes", "{OP0}": "=", "{AGG0}": "max"}, "SELECT Name FROM conductor WHERE Nationality != 'USA'": {"{VALUE0}": "usa", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "conductor", "{OP0}": "!="}, "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"": {"{VALUE0}": "live final", "{COLUMN0}": "share", "{COLUMN1}": "type", "{TABLE0}": "performance", "{OP0}": "!=", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"": {"{VALUE0}": "kyle", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{COLUMN3}": "friend_id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": "="}, "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'": {"{VALUE0}": "west", "{COLUMN0}": "role_code", "{COLUMN1}": "street", "{COLUMN2}": "city", "{COLUMN3}": "state", "{TABLE0}": "professionals", "{OP0}": "like"}, "SELECT Name FROM singer WHERE Citizenship != \"France\"": {"{VALUE0}": "france", "{COLUMN0}": "name", "{COLUMN1}": "citizenship", "{TABLE0}": "singer", "{OP0}": "!="}, "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'": {"{VALUE0}": "france", "{COLUMN0}": "age", "{COLUMN1}": "country", "{TABLE0}": "singer", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "SELECT count(*) FROM pets WHERE weight  >  10": {"{VALUE0}": "10", "{COLUMN0}": "weight", "{TABLE0}": "pets", "{OP0}": ">", "{AGG0}": "count"}, "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20": {"{VALUE5}": "20", "{COLUMN0}": "stuid", "{COLUMN1}": "age", "{TABLE0}": "student", "{TABLE1}": "has pet", "{OP0}": ">", "{AGG0}": "count"}, "SELECT petid ,  weight FROM pets WHERE pet_age  >  1": {"{VALUE0}": "1", "{COLUMN0}": "petid", "{COLUMN1}": "weight", "{COLUMN2}": "pet_age", "{TABLE0}": "pets", "{OP0}": ">"}, "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';": {"{VALUE0}": "1970", "{COLUMN0}": "maker", "{COLUMN1}": "id", "{COLUMN2}": "model", "{COLUMN3}": "makeid", "{COLUMN4}": "year", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{TABLE2}": "car names", "{TABLE3}": "cars data", "{OP0}": "="}, "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;": {"{VALUE0}": "4", "{COLUMN0}": "mpg", "{COLUMN1}": "cylinders", "{TABLE0}": "cars data", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';": {"{VALUE0}": "volvo", "{COLUMN0}": "edispl", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "model", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"": {"{VALUE0}": "jetblue airways", "{COLUMN0}": "abbreviation", "{COLUMN1}": "airline", "{TABLE0}": "airlines", "{OP0}": "="}, "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"": {"{VALUE0}": "ual", "{COLUMN0}": "airline", "{COLUMN1}": "abbreviation", "{TABLE0}": "airlines", "{OP0}": "="}, "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"": {"{VALUE0}": "jetblue airways", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "flights", "{TABLE1}": "airlines", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"": {"{VALUE0}": "ahd", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "destairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "="}, "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"": {"{VALUE0}": "w", "{COLUMN0}": "document_name", "{COLUMN1}": "template_id", "{COLUMN2}": "document_description", "{TABLE0}": "documents", "{OP0}": "like"}, "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'": {"{VALUE0}": "ppt", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{TABLE0}": "documents", "{TABLE1}": "templates", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"": {"{VALUE0}": "cv", "{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{OP0}": "=", "{AGG0}": "count"}, "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"": {"{VALUE0}": "ad", "{COLUMN0}": "template_type_description", "{COLUMN1}": "template_type_code", "{TABLE0}": "reference template types", "{OP0}": "="}, "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"": {"{VALUE0}": "book", "{COLUMN0}": "template_type_code", "{COLUMN1}": "template_type_description", "{TABLE0}": "reference template types", "{OP0}": "="}, "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"": {"{VALUE0}": "presentation", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{COLUMN2}": "template_type_description", "{TABLE0}": "reference template types", "{TABLE1}": "templates", "{OP0}": "="}, "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'": {"{VALUE0}": "summer show", "{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{OP0}": "=", "{AGG0}": "count"}, "select other_details from paragraphs where paragraph_text like 'korea'": {"{VALUE0}": "korea", "{COLUMN0}": "other_details", "{COLUMN1}": "paragraph_text", "{TABLE0}": "paragraphs", "{OP0}": "like"}, "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'": {"{VALUE0}": "welcome to ny", "{COLUMN0}": "paragraph_id", "{COLUMN1}": "paragraph_text", "{COLUMN2}": "document_id", "{COLUMN3}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{OP0}": "="}, "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"": {"{VALUE0}": "customer reviews", "{COLUMN0}": "paragraph_text", "{COLUMN1}": "document_id", "{COLUMN2}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{OP0}": "="}, "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4": {"{VALUE0}": "4", "{COLUMN0}": "age", "{COLUMN1}": "level_of_membership", "{TABLE0}": "customer", "{OP0}": "<=", "{AGG0}": "avg"}, "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009": {"{VALUE0}": "2009", "{COLUMN0}": "num_of_staff", "{COLUMN1}": "open_year", "{TABLE0}": "museum", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'": {"{VALUE0}": "plaza museum", "{COLUMN0}": "num_of_staff", "{COLUMN1}": "open_year", "{COLUMN2}": "name", "{TABLE0}": "museum", "{OP0}": "="}, "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";": {"{VALUE0}": "ben jones", "{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{TABLE0}": "cartoon", "{OP0}": "="}, "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";": {"{VALUE0}": "joseph kuhr", "{COLUMN0}": "written_by", "{TABLE0}": "cartoon", "{OP0}": "=", "{AGG0}": "count"}, "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";": {"{VALUE0}": "sky radio", "{COLUMN0}": "content", "{COLUMN1}": "series_name", "{TABLE0}": "tv channel", "{OP0}": "="}, "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";": {"{VALUE0}": "sky radio", "{COLUMN0}": "package_option", "{COLUMN1}": "series_name", "{TABLE0}": "tv channel", "{OP0}": "="}, "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";": {"{VALUE0}": "a love of a lifetime", "{COLUMN0}": "air_date", "{COLUMN1}": "episode", "{TABLE0}": "tv series", "{OP0}": "="}, "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";": {"{VALUE0}": "a love of a lifetime", "{COLUMN0}": "weekly_rank", "{COLUMN1}": "episode", "{TABLE0}": "tv series", "{OP0}": "="}, "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000": {"{VALUE0}": "200000", "{COLUMN0}": "final_table_made", "{COLUMN1}": "earnings", "{TABLE0}": "poker player", "{OP0}": "<", "{AGG0}": "max"}, "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000": {"{VALUE6}": "300000", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "earnings", "{TABLE0}": "people", "{TABLE1}": "poker player", "{OP0}": ">"}, "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200": {"{VALUE6}": "200", "{COLUMN0}": "earnings", "{COLUMN1}": "people_id", "{COLUMN2}": "height", "{TABLE0}": "people", "{TABLE1}": "poker player", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"": {"{VALUE0}": "anguilla", "{COLUMN0}": "continent", "{COLUMN1}": "name", "{TABLE0}": "country", "{OP0}": "="}, "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"": {"{VALUE0}": "kabul", "{COLUMN0}": "region", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "name", "{TABLE0}": "country", "{TABLE1}": "city", "{OP0}": "="}, "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"": {"{VALUE0}": "angola", "{COLUMN0}": "population", "{COLUMN1}": "region", "{COLUMN2}": "name", "{TABLE0}": "country", "{OP0}": "="}, "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"": {"{VALUE0}": "asia", "{COLUMN0}": "population", "{COLUMN1}": "gnp", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "sum", "{AGG1}": "max"}, "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"": {"{VALUE0}": "gelderland", "{COLUMN0}": "population", "{COLUMN1}": "district", "{TABLE0}": "city", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"": {"{VALUE0}": "us territory", "{COLUMN0}": "gnp", "{COLUMN1}": "population", "{COLUMN2}": "governmentform", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "sum"}, "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"": {"{VALUE0}": "kyle", "{COLUMN0}": "grade", "{COLUMN1}": "name", "{TABLE0}": "high schooler", "{OP0}": "="}, "SELECT name FROM Highschooler WHERE grade  =  10": {"{VALUE0}": "10", "{COLUMN0}": "name", "{COLUMN1}": "grade", "{TABLE0}": "high schooler", "{OP0}": "="}, "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"": {"{VALUE0}": "kyle", "{COLUMN0}": "id", "{COLUMN1}": "name", "{TABLE0}": "high schooler", "{OP0}": "="}, "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"": {"{VALUE0}": "kyle", "{COLUMN0}": "student_id", "{COLUMN1}": "id", "{COLUMN2}": "name", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"": {"{VALUE0}": "kyle", "{COLUMN0}": "student_id", "{COLUMN1}": "id", "{COLUMN2}": "name", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"": {"{VALUE0}": "aircon", "{COLUMN0}": "feature_type_name", "{COLUMN1}": "feature_type_code", "{COLUMN2}": "feature_name", "{TABLE0}": "other available features", "{TABLE1}": "reference feature types", "{OP0}": "="}, "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'": {"{VALUE0}": "cat", "{COLUMN0}": "stuid", "{COLUMN1}": "petid", "{COLUMN2}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "="}, "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'": {"{VALUE0}": "smith", "{COLUMN0}": "petid", "{COLUMN1}": "stuid", "{COLUMN2}": "lname", "{TABLE0}": "student", "{TABLE1}": "has pet", "{OP0}": "="}, "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;": {"{VALUE9}": "1980", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "model list", "{TABLE1}": "car names", "{TABLE2}": "cars data", "{OP0}": ">"}, "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';": {"{VALUE0}": "amc hornet sportabout  ( sw ) ", "{COLUMN0}": "accelerate", "{COLUMN1}": "id", "{COLUMN2}": "makeid", "{COLUMN3}": "make", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": "="}, "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;": {"{VALUE0}": "150", "{COLUMN0}": "horsepower", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count"}, "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;": {"{VALUE0}": "1980", "{COLUMN0}": "horsepower", "{COLUMN1}": "year", "{TABLE0}": "cars data", "{OP0}": "<", "{AGG0}": "avg"}, "select avg(horsepower) from cars_data where year  <  1980;": {"{VALUE0}": "1980", "{COLUMN0}": "horsepower", "{COLUMN1}": "year", "{TABLE0}": "cars data", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;": {"{VALUE0}": "4", "{COLUMN0}": "cylinders", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count"}, "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';": {"{VALUE0}": "american motor company", "{COLUMN0}": "id", "{COLUMN1}": "maker", "{COLUMN2}": "fullname", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{OP0}": "=", "{AGG0}": "count"}, "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;": {"{VALUE0}": "6", "{COLUMN0}": "cylinders", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"": {"{VALUE0}": "jetblue airways", "{COLUMN0}": "country", "{COLUMN1}": "airline", "{TABLE0}": "airlines", "{OP0}": "="}, "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"": {"{VALUE0}": "usa", "{COLUMN0}": "country", "{TABLE0}": "airlines", "{OP0}": "=", "{AGG0}": "count"}, "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"": {"{VALUE0}": "aberdeen", "{COLUMN0}": "airportname", "{COLUMN1}": "city", "{TABLE0}": "airports", "{OP0}": "="}, "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"": {"{VALUE0}": "apg", "{COLUMN0}": "sourceairport", "{TABLE0}": "flights", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"": {"{VALUE0}": "ato", "{COLUMN0}": "destairport", "{TABLE0}": "flights", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"": {"{VALUE0}": "aberdeen", "{COLUMN0}": "sourceairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"": {"{VALUE0}": "aberdeen", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"": {"{VALUE0}": "ahd", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "="}, "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"": {"{VALUE0}": "united airlines", "{COLUMN0}": "flightno", "{COLUMN1}": "uid", "{COLUMN2}": "airline", "{TABLE0}": "flights", "{TABLE1}": "airlines", "{OP0}": "="}, "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"": {"{VALUE0}": "apg", "{COLUMN0}": "flightno", "{COLUMN1}": "sourceairport", "{TABLE0}": "flights", "{OP0}": "="}, "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"": {"{VALUE0}": "apg", "{COLUMN0}": "flightno", "{COLUMN1}": "destairport", "{TABLE0}": "flights", "{OP0}": "="}, "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"": {"{VALUE0}": "aberdeen", "{COLUMN0}": "flightno", "{COLUMN1}": "sourceairport", "{COLUMN2}": "airportcode", "{COLUMN3}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "="}, "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"": {"{VALUE0}": "aberdeen", "{COLUMN0}": "flightno", "{COLUMN1}": "destairport", "{COLUMN2}": "airportcode", "{COLUMN3}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "="}, "SELECT count(*) FROM visitor WHERE age  <  30": {"{VALUE0}": "30", "{COLUMN0}": "age", "{TABLE0}": "customer", "{OP0}": "<", "{AGG0}": "count"}, "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'": {"{VALUE0}": "captured", "{COLUMN0}": "disposition_of_ship", "{TABLE0}": "ship", "{OP0}": "=", "{AGG0}": "count"}, "SELECT note FROM death WHERE note LIKE '%East%'": {"{VALUE0}": "east", "{COLUMN0}": "note", "{TABLE0}": "death", "{OP0}": "like"}, "SELECT course_description FROM Courses WHERE course_name  =  'math'": {"{VALUE0}": "math", "{COLUMN0}": "course_description", "{COLUMN1}": "course_name", "{TABLE0}": "courses", "{OP0}": "="}, "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'": {"{VALUE0}": "port chelsea", "{COLUMN0}": "zip_postcode", "{COLUMN1}": "city", "{TABLE0}": "addresses", "{OP0}": "="}, "SELECT section_description FROM Sections WHERE section_name  =  'h'": {"{VALUE0}": "h", "{COLUMN0}": "section_description", "{COLUMN1}": "section_name", "{TABLE0}": "sections", "{OP0}": "="}, "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";": {"{VALUE0}": "english", "{COLUMN0}": "language", "{TABLE0}": "tv channel", "{OP0}": "=", "{AGG0}": "count"}, "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"": {"{VALUE0}": "yes", "{COLUMN0}": "package_option", "{COLUMN1}": "series_name", "{COLUMN2}": "hight_definition_tv", "{TABLE0}": "tv channel", "{OP0}": "="}, "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'": {"{VALUE0}": "english", "{COLUMN0}": "pixel_aspect_ratio_par", "{COLUMN1}": "country", "{COLUMN2}": "language", "{TABLE0}": "tv channel", "{OP0}": "!="}, "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'": {"{VALUE0}": "jessie alloway", "{COLUMN0}": "contestant_name", "{TABLE0}": "contestants", "{OP0}": "!="}, "SELECT Name FROM country WHERE IndepYear  >  1950": {"{VALUE0}": "1950", "{COLUMN0}": "name", "{COLUMN1}": "indepyear", "{TABLE0}": "country", "{OP0}": ">"}, "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"": {"{VALUE0}": "caribbean", "{COLUMN0}": "surfacearea", "{COLUMN1}": "region", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"": {"{VALUE0}": "brazil", "{COLUMN0}": "population", "{COLUMN1}": "lifeexpectancy", "{COLUMN2}": "name", "{TABLE0}": "country", "{OP0}": "="}, "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"": {"{VALUE0}": "central africa", "{COLUMN0}": "lifeexpectancy", "{COLUMN1}": "region", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"": {"{VALUE0}": "aruba", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "name", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count"}, "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"": {"{VALUE0}": "chinese", "{COLUMN0}": "continent", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count"}, "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"": {"{VALUE0}": "english", "{COLUMN0}": "countrycode", "{COLUMN1}": "language", "{TABLE0}": "countrylanguage", "{OP0}": "!="}, "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';": {"{VALUE0}": "france", "{COLUMN0}": "country", "{COLUMN1}": "countryid", "{COLUMN2}": "countryname", "{TABLE0}": "car makers", "{TABLE1}": "countries", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';": {"{VALUE0}": "usa", "{COLUMN0}": "maker", "{COLUMN1}": "id", "{COLUMN2}": "country", "{COLUMN3}": "countryid", "{COLUMN4}": "countryname", "{TABLE0}": "model list", "{TABLE1}": "car makers", "{TABLE2}": "countries", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;": {"{VALUE0}": "1980", "{COLUMN0}": "year", "{TABLE0}": "cars data", "{OP0}": "=", "{AGG0}": "count"}, "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"": {"{VALUE0}": "anthony", "{COLUMN0}": "airportcode", "{COLUMN1}": "airportname", "{COLUMN2}": "city", "{TABLE0}": "airports", "{OP0}": "="}, "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"": {"{VALUE0}": "alton", "{COLUMN0}": "city", "{COLUMN1}": "country", "{COLUMN2}": "airportname", "{TABLE0}": "airports", "{OP0}": "="}, "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"": {"{VALUE0}": "ako", "{COLUMN0}": "airportname", "{COLUMN1}": "airportcode", "{TABLE0}": "airports", "{OP0}": "="}, "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'": {"{VALUE0}": "engineer", "{COLUMN0}": "department_id", "{COLUMN1}": "department_name", "{TABLE0}": "departments", "{TABLE1}": "degree programs", "{OP0}": "=", "{AGG0}": "count"}, "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'": {"{VALUE0}": "computer", "{COLUMN0}": "department_description", "{COLUMN1}": "department_name", "{TABLE0}": "departments", "{OP0}": "like"}, "select contestant_name from contestants where contestant_name like \"%al%\"": {"{VALUE0}": "al", "{COLUMN0}": "contestant_name", "{TABLE0}": "contestants", "{OP0}": "like"}, "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"": {"{VALUE0}": "republic", "{COLUMN0}": "governmentform", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"": {"{VALUE0}": "africa", "{COLUMN0}": "governmentform", "{COLUMN1}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "count"}, "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"": {"{VALUE0}": "english", "{COLUMN0}": "countrycode", "{COLUMN1}": "language", "{TABLE0}": "countrylanguage", "{OP0}": "="}, "SELECT count(*) FROM country WHERE continent  =  \"Asia\"": {"{VALUE0}": "asia", "{COLUMN0}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "count"}, "SELECT line_1 ,  line_2 FROM addresses": {"{COLUMN0}": "line_1", "{COLUMN1}": "line_2", "{TABLE0}": "addresses"}, "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs": {"{COLUMN0}": "first_name", "{COLUMN1}": "name", "{TABLE0}": "professionals", "{TABLE1}": "owners", "{TABLE2}": "dogs"}, "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id": {"{COLUMN0}": "first_name", "{COLUMN1}": "name", "{COLUMN2}": "owner_id", "{TABLE0}": "owners", "{TABLE1}": "dogs"}, "SELECT document_id ,  document_name ,  document_description FROM Documents": {"{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{COLUMN2}": "document_description", "{TABLE0}": "documents"}, "SELECT template_id ,  version_number ,  template_type_code FROM Templates": {"{COLUMN0}": "template_id", "{COLUMN1}": "version_number", "{COLUMN2}": "template_type_code", "{TABLE0}": "templates"}, "SELECT vote_id ,  phone_number ,  state FROM votes": {"{COLUMN0}": "vote_id", "{COLUMN1}": "phone_number", "{COLUMN2}": "state", "{TABLE0}": "votes"}, "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id": {"{COLUMN0}": "professional_id", "{COLUMN1}": "role_code", "{COLUMN2}": "email_address", "{TABLE0}": "professionals", "{TABLE1}": "treatments"}, "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "size_code", "{COLUMN3}": "owner_id", "{TABLE0}": "owners", "{TABLE1}": "dogs"}, "SELECT email_address ,  cell_number ,  home_phone FROM professionals": {"{COLUMN0}": "email_address", "{COLUMN1}": "cell_number", "{COLUMN2}": "home_phone", "{TABLE0}": "professionals"}, "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID": {"{COLUMN0}": "title", "{COLUMN1}": "name", "{COLUMN2}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song"}, "select max(capacity), average from stadium": {"{COLUMN0}": "capacity", "{COLUMN1}": "average", "{TABLE0}": "stadium", "{AGG0}": "max"}, "SELECT Age ,  Hometown FROM teacher": {"{COLUMN0}": "age", "{COLUMN1}": "hometown", "{TABLE0}": "teacher"}, "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID": {"{COLUMN0}": "name", "{COLUMN1}": "course", "{COLUMN2}": "course_id", "{COLUMN3}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher"}, "SELECT name ,  date FROM battle": {"{COLUMN0}": "name", "{COLUMN1}": "date", "{TABLE0}": "battle"}, "SELECT DISTINCT state ,  created FROM votes": {"{COLUMN0}": "state", "{COLUMN1}": "created", "{TABLE0}": "votes"}, "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID": {"{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{TABLE0}": "conductor"}, "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{COLUMN3}": "liked_id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{TABLE2}": "likes"}, "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals": {"{COLUMN0}": "state", "{TABLE0}": "owners", "{TABLE1}": "professionals"}, "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id": {"{COLUMN0}": "date_of_treatment", "{COLUMN1}": "first_name", "{COLUMN2}": "professional_id", "{TABLE0}": "treatments", "{TABLE1}": "professionals"}, "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code": {"{COLUMN0}": "cost_of_treatment", "{COLUMN1}": "treatment_type_description", "{COLUMN2}": "treatment_type_code", "{TABLE0}": "treatments", "{TABLE1}": "treatment types"}, "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id": {"{COLUMN0}": "date_arrived", "{COLUMN1}": "date_departed", "{COLUMN2}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments"}, "SELECT date_arrived ,  date_departed FROM Dogs": {"{COLUMN0}": "date_arrived", "{COLUMN1}": "date_departed", "{TABLE0}": "dogs"}, "SELECT DISTINCT breed_code ,  size_code FROM dogs": {"{COLUMN0}": "breed_code", "{COLUMN1}": "size_code", "{TABLE0}": "dogs"}, "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code": {"{COLUMN0}": "first_name", "{COLUMN1}": "treatment_type_description", "{COLUMN2}": "professional_id", "{COLUMN3}": "treatment_type_code", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{TABLE2}": "treatment types"}, "SELECT Birth_Year ,  Citizenship FROM singer": {"{COLUMN0}": "birth_year", "{COLUMN1}": "citizenship", "{TABLE0}": "singer"}, "select avg(capacity) ,  max(capacity) from stadium": {"{COLUMN0}": "capacity", "{TABLE0}": "stadium", "{AGG0}": "avg", "{AGG1}": "max"}, "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid": {"{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet"}, "SELECT Maker ,  Model FROM MODEL_LIST;": {"{COLUMN0}": "maker", "{COLUMN1}": "model", "{TABLE0}": "model list"}, "SELECT min(Number_products) ,  max(Number_products) FROM shop": {"{COLUMN0}": "number_products", "{TABLE0}": "shop", "{AGG0}": "min", "{AGG1}": "max"}, "SELECT sum(bonus) FROM evaluation": {"{COLUMN0}": "bonus", "{TABLE0}": "evaluation", "{AGG0}": "sum"}, "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents": {"{COLUMN0}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents"}, "SELECT DISTINCT template_type_code FROM Templates": {"{COLUMN0}": "template_type_code", "{TABLE0}": "templates"}, "SELECT min(Version_Number) ,  template_type_code FROM Templates": {"{COLUMN0}": "version_number", "{COLUMN1}": "template_type_code", "{TABLE0}": "templates", "{AGG0}": "min"}, "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID": {"{COLUMN0}": "template_type_description", "{COLUMN1}": "template_type_code", "{COLUMN2}": "template_id", "{TABLE0}": "reference template types", "{TABLE1}": "templates", "{TABLE2}": "documents"}, "SELECT count(DISTINCT country_code) FROM players": {"{COLUMN0}": "country_code", "{TABLE0}": "players", "{AGG0}": "count"}, "SELECT count(DISTINCT RESULT) FROM battle": {"{COLUMN0}": "result", "{TABLE0}": "battle", "{AGG0}": "count"}, "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id": {"{COLUMN0}": "course_name", "{COLUMN1}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "student enrolment courses"}, "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;": {"{COLUMN0}": "series_name", "{COLUMN1}": "content", "{TABLE0}": "tv channel", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT Final_Table_Made ,  Best_Finish FROM poker_player": {"{COLUMN0}": "final_table_made", "{COLUMN1}": "best_finish", "{TABLE0}": "poker player"}, "SELECT avg(Attendance) FROM SHOW": {"{COLUMN0}": "attendance", "{TABLE0}": "show", "{AGG0}": "avg"}, "SELECT count(DISTINCT Nationality) FROM conductor": {"{COLUMN0}": "nationality", "{TABLE0}": "conductor", "{AGG0}": "count"}, "SELECT name ,  grade FROM Highschooler": {"{COLUMN0}": "name", "{COLUMN1}": "grade", "{TABLE0}": "high schooler"}, "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend": {"{COLUMN0}": "id", "{COLUMN1}": "student_id", "{TABLE0}": "high schooler", "{TABLE1}": "friend"}, "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "high schooler", "{TABLE1}": "friend"}, "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes": {"{COLUMN0}": "student_id", "{COLUMN1}": "liked_id", "{TABLE0}": "friend", "{TABLE1}": "likes"}, "SELECT avg(age) FROM Dogs": {"{COLUMN0}": "age", "{TABLE0}": "dogs", "{AGG0}": "avg"}, "SELECT charge_type ,  charge_amount FROM Charges": {"{COLUMN0}": "charge_type", "{COLUMN1}": "charge_amount", "{TABLE0}": "charges"}, "SELECT max(charge_amount) FROM Charges": {"{COLUMN0}": "charge_amount", "{TABLE0}": "charges", "{AGG0}": "max"}, "SELECT count(*) FROM singer": {"{TABLE0}": "singer", "{AGG0}": "count"}, "SELECT count(DISTINCT pettype) FROM pets": {"{COLUMN0}": "pettype", "{TABLE0}": "pets", "{AGG0}": "count"}, "SELECT count(*) FROM CONTINENTS;": {"{TABLE0}": "continents", "{AGG0}": "count"}, "SELECT count(*) FROM COUNTRIES;": {"{TABLE0}": "countries", "{AGG0}": "count"}, "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;": {"{COLUMN0}": "countryname", "{COLUMN1}": "countryid", "{COLUMN2}": "country", "{TABLE0}": "countries", "{TABLE1}": "car makers"}, "SELECT count(*) FROM AIRLINES": {"{TABLE0}": "airlines", "{AGG0}": "count"}, "SELECT count(*) FROM AIRPORTS": {"{TABLE0}": "airports", "{AGG0}": "count"}, "SELECT count(*) FROM FLIGHTS": {"{TABLE0}": "flights", "{AGG0}": "count"}, "SELECT count(*) FROM employee": {"{TABLE0}": "employee", "{AGG0}": "count"}, "SELECT * FROM hiring": {"{TABLE0}": "hiring"}, "SELECT count(DISTINCT LOCATION) FROM shop": {"{COLUMN0}": "location", "{TABLE0}": "shop", "{AGG0}": "count"}, "SELECT count(*) FROM Documents": {"{TABLE0}": "documents", "{AGG0}": "count"}, "SELECT count(DISTINCT template_id) FROM Documents": {"{COLUMN0}": "template_id", "{TABLE0}": "documents", "{AGG0}": "count"}, "SELECT count(*) FROM Templates": {"{TABLE0}": "templates", "{AGG0}": "count"}, "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id": {"{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents"}, "SELECT template_type_code ,  template_type_description FROM Ref_template_types": {"{COLUMN0}": "template_type_code", "{COLUMN1}": "template_type_description", "{TABLE0}": "reference template types"}, "SELECT count(*) FROM Paragraphs": {"{TABLE0}": "paragraphs", "{AGG0}": "count"}, "SELECT count(*) FROM teacher": {"{TABLE0}": "teacher", "{AGG0}": "count"}, "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit": {"{COLUMN0}": "num_of_ticket", "{TABLE0}": "visit", "{AGG0}": "avg", "{AGG1}": "max"}, "SELECT count(*) FROM players": {"{TABLE0}": "players", "{AGG0}": "count"}, "SELECT count(*) FROM matches": {"{TABLE0}": "matches", "{AGG0}": "count"}, "SELECT avg(loser_age) ,  avg(winner_age) FROM matches": {"{COLUMN0}": "loser_age", "{COLUMN1}": "winner_age", "{TABLE0}": "matches", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT avg(winner_rank) FROM matches": {"{COLUMN0}": "winner_rank", "{TABLE0}": "matches", "{AGG0}": "avg"}, "SELECT min(loser_rank) FROM matches": {"{COLUMN0}": "loser_rank", "{TABLE0}": "matches", "{AGG0}": "min"}, "SELECT count(DISTINCT loser_name) FROM matches": {"{COLUMN0}": "loser_name", "{TABLE0}": "matches", "{AGG0}": "count"}, "SELECT max(killed) ,  min(killed) FROM death": {"{COLUMN0}": "killed", "{TABLE0}": "death", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT count(*) FROM Courses": {"{TABLE0}": "courses", "{AGG0}": "count"}, "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs": {"{COLUMN0}": "degree_summary_name", "{TABLE0}": "degree programs", "{AGG0}": "count"}, "SELECT section_name ,  section_description FROM Sections": {"{COLUMN0}": "section_name", "{COLUMN1}": "section_description", "{TABLE0}": "sections"}, "SELECT avg(transcript_date) FROM Transcripts": {"{COLUMN0}": "transcript_date", "{TABLE0}": "transcripts", "{AGG0}": "avg"}, "SELECT count(*) FROM Transcripts": {"{TABLE0}": "transcripts", "{AGG0}": "count"}, "SELECT count(DISTINCT current_address_id) FROM Students": {"{COLUMN0}": "current_address_id", "{TABLE0}": "students", "{AGG0}": "count"}, "SELECT max(SHARE) , min(SHARE) FROM TV_series;": {"{COLUMN0}": "share", "{TABLE0}": "tv series", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT avg(Earnings) FROM poker_player": {"{COLUMN0}": "earnings", "{TABLE0}": "poker player", "{AGG0}": "avg"}, "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "people", "{TABLE1}": "poker player"}, "SELECT count(DISTINCT Nationality) FROM people": {"{COLUMN0}": "nationality", "{TABLE0}": "people", "{AGG0}": "count"}, "SELECT max(area_code) ,  min(area_code) FROM area_code_state": {"{COLUMN0}": "area_code", "{TABLE0}": "area code state", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage": {"{COLUMN0}": "language", "{TABLE0}": "countrylanguage", "{AGG0}": "count"}, "SELECT count(*) FROM conductor": {"{TABLE0}": "conductor", "{AGG0}": "count"}, "SELECT grade FROM Highschooler": {"{COLUMN0}": "grade", "{TABLE0}": "high schooler"}, "SELECT count(DISTINCT dog_id) FROM Treatments": {"{COLUMN0}": "dog_id", "{TABLE0}": "treatments", "{AGG0}": "count"}, "SELECT max(age) FROM Dogs": {"{COLUMN0}": "age", "{TABLE0}": "dogs", "{AGG0}": "max"}, "SELECT avg(injured) FROM death": {"{COLUMN0}": "injured", "{TABLE0}": "death", "{AGG0}": "avg"}, "SELECT count(DISTINCT department_id) FROM Degree_Programs": {"{COLUMN0}": "department_id", "{TABLE0}": "degree programs", "{AGG0}": "count"}, "SELECT count(*) FROM poker_player": {"{TABLE0}": "poker player", "{AGG0}": "count"}, "SELECT count(*) FROM area_code_state": {"{TABLE0}": "area code state", "{AGG0}": "count"}, "SELECT count(*) FROM Highschooler": {"{TABLE0}": "high schooler", "{AGG0}": "count"}, "SELECT count(DISTINCT professional_id) FROM Treatments": {"{COLUMN0}": "professional_id", "{TABLE0}": "treatments", "{AGG0}": "count"}, "SELECT count(*) FROM Other_Available_Features": {"{TABLE0}": "other available features", "{AGG0}": "count"}, "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "address_id", "{COLUMN1}": "line_1", "{COLUMN2}": "line_2", "{COLUMN3}": "current_address_id", "{TABLE0}": "addresses", "{TABLE1}": "students", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "student_id", "{COLUMN1}": "first_name", "{COLUMN2}": "middle_name", "{COLUMN3}": "last_name", "{TABLE0}": "students", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "owner_id", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "dogs", "{TABLE1}": "owners", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "owner_id", "{COLUMN1}": "last_name", "{COLUMN2}": "dog_id", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{TABLE2}": "treatments", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "employee_id", "{TABLE0}": "employee", "{TABLE1}": "evaluation", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1": {"{VALUE2}": "1", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "caused_by_ship_id", "{TABLE0}": "death", "{TABLE1}": "ship", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "contestant_number", "{COLUMN1}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "shop_id", "{TABLE0}": "hiring", "{TABLE1}": "shop", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "museum_id", "{COLUMN1}": "name", "{TABLE0}": "museum", "{TABLE1}": "visit", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{TABLE0}": "conductor", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "breed_name", "{COLUMN1}": "breed_code", "{TABLE0}": "breeds", "{TABLE1}": "dogs", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "year", "{TABLE0}": "concert", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{TABLE0}": "documents", "{TABLE1}": "templates", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "hometown", "{TABLE0}": "teacher", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "year", "{TABLE0}": "matches", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "winner_name", "{COLUMN1}": "winner_rank_points", "{TABLE0}": "matches", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "country_code", "{TABLE0}": "players", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "department_name", "{COLUMN1}": "department_id", "{TABLE0}": "degree programs", "{TABLE1}": "departments", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "language", "{TABLE0}": "tv channel", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "asc"}, "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "nationality", "{TABLE0}": "people", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "citizenship", "{TABLE0}": "singer", "{AGG0}": "count", "{SC0}": "desc"}, "select citizenship from singer group by citizenship order by count(*) desc limit 1": {"{VALUE0}": "1", "{COLUMN0}": "citizenship", "{TABLE0}": "singer", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;": {"{VALUE1}": "1", "{COLUMN0}": "countryname", "{COLUMN1}": "country", "{COLUMN2}": "countryid", "{TABLE0}": "car makers", "{TABLE1}": "countries", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "model", "{TABLE0}": "car names", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "city", "{COLUMN1}": "airportcode", "{COLUMN2}": "destairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "city", "{COLUMN1}": "airportcode", "{COLUMN2}": "sourceairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "airportcode", "{COLUMN1}": "destairport", "{COLUMN2}": "sourceairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "select t2.department_name ,  t1.department_id from degree_programs as t1 join departments as t2 on t1.department_id  =  t2.department_id group by t1.department_id order by count(*) desc limit 1": {"{VALUE1}": "1", "{COLUMN0}": "department_name", "{COLUMN1}": "department_id", "{TABLE0}": "degree programs", "{TABLE1}": "departments", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "semester_name", "{COLUMN1}": "semester_id", "{TABLE0}": "semesters", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "degree_summary_name", "{COLUMN1}": "degree_program_id", "{TABLE0}": "degree programs", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "degree_program_id", "{COLUMN1}": "degree_summary_name", "{TABLE0}": "degree programs", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "course_name", "{COLUMN1}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "student enrolment courses", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "transcript_date", "{COLUMN1}": "transcript_id", "{TABLE0}": "transcript contents", "{TABLE1}": "transcripts", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "area_code", "{COLUMN1}": "state", "{TABLE0}": "area code state", "{TABLE1}": "votes", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "continent", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "language", "{TABLE0}": "countrylanguage", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "student_course_id", "{TABLE0}": "transcript contents", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "country", "{TABLE0}": "tv channel", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;": {"{COLUMN0}": "contid", "{COLUMN1}": "continent", "{TABLE0}": "continents", "{TABLE1}": "countries", "{AGG0}": "count"}, "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id": {"{COLUMN0}": "name", "{COLUMN1}": "stadium_id", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{AGG0}": "count"}, "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown": {"{COLUMN0}": "hometown", "{TABLE0}": "teacher", "{AGG0}": "count"}, "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality": {"{COLUMN0}": "nationality", "{TABLE0}": "people", "{AGG0}": "count"}, "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship": {"{COLUMN0}": "citizenship", "{TABLE0}": "singer", "{AGG0}": "count"}, "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship": {"{COLUMN0}": "citizenship", "{COLUMN1}": "net_worth_millions", "{TABLE0}": "singer", "{AGG0}": "max"}, "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name": {"{COLUMN0}": "name", "{COLUMN1}": "sales", "{COLUMN2}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song", "{AGG0}": "sum"}, "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id": {"{COLUMN0}": "concert_name", "{COLUMN1}": "theme", "{COLUMN2}": "concert_id", "{TABLE0}": "singer in concert", "{TABLE1}": "concert", "{AGG0}": "count"}, "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id": {"{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{TABLE0}": "singer in concert", "{TABLE1}": "singer", "{AGG0}": "count"}, "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;": {"{COLUMN0}": "fullname", "{COLUMN1}": "id", "{COLUMN2}": "maker", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{AGG0}": "count"}, "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;": {"{COLUMN0}": "fullname", "{COLUMN1}": "id", "{COLUMN2}": "maker", "{TABLE0}": "model list", "{TABLE1}": "car makers", "{AGG0}": "count"}, "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;": {"{COLUMN0}": "weight", "{COLUMN1}": "year", "{TABLE0}": "cars data", "{AGG0}": "avg"}, "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name": {"{COLUMN0}": "name", "{COLUMN1}": "shop_id", "{TABLE0}": "hiring", "{TABLE1}": "shop", "{AGG0}": "count"}, "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id": {"{COLUMN0}": "template_id", "{TABLE0}": "documents", "{AGG0}": "count"}, "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id": {"{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{AGG0}": "count"}, "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name": {"{COLUMN0}": "ranking", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{TABLE0}": "players", "{TABLE1}": "rankings", "{AGG0}": "avg"}, "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name": {"{COLUMN0}": "ranking_points", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{TABLE0}": "players", "{TABLE1}": "rankings", "{AGG0}": "sum"}, "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{AGG0}": "count"}, "SELECT country ,  count(*) FROM singer GROUP BY country": {"{COLUMN0}": "country", "{TABLE0}": "singer", "{AGG0}": "count"}, "select t2.concert_name ,  t2.theme ,  count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id  =  t2.concert_id group by t2.concert_id": {"{COLUMN0}": "concert_name", "{COLUMN1}": "theme", "{COLUMN2}": "concert_id", "{TABLE0}": "singer in concert", "{TABLE1}": "concert", "{AGG0}": "count"}, "SELECT max(weight) ,  petType FROM pets GROUP BY petType": {"{COLUMN0}": "weight", "{COLUMN1}": "pettype", "{TABLE0}": "pets", "{AGG0}": "max"}, "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid": {"{COLUMN0}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{AGG0}": "count"}, "select count(*) ,  t1.stuid from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid group by t1.stuid": {"{COLUMN0}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{AGG0}": "count"}, "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;": {"{COLUMN0}": "continent", "{COLUMN1}": "contid", "{COLUMN2}": "countryid", "{COLUMN3}": "country", "{TABLE0}": "continents", "{TABLE1}": "countries", "{TABLE2}": "car makers", "{AGG0}": "count"}, "select count(*) ,  t2.fullname from model_list as t1 join car_makers as t2 on t1.maker  =  t2.id group by t2.id;": {"{COLUMN0}": "fullname", "{COLUMN1}": "maker", "{COLUMN2}": "id", "{TABLE0}": "model list", "{TABLE1}": "car makers", "{AGG0}": "count"}, "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;": {"{COLUMN0}": "accelerate", "{COLUMN1}": "cylinders", "{TABLE0}": "cars data", "{AGG0}": "max"}, "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION": {"{COLUMN0}": "location", "{TABLE0}": "shop", "{AGG0}": "count"}, "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code": {"{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{AGG0}": "count"}, "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code": {"{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents", "{AGG0}": "count"}, "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name": {"{COLUMN0}": "name", "{COLUMN1}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher", "{AGG0}": "count"}, "SELECT count(*) ,  country_code FROM players GROUP BY country_code": {"{COLUMN0}": "country_code", "{TABLE0}": "players", "{AGG0}": "count"}, "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date": {"{COLUMN0}": "tours", "{COLUMN1}": "ranking_date", "{TABLE0}": "rankings", "{AGG0}": "sum"}, "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR": {"{COLUMN0}": "year", "{TABLE0}": "matches", "{AGG0}": "count"}, "SELECT count(*) ,  hand FROM players GROUP BY hand": {"{COLUMN0}": "hand", "{TABLE0}": "players", "{AGG0}": "count"}, "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by": {"{COLUMN0}": "directed_by", "{TABLE0}": "cartoon", "{AGG0}": "count"}, "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode": {"{COLUMN0}": "language", "{COLUMN1}": "countrycode", "{COLUMN2}": "percentage", "{TABLE0}": "countrylanguage", "{AGG0}": "max"}, "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company": {"{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{AGG0}": "count"}, "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id": {"{COLUMN0}": "student_id", "{TABLE0}": "friend", "{AGG0}": "count"}, "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{AGG0}": "count"}, "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id": {"{COLUMN0}": "student_id", "{TABLE0}": "likes", "{AGG0}": "count"}, "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code": {"{COLUMN0}": "property_type_description", "{COLUMN1}": "property_type_code", "{TABLE0}": "properties", "{TABLE1}": "reference property types"}, "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype": {"{COLUMN0}": "pet_age", "{COLUMN1}": "pettype", "{TABLE0}": "pets", "{AGG0}": "avg", "{AGG1}": "max"}, "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype": {"{COLUMN0}": "weight", "{COLUMN1}": "pettype", "{TABLE0}": "pets", "{AGG0}": "avg"}, "SELECT count(*) ,  city FROM employee GROUP BY city": {"{COLUMN0}": "city", "{TABLE0}": "employee", "{AGG0}": "count"}, "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE": {"{COLUMN0}": "language", "{TABLE0}": "tv channel", "{AGG0}": "count"}, "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade": {"{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{AGG0}": "count"}, "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "age", "{COLUMN3}": "visitor_id", "{TABLE0}": "customer", "{TABLE1}": "visit", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2": {"{VALUE5}": "2", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "student_id", "{TABLE0}": "students", "{TABLE1}": "student enrolment", "{OP0}": "=", "{AGG0}": "count"}, "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2": {"{VALUE0}": "2", "{COLUMN0}": "language", "{COLUMN1}": "name", "{COLUMN2}": "code", "{COLUMN3}": "countrycode", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2": {"{VALUE4}": "2", "{COLUMN0}": "professional_id", "{COLUMN1}": "role_code", "{COLUMN2}": "first_name", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2": {"{VALUE3}": "2", "{COLUMN0}": "professional_id", "{COLUMN1}": "cell_number", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;": {"{VALUE7}": "3", "{COLUMN0}": "fullname", "{COLUMN1}": "id", "{COLUMN2}": "maker", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10": {"{VALUE6}": "10", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200": {"{VALUE6}": "200", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "<", "{AGG0}": "count"}, "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3": {"{VALUE0}": "3", "{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{OP0}": "<", "{AGG0}": "count"}, "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10": {"{VALUE0}": "10", "{COLUMN0}": "tourney_name", "{TABLE0}": "matches", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2": {"{VALUE3}": "2", "{COLUMN0}": "course_name", "{COLUMN1}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "sections", "{OP0}": "<=", "{AGG0}": "count"}, "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2": {"{VALUE3}": "2", "{COLUMN0}": "contestant_number", "{COLUMN1}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{TABLE0}": "conductor", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3": {"{VALUE6}": "3", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song", "{OP0}": ">", "{AGG0}": "count"}, "select count(*) from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  2": {"{VALUE1}": "2", "{COLUMN0}": "countryid", "{COLUMN1}": "country", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "hometown", "{TABLE0}": "teacher", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "name", "{COLUMN1}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50": {"{VALUE0}": "50", "{COLUMN0}": "country_code", "{TABLE0}": "players", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "transcript_date", "{COLUMN1}": "transcript_id", "{TABLE0}": "transcript contents", "{TABLE1}": "transcripts", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2": {"{VALUE0}": "2", "{COLUMN0}": "id", "{COLUMN1}": "country", "{TABLE0}": "tv channel", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "nationality", "{TABLE0}": "people", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "year_of_founded", "{COLUMN1}": "orchestra", "{COLUMN2}": "orchestra_id", "{TABLE0}": "performance", "{OP0}": ">", "{AGG0}": "count"}, "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4": {"{VALUE0}": "4", "{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "sex", "{COLUMN2}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;": {"{VALUE0}": "1", "{COLUMN0}": "countryname", "{COLUMN1}": "countryid", "{COLUMN2}": "country", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "template_id", "{TABLE0}": "documents", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "country_code", "{COLUMN2}": "birth_date", "{COLUMN3}": "player_id", "{COLUMN4}": "winner_id", "{COLUMN5}": "winner_rank_points", "{TABLE0}": "players", "{TABLE1}": "matches", "{SC0}": "desc"}, "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "capacity", "{COLUMN2}": "average", "{TABLE0}": "stadium", "{SC0}": "desc"}, "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "manager_name", "{COLUMN1}": "district", "{COLUMN2}": "number_products", "{TABLE0}": "shop", "{SC0}": "desc"}, "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "employee_id", "{COLUMN2}": "bonus", "{TABLE0}": "employee", "{TABLE1}": "evaluation", "{SC0}": "desc"}, "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "country_code", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{COLUMN3}": "tours", "{TABLE0}": "players", "{TABLE1}": "rankings", "{SC0}": "desc"}, "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "date_first_registered", "{TABLE0}": "students", "{SC0}": "asc"}, "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "id", "{COLUMN3}": "visitor_id", "{COLUMN4}": "num_of_ticket", "{TABLE0}": "customer", "{TABLE1}": "visit", "{SC0}": "desc"}, "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "winner_name", "{COLUMN1}": "loser_name", "{COLUMN2}": "minutes", "{TABLE0}": "matches", "{SC0}": "desc"}, "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "date_left", "{TABLE0}": "students", "{SC0}": "asc"}, "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;": {"{VALUE0}": "3", "{COLUMN0}": "episode", "{COLUMN1}": "rating", "{TABLE0}": "tv series", "{SC0}": "desc"}, "select production_code ,  channel from cartoon order by original_air_date desc limit 1": {"{VALUE0}": "1", "{COLUMN0}": "production_code", "{COLUMN1}": "channel", "{COLUMN2}": "original_air_date", "{TABLE0}": "cartoon", "{SC0}": "desc"}, "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "headofstate", "{COLUMN3}": "surfacearea", "{TABLE0}": "country", "{SC0}": "desc"}, "SELECT Name FROM country ORDER BY Population DESC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "country", "{SC0}": "desc"}, "SELECT Name FROM country ORDER BY Population ASC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "country", "{SC0}": "asc"}, "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "net_worth_millions", "{TABLE0}": "singer", "{SC0}": "desc"}, "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "horsepower", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{SC0}": "asc"}, "select t1.model from car_names as t1 join cars_data as t2 on t1.makeid  =  t2.id order by t2.mpg desc limit 1;": {"{VALUE0}": "1", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "mpg", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{SC0}": "desc"}, "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "horsepower", "{COLUMN1}": "accelerate", "{TABLE0}": "cars data", "{SC0}": "desc"}, "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "hometown", "{COLUMN1}": "age", "{TABLE0}": "teacher", "{SC0}": "asc"}, "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "museum_id", "{COLUMN1}": "name", "{COLUMN2}": "num_of_staff", "{TABLE0}": "museum", "{SC0}": "desc"}, "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "money_rank", "{COLUMN1}": "earnings", "{TABLE0}": "poker player", "{SC0}": "desc"}, "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "birth_date", "{COLUMN1}": "people_id", "{COLUMN2}": "earnings", "{TABLE0}": "people", "{TABLE1}": "poker player", "{SC0}": "asc"}, "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "money_rank", "{COLUMN1}": "people_id", "{COLUMN2}": "height", "{TABLE0}": "people", "{TABLE1}": "poker player", "{SC0}": "desc"}, "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5": {"{VALUE0}": "5", "{COLUMN0}": "name", "{COLUMN1}": "surfacearea", "{TABLE0}": "country", "{SC0}": "desc"}, "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "year_of_work", "{TABLE0}": "conductor", "{SC0}": "desc"}, "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "mpg", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{SC0}": "desc"}, "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "transcript_date", "{COLUMN1}": "other_details", "{TABLE0}": "transcripts", "{SC0}": "asc"}, "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "transcript_date", "{TABLE0}": "transcripts", "{SC0}": "desc"}, "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "cost_of_treatment", "{COLUMN1}": "date_of_treatment", "{TABLE0}": "treatments", "{SC0}": "desc"}, "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33": {"{VALUE0}": "32", "{VALUE1}": "33", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "teacher", "{OP0}": "=", "{OP1}": "="}, "select t1.first_name from students as t1 join addresses as t2 on t1.permanent_address_id  =  t2.address_id where t2.country  =  'haiti' or t1.cell_mobile_number  =  '09700166582'": {"{VALUE0}": "haiti", "{VALUE1}": "09700166582", "{COLUMN0}": "first_name", "{COLUMN1}": "permanent_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "country", "{COLUMN4}": "cell_mobile_number", "{TABLE0}": "students", "{TABLE1}": "addresses", "{OP0}": "=", "{OP1}": "="}, "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";": {"{VALUE0}": "ben jones", "{VALUE1}": "brandon vietti", "{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{TABLE0}": "cartoon", "{OP0}": "=", "{OP1}": "="}, "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'": {"{VALUE0}": "hawaii", "{VALUE1}": "wisconsin", "{COLUMN0}": "email_address", "{COLUMN1}": "state", "{TABLE0}": "professionals", "{OP0}": "=", "{OP1}": "="}, "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949": {"{VALUE0}": "1948", "{VALUE1}": "1949", "{COLUMN0}": "name", "{COLUMN1}": "birth_year", "{TABLE0}": "singer", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015": {"{VALUE0}": "2014", "{VALUE1}": "2015", "{COLUMN0}": "year", "{TABLE0}": "concert", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;": {"{VALUE0}": "general motors", "{VALUE15}": "3500", "{COLUMN0}": "model", "{COLUMN1}": "maker", "{COLUMN2}": "id", "{COLUMN3}": "makeid", "{COLUMN4}": "fullname", "{COLUMN5}": "weight", "{TABLE0}": "car names", "{TABLE1}": "model list", "{TABLE2}": "car makers", "{TABLE3}": "cars data", "{OP0}": "=", "{OP1}": ">"}, "select max(mpg) from cars_data where cylinders  =  8 or year  <  1980": {"{VALUE0}": "8", "{VALUE1}": "1980", "{COLUMN0}": "mpg", "{COLUMN1}": "cylinders", "{COLUMN2}": "year", "{TABLE0}": "cars data", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "max"}, "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"": {"{VALUE0}": "pp", "{VALUE1}": "ppt", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{TABLE0}": "templates", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016": {"{VALUE0}": "2013", "{VALUE1}": "2016", "{COLUMN0}": "year", "{TABLE0}": "matches", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'": {"{VALUE0}": "ny", "{VALUE1}": "ca", "{COLUMN0}": "state", "{TABLE0}": "votes", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'": {"{VALUE0}": "cat", "{VALUE1}": "dog", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"": {"{VALUE0}": "aberdeen", "{VALUE1}": "abilene", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008": {"{VALUE0}": "2013", "{VALUE1}": "2008", "{COLUMN0}": "open_year", "{TABLE0}": "museum", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "count"}, "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"": {"{VALUE0}": "asia", "{VALUE1}": "europe", "{COLUMN0}": "surfacearea", "{COLUMN1}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"": {"{VALUE0}": "english", "{VALUE1}": "dutch", "{COLUMN0}": "region", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "="}, "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"": {"{VALUE0}": "cd", "{VALUE1}": "dvd", "{COLUMN0}": "orchestra", "{COLUMN1}": "major_record_format", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10": {"{VALUE0}": "9", "{VALUE1}": "10", "{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'": {"{VALUE0}": "kaloyan", "{VALUE1}": "baldwin i", "{COLUMN0}": "name", "{COLUMN1}": "bulgarian_commander", "{COLUMN2}": "latin_commander", "{TABLE0}": "battle", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'": {"{VALUE0}": "f", "{VALUE1}": "dog", "{COLUMN0}": "stuid", "{COLUMN1}": "petid", "{COLUMN2}": "sex", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"": {"{VALUE0}": "europe", "{VALUE1}": "80000", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "="}, "select min(weight) from cars_data where cylinders  =  8 and year  =  1974": {"{VALUE0}": "8", "{VALUE1}": "1974", "{COLUMN0}": "weight", "{COLUMN1}": "cylinders", "{COLUMN2}": "year", "{TABLE0}": "cars data", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "min"}, "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'": {"{VALUE0}": "timmothy", "{VALUE1}": "ward", "{COLUMN0}": "cell_mobile_number", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "students", "{OP0}": "=", "{OP1}": "="}, "select sum(population) ,  avg(surfacearea) from country where continent  =  \"north america\" and surfacearea  >  3000": {"{VALUE0}": "north america", "{VALUE2}": "3000", "{COLUMN0}": "population", "{COLUMN1}": "surfacearea", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "sum", "{AGG1}": "avg"}, "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'": {"{VALUE0}": "cat", "{VALUE6}": "3", "{COLUMN0}": "lname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pet_age", "{COLUMN4}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';": {"{VALUE0}": "ford motor company", "{VALUE13}": "3500", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "maker", "{COLUMN4}": "weight", "{COLUMN5}": "fullname", "{TABLE0}": "model list", "{TABLE1}": "car names", "{TABLE2}": "cars data", "{TABLE3}": "car makers", "{OP0}": "<", "{OP1}": "!="}, "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"": {"{VALUE0}": "ashley", "{VALUE1}": "aberdeen", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "sourceairport", "{COLUMN3}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"": {"{VALUE0}": "united airlines", "{VALUE1}": "asy", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "destairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"": {"{VALUE0}": "united airlines", "{VALUE1}": "ahd", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"": {"{VALUE0}": "aberdeen", "{VALUE1}": "united airlines", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "uid", "{COLUMN3}": "airline", "{COLUMN4}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{TABLE2}": "airlines", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"": {"{VALUE0}": "beatrix", "{VALUE1}": "t", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "headofstate", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "="}, "select cell_mobile_number from students where first_name  =  'timmothy' and last_name  =  'ward'": {"{VALUE0}": "timmothy", "{VALUE1}": "ward", "{COLUMN0}": "cell_mobile_number", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "students", "{OP0}": "=", "{OP1}": "="}, "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"": {"{VALUE0}": "t", "{VALUE6}": "1930", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "indepyear", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "<", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'": {"{VALUE0}": "wta championships", "{VALUE1}": "l", "{COLUMN0}": "winner_name", "{COLUMN1}": "tourney_name", "{COLUMN2}": "winner_hand", "{TABLE0}": "matches", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"": {"{VALUE0}": "africa", "{VALUE1}": "republic", "{COLUMN0}": "lifeexpectancy", "{COLUMN1}": "continent", "{COLUMN2}": "governmentform", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"": {"{VALUE0}": "afghanistan", "{VALUE1}": "t", "{COLUMN0}": "code", "{COLUMN1}": "countrycode", "{COLUMN2}": "name", "{COLUMN3}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)": {"{COLUMN0}": "name", "{COLUMN1}": "stadium_id", "{TABLE0}": "stadium", "{TABLE1}": "concert"}, "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)": {"{COLUMN0}": "name", "{COLUMN1}": "employee_id", "{TABLE0}": "employee", "{TABLE1}": "evaluation"}, "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)": {"{COLUMN0}": "name", "{COLUMN1}": "shop_id", "{TABLE0}": "shop", "{TABLE1}": "hiring"}, "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)": {"{COLUMN0}": "name", "{COLUMN1}": "museum_id", "{TABLE0}": "museum", "{TABLE1}": "visit"}, "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)": {"{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song"}, "select avg(age) from student where stuid not in (select stuid from has_pet)": {"{COLUMN0}": "age", "{COLUMN1}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{AGG0}": "avg"}, "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)": {"{COLUMN0}": "airportname", "{COLUMN1}": "airportcode", "{COLUMN2}": "sourceairport", "{COLUMN3}": "destairport", "{TABLE0}": "airports", "{TABLE1}": "flights"}, "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)": {"{COLUMN0}": "name", "{COLUMN1}": "teacher_id", "{TABLE0}": "teacher", "{TABLE1}": "course arrange"}, "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )": {"{COLUMN0}": "semester_name", "{COLUMN1}": "semester_id", "{TABLE0}": "semesters", "{TABLE1}": "student enrolment"}, "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "people", "{TABLE1}": "poker player"}, "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)": {"{COLUMN0}": "orchestra", "{COLUMN1}": "orchestra_id", "{TABLE0}": "performance"}, "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)": {"{COLUMN0}": "grade", "{COLUMN1}": "id", "{COLUMN2}": "student_id", "{TABLE0}": "high schooler", "{TABLE1}": "friend", "{AGG0}": "min"}, "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )": {"{COLUMN0}": "owner_id", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{AGG0}": "count"}, "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )": {"{COLUMN0}": "contestant_number", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{AGG0}": "count"}, "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )": {"{COLUMN0}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{AGG0}": "count"}, "select count(*) from dogs where dog_id not in ( select dog_id from treatments )": {"{COLUMN0}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{AGG0}": "count"}, "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )": {"{COLUMN0}": "professional_id", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{AGG0}": "count"}, "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'": {"{VALUE0}": "lettice", "{VALUE1}": "hms atalanta", "{COLUMN0}": "name", "{COLUMN1}": "date", "{COLUMN2}": "id", "{COLUMN3}": "lost_in_battle", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'": {"{VALUE0}": "michael chang", "{VALUE1}": "ben jones", "{COLUMN0}": "series_name", "{COLUMN1}": "country", "{COLUMN2}": "id", "{COLUMN3}": "channel", "{COLUMN4}": "directed_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015": {"{VALUE7}": "2014", "{VALUE15}": "2015", "{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "stadium_id", "{COLUMN3}": "year", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": "=", "{OP1}": "="}, "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011": {"{VALUE9}": "2009", "{VALUE19}": "2011", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "visitor_id", "{COLUMN3}": "museum_id", "{COLUMN4}": "open_year", "{TABLE0}": "customer", "{TABLE1}": "visit", "{TABLE2}": "museum", "{OP0}": "<", "{OP1}": ">"}, "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30": {"{VALUE0}": "40", "{VALUE1}": "30", "{COLUMN0}": "country", "{COLUMN1}": "age", "{TABLE0}": "singer", "{OP0}": ">", "{OP1}": "<"}, "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'": {"{VALUE0}": "wta championships", "{VALUE1}": "australian open", "{COLUMN0}": "country_code", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{COLUMN3}": "winner_id", "{COLUMN4}": "tourney_name", "{TABLE0}": "players", "{TABLE1}": "matches", "{OP0}": "=", "{OP1}": "="}, "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000": {"{VALUE0}": "3000", "{VALUE1}": "10000", "{COLUMN0}": "district", "{COLUMN1}": "number_products", "{TABLE0}": "shop", "{OP0}": "<", "{OP1}": ">"}, "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'": {"{VALUE0}": "tabatha gehling", "{VALUE1}": "kelly clauss", "{COLUMN0}": "area_code", "{COLUMN1}": "contestant_number", "{COLUMN2}": "state", "{COLUMN3}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{TABLE2}": "area code state", "{OP0}": "=", "{OP1}": "="}, "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955": {"{VALUE0}": "1945", "{VALUE1}": "1955", "{COLUMN0}": "citizenship", "{COLUMN1}": "birth_year", "{TABLE0}": "singer", "{OP0}": "<", "{OP1}": ">"}, "select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid  =  t2.stuid join pets as t3 on t3.petid  =  t2.petid where t3.pettype  =  'dog'": {"{VALUE0}": "cat", "{VALUE1}": "dog", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"": {"{VALUE0}": "apg", "{VALUE1}": "cvo", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "="}, "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'": {"{VALUE0}": "brazil", "{VALUE1}": "ireland", "{COLUMN0}": "document_id", "{COLUMN1}": "paragraph_text", "{TABLE0}": "paragraphs", "{OP0}": "=", "{OP1}": "="}, "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003": {"{VALUE0}": "2003", "{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{COLUMN2}": "year_of_founded", "{OP0}": "<", "{OP1}": ">"}, "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'": {"{VALUE0}": "master", "{VALUE1}": "bachelor", "{COLUMN0}": "semester_id", "{COLUMN1}": "degree_program_id", "{COLUMN2}": "degree_summary_name", "{TABLE0}": "degree programs", "{TABLE1}": "student enrolment", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"": {"{VALUE0}": "english", "{VALUE1}": "french", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'": {"{VALUE0}": "cat", "{VALUE1}": "dog", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016": {"{VALUE0}": "2013", "{VALUE1}": "2016", "{COLUMN0}": "winner_name", "{COLUMN1}": "year", "{TABLE0}": "matches", "{OP0}": "=", "{OP1}": "="}, "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "district", "{COLUMN3}": "number_products", "{TABLE0}": "shop", "{SC0}": "desc"}, "SELECT name ,  country ,  age FROM singer ORDER BY age DESC": {"{COLUMN0}": "name", "{COLUMN1}": "country", "{COLUMN2}": "age", "{TABLE0}": "singer", "{SC0}": "desc"}, "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC": {"{COLUMN0}": "name", "{COLUMN1}": "birth_date", "{TABLE0}": "people", "{SC0}": "asc"}, "SELECT Name FROM teacher ORDER BY Age ASC": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "teacher", "{SC0}": "asc"}, "SELECT name ,  tonnage FROM ship ORDER BY name DESC": {"{COLUMN0}": "name", "{COLUMN1}": "tonnage", "{TABLE0}": "ship", "{SC0}": "desc"}, "SELECT Name FROM conductor ORDER BY Age ASC": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "conductor", "{SC0}": "asc"}, "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC": {"{COLUMN0}": "name", "{COLUMN1}": "net_worth_millions", "{TABLE0}": "singer", "{SC0}": "asc"}, "SELECT other_student_details FROM Students ORDER BY other_student_details DESC": {"{COLUMN0}": "other_student_details", "{TABLE0}": "students", "{SC0}": "desc"}, "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "earnings", "{TABLE0}": "people", "{TABLE1}": "poker player", "{SC0}": "desc"}, "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC": {"{COLUMN0}": "contestant_number", "{COLUMN1}": "contestant_name", "{TABLE0}": "contestants", "{SC0}": "desc"}, "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC": {"{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{COLUMN2}": "year_of_founded", "{SC0}": "desc"}, "SELECT Name FROM conductor ORDER BY Year_of_Work DESC": {"{COLUMN0}": "name", "{COLUMN1}": "year_of_work", "{TABLE0}": "conductor", "{SC0}": "desc"}, "SELECT section_name FROM Sections ORDER BY section_name DESC": {"{COLUMN0}": "section_name", "{TABLE0}": "sections", "{SC0}": "desc"}, "SELECT Earnings FROM poker_player ORDER BY Earnings DESC": {"{COLUMN0}": "earnings", "{TABLE0}": "poker player", "{SC0}": "desc"}, "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;": {"{VALUE1}": "1", "{VALUE7}": "3", "{COLUMN0}": "horsepower", "{COLUMN1}": "make", "{COLUMN2}": "makeid", "{COLUMN3}": "id", "{COLUMN4}": "cylinders", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "=", "{SC0}": "desc"}, "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;": {"{VALUE0}": "volvo", "{VALUE1}": "1", "{COLUMN0}": "cylinders", "{COLUMN1}": "id", "{COLUMN2}": "makeid", "{COLUMN3}": "model", "{COLUMN4}": "accelerate", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": "=", "{SC0}": "asc"}, "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;": {"{VALUE0}": "1", "{VALUE6}": "4", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "cylinders", "{COLUMN4}": "horsepower", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "=", "{SC0}": "desc"}, "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1": {"{VALUE0}": "australian open", "{VALUE2}": "1", "{COLUMN0}": "winner_name", "{COLUMN1}": "tourney_name", "{COLUMN2}": "winner_rank_points", "{TABLE0}": "matches", "{OP0}": "=", "{SC0}": "desc"}, "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1": {"{VALUE0}": "english", "{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "city", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{SC0}": "desc"}, "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1": {"{VALUE0}": "asia", "{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "lifeexpectancy", "{COLUMN3}": "continent", "{COLUMN4}": "surfacearea", "{TABLE0}": "country", "{OP0}": "=", "{SC0}": "desc"}, "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1": {"{VALUE0}": "aruba", "{VALUE2}": "1", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "name", "{COLUMN4}": "percentage", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{SC0}": "desc"}, "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)": {"{COLUMN0}": "name", "{COLUMN1}": "number_products", "{TABLE0}": "shop", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "cost_of_treatment", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)": {"{COLUMN0}": "song_name", "{COLUMN1}": "age", "{TABLE0}": "singer", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)": {"{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "weight", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);": {"{COLUMN0}": "make", "{COLUMN1}": "year", "{COLUMN2}": "id", "{COLUMN3}": "makeid", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": "=", "{AGG0}": "min"}, "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )": {"{COLUMN0}": "last_name", "{COLUMN1}": "owner_id", "{COLUMN2}": "age", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{OP0}": "=", "{AGG0}": "max"}, "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )": {"{COLUMN0}": "age", "{TABLE0}": "dogs", "{OP0}": "<", "{AGG0}": "count", "{AGG1}": "avg"}, "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name": {"{COLUMN0}": "name", "{COLUMN1}": "course", "{COLUMN2}": "course_id", "{COLUMN3}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher"}, "SELECT first_name ,  last_name FROM players ORDER BY birth_date": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "birth_date", "{TABLE0}": "players"}, "SELECT name FROM employee ORDER BY age": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "employee"}, "SELECT Title FROM Cartoon ORDER BY title": {"{COLUMN0}": "title", "{TABLE0}": "cartoon"}, "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date": {"{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{COLUMN2}": "original_air_date", "{TABLE0}": "cartoon"}, "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "final_table_made", "{TABLE0}": "people", "{TABLE1}": "poker player"}, "SELECT Episode FROM TV_series ORDER BY rating": {"{COLUMN0}": "episode", "{COLUMN1}": "rating", "{TABLE0}": "tv series"}, "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "surfacearea", "{COLUMN2}": "indepyear", "{COLUMN3}": "population", "{TABLE0}": "country"}, "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "song_name", "{COLUMN1}": "song_release_year", "{COLUMN2}": "age", "{TABLE0}": "singer"}, "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "pettype", "{COLUMN1}": "weight", "{COLUMN2}": "pet_age", "{TABLE0}": "pets"}, "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "country_code", "{COLUMN2}": "birth_date", "{TABLE0}": "players"}, "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "winner_name", "{COLUMN1}": "winner_rank", "{COLUMN2}": "winner_age", "{TABLE0}": "matches"}, "SELECT weight FROM pets ORDER BY pet_age LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "weight", "{COLUMN1}": "pet_age", "{TABLE0}": "pets"}, "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{VALUE6}": "5", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{COLUMN3}": "grade", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1": {"{VALUE0}": "30", "{VALUE1}": "1", "{COLUMN0}": "city", "{COLUMN1}": "age", "{TABLE0}": "employee", "{OP0}": "<", "{OP1}": ">", "{AGG0}": "count"}, "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;": {"{VALUE0}": "europe", "{VALUE6}": "3", "{COLUMN0}": "countryname", "{COLUMN1}": "continent", "{COLUMN2}": "contid", "{COLUMN3}": "countryid", "{COLUMN4}": "country", "{TABLE0}": "countries", "{TABLE1}": "continents", "{TABLE2}": "car makers", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1": {"{VALUE0}": "republic", "{VALUE2}": "1", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "governmentform", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')": {"{VALUE0}": "ben jones", "{COLUMN0}": "package_option", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "directed_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')": {"{VALUE0}": "cat", "{COLUMN0}": "major", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "petid", "{COLUMN4}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "="}, "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)": {"{VALUE6}": "2010", "{COLUMN0}": "id", "{COLUMN1}": "visitor_id", "{COLUMN2}": "museum_id", "{COLUMN3}": "open_year", "{TABLE0}": "customer", "{TABLE1}": "museum", "{TABLE2}": "visit", "{OP0}": ">", "{AGG0}": "count"}, "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );": {"{VALUE0}": "225", "{COLUMN0}": "id", "{COLUMN1}": "lost_in_battle", "{COLUMN2}": "tonnage", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "=", "{AGG0}": "count"}, "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")": {"{VALUE0}": "english", "{COLUMN0}": "population", "{COLUMN1}": "name", "{COLUMN2}": "code", "{COLUMN3}": "countrycode", "{COLUMN4}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000": {"{VALUE0}": "5000", "{VALUE1}": "10000", "{COLUMN0}": "location", "{COLUMN1}": "name", "{COLUMN2}": "capacity", "{TABLE0}": "stadium"}, "select distinct year from cars_data where weight between 3000 and 4000;": {"{VALUE0}": "3000", "{VALUE1}": "4000", "{COLUMN0}": "year", "{COLUMN1}": "weight", "{TABLE0}": "cars data"}, "select name from city where population between 160000 and 900000": {"{VALUE0}": "160000", "{VALUE1}": "900000", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "city"}, "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000": {"{VALUE0}": "160000", "{VALUE1}": "900000", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "city"}, "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "visitor_id", "{COLUMN1}": "name", "{COLUMN2}": "level_of_membership", "{COLUMN3}": "id", "{COLUMN4}": "total_spent", "{TABLE0}": "customer", "{TABLE1}": "visit", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "owner_id", "{COLUMN1}": "zip_code", "{COLUMN2}": "dog_id", "{COLUMN3}": "cost_of_treatment", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{TABLE2}": "treatments", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "treatment_type_description", "{COLUMN1}": "treatment_type_code", "{COLUMN2}": "cost_of_treatment", "{TABLE0}": "treatment types", "{TABLE1}": "treatments", "{AGG0}": "sum", "{SC0}": "asc"}, "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10": {"{VALUE11}": "10", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "lost_in_battle", "{COLUMN3}": "caused_by_ship_id", "{COLUMN4}": "killed", "{TABLE0}": "battle", "{TABLE1}": "ship", "{TABLE2}": "death", "{OP0}": ">", "{AGG0}": "sum"}, "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72": {"{VALUE0}": "72", "{COLUMN0}": "population", "{COLUMN1}": "lifeexpectancy", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": "<", "{AGG0}": "sum", "{AGG1}": "avg", "{AGG2}": "avg"}, "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72": {"{VALUE0}": "72", "{COLUMN0}": "population", "{COLUMN1}": "governmentform", "{COLUMN2}": "lifeexpectancy", "{TABLE0}": "country", "{OP0}": ">", "{AGG0}": "sum", "{AGG1}": "avg"}, "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE2}": "1", "{VALUE7}": "2014", "{COLUMN0}": "name", "{COLUMN1}": "capacity", "{COLUMN2}": "stadium_id", "{COLUMN3}": "year", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": ">=", "{AGG0}": "count", "{SC0}": "desc"}, "select t2.name ,  t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id  =  t2.stadium_id where t1.year  >  2013 group by t2.stadium_id order by count(*) desc limit 1": {"{VALUE2}": "1", "{VALUE7}": "2013", "{COLUMN0}": "name", "{COLUMN1}": "capacity", "{COLUMN2}": "stadium_id", "{COLUMN3}": "year", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": ">", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1": {"{VALUE0}": "asia", "{VALUE2}": "1", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "continent", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode": {"{VALUE0}": "spanish", "{COLUMN0}": "percentage", "{COLUMN1}": "language", "{COLUMN2}": "countrycode", "{TABLE0}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count", "{AGG1}": "max"}, "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode": {"{VALUE0}": "spanish", "{COLUMN0}": "countrycode", "{COLUMN1}": "percentage", "{COLUMN2}": "language", "{TABLE0}": "countrylanguage", "{OP0}": "=", "{AGG0}": "max"}, "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"": {"{VALUE0}": "cvo", "{VALUE1}": "apg", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "="}, "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"": {"{VALUE0}": "republic", "{VALUE1}": "english", "{COLUMN0}": "code", "{COLUMN1}": "governmentform", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "!=", "{OP1}": "="}, "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")": {"{VALUE0}": "africa", "{VALUE1}": "asia", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "<", "{OP2}": "=", "{AGG0}": "max"}, "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")": {"{VALUE0}": "africa", "{VALUE1}": "asia", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "<", "{OP2}": "=", "{AGG0}": "min"}, "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")": {"{VALUE0}": "asia", "{VALUE1}": "africa", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": ">", "{OP2}": "=", "{AGG0}": "max"}, "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")": {"{VALUE0}": "asia", "{VALUE1}": "africa", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": ">", "{OP2}": "=", "{AGG0}": "min"}, "select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)": {"{VALUE0}": "1", "{COLUMN0}": "stadium_id", "{COLUMN1}": "capacity", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );": {"{VALUE0}": "1", "{COLUMN0}": "accelerate", "{COLUMN1}": "horsepower", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )": {"{COLUMN0}": "age", "{COLUMN1}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{AGG0}": "avg"}, "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)": {"{COLUMN0}": "grade", "{COLUMN1}": "id", "{COLUMN2}": "student_id", "{TABLE0}": "high schooler", "{TABLE1}": "friend", "{AGG0}": "avg"}, "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "abbreviation", "{COLUMN1}": "country", "{COLUMN2}": "uid", "{COLUMN3}": "airline", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{AGG0}": "count"}, "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "airportcode", "{COLUMN1}": "destairport", "{COLUMN2}": "sourceairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count"}, "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)": {"{VALUE0}": "2010", "{COLUMN0}": "name", "{COLUMN1}": "num_of_staff", "{COLUMN2}": "open_year", "{TABLE0}": "museum", "{OP0}": ">", "{OP1}": ">", "{AGG0}": "min"}, "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")": {"{VALUE0}": "europe", "{COLUMN0}": "name", "{COLUMN1}": "surfacearea", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2": {"{VALUE0}": "indiana", "{VALUE6}": "2", "{COLUMN0}": "professional_id", "{COLUMN1}": "last_name", "{COLUMN2}": "cell_number", "{COLUMN3}": "state", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "count"}, "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC": {"{VALUE0}": "4", "{COLUMN0}": "name", "{COLUMN1}": "level_of_membership", "{COLUMN2}": "age", "{TABLE0}": "customer", "{OP0}": ">", "{SC0}": "desc"}, "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC": {"{VALUE0}": "4", "{COLUMN0}": "name", "{COLUMN1}": "level_of_membership", "{TABLE0}": "customer", "{OP0}": ">", "{SC0}": "desc"}, "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1": {"{VALUE0}": "asia", "{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "lifeexpectancy", "{TABLE0}": "country", "{OP0}": "="}, "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date": {"{VALUE0}": "l", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "hand", "{COLUMN3}": "birth_date", "{TABLE0}": "players", "{OP0}": "="}, "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")": {"{VALUE0}": "english", "{VALUE1}": "dutch", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id": {"{VALUE0}": "northcarolina", "{COLUMN0}": "last_name", "{COLUMN1}": "current_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "state_province_county", "{COLUMN4}": "student_id", "{TABLE0}": "students", "{TABLE1}": "addresses", "{TABLE2}": "student enrolment", "{OP0}": "="}, "select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"english\" and isofficial  =  \"t\" union select t1.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode where t2.language  =  \"dutch\" and isofficial  =  \"t\"": {"{VALUE0}": "english", "{VALUE1}": "t", "{VALUE2}": "dutch", "{VALUE3}": "t", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{OP3}": "="}, "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"": {"{VALUE0}": "english", "{VALUE1}": "t", "{VALUE2}": "dutch", "{VALUE3}": "t", "{COLUMN0}": "code", "{COLUMN1}": "countrycode", "{COLUMN2}": "language", "{COLUMN3}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{OP3}": "="}, "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"": {"{VALUE0}": "english", "{VALUE1}": "t", "{VALUE2}": "french", "{VALUE3}": "t", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{OP3}": "="}, "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"": {"{VALUE0}": "asia", "{VALUE1}": "t", "{VALUE2}": "chinese", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "isofficial", "{COLUMN4}": "language", "{COLUMN5}": "continent", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{TABLE2}": "city", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "select distinct t3.name from country as t1 join countrylanguage as t2 on t1.code  =  t2.countrycode join city as t3 on t1.code  =  t3.countrycode where t2.isofficial  =  't' and t2.language  =  'chinese' and t1.continent  =  \"asia\"": {"{VALUE0}": "asia", "{VALUE1}": "t", "{VALUE2}": "chinese", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "isofficial", "{COLUMN4}": "language", "{COLUMN5}": "continent", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{TABLE2}": "city", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')": {"{VALUE0}": "europe", "{VALUE1}": "t", "{VALUE2}": "english", "{COLUMN0}": "name", "{COLUMN1}": "countrycode", "{COLUMN2}": "code", "{COLUMN3}": "continent", "{COLUMN4}": "isofficial", "{COLUMN5}": "language", "{TABLE0}": "country", "{TABLE1}": "city", "{TABLE2}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')": {"{VALUE0}": "dog", "{VALUE1}": "cat", "{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "petid", "{COLUMN4}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id": {"{COLUMN0}": "first_name", "{COLUMN1}": "current_address_id", "{COLUMN2}": "permanent_address_id", "{TABLE0}": "students", "{OP0}": "!="}, "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "date_of_treatment", "{COLUMN2}": "dog_id", "{COLUMN3}": "breed_code", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District": {"{COLUMN0}": "district", "{COLUMN1}": "population", "{TABLE0}": "city", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "avg"}, "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;": {"{VALUE8}": "3", "{COLUMN0}": "makeid", "{COLUMN1}": "make", "{COLUMN2}": "id", "{COLUMN3}": "horsepower", "{COLUMN4}": "cylinders", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": ">", "{OP1}": "<=", "{AGG0}": "min"}, "select t2.makeid ,  t2.make from cars_data as t1 join car_names as t2 on t1.id  =  t2.makeid where t1.horsepower  >  (select min(horsepower) from cars_data) and t1.cylinders  <  4;": {"{VALUE8}": "4", "{COLUMN0}": "makeid", "{COLUMN1}": "make", "{COLUMN2}": "id", "{COLUMN3}": "horsepower", "{COLUMN4}": "cylinders", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "min"}, "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")": {"{VALUE0}": "english", "{VALUE1}": "t", "{COLUMN0}": "lifeexpectancy", "{COLUMN1}": "name", "{COLUMN2}": "code", "{COLUMN3}": "countrycode", "{COLUMN4}": "language", "{COLUMN5}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "select name from dogs where dog_id not in ( select dog_id from treatments group by dog_id having sum(cost_of_treatment)  >  1000 )": {"{VALUE0}": "1000", "{COLUMN0}": "name", "{COLUMN1}": "dog_id", "{COLUMN2}": "cost_of_treatment", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{OP0}": ">", "{AGG0}": "sum"}, "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id": {"{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{AGG0}": "count"}, "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC": {"{COLUMN0}": "major_record_format", "{COLUMN1}": "orchestra", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';": {"{VALUE0}": "fiat", "{VALUE8}": "3", "{COLUMN0}": "countryid", "{COLUMN1}": "countryname", "{COLUMN2}": "country", "{COLUMN3}": "id", "{COLUMN4}": "maker", "{COLUMN5}": "model", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{TABLE2}": "model list", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count"}, "select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country group by t1.countryid having count(*)  >  3 union select t1.countryid ,  t1.countryname from countries as t1 join car_makers as t2 on t1.countryid  =  t2.country join model_list as t3 on t2.id  =  t3.maker where t3.model  =  'fiat';": {"{VALUE0}": "fiat", "{VALUE8}": "3", "{COLUMN0}": "countryid", "{COLUMN1}": "countryname", "{COLUMN2}": "country", "{COLUMN3}": "id", "{COLUMN4}": "maker", "{COLUMN5}": "model", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{TABLE2}": "model list", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count"}, "select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker group by t1.id having count(*)  >=  2 intersect select t1.id ,  t1.maker from car_makers as t1 join model_list as t2 on t1.id  =  t2.maker join car_names as t3 on t2.model  =  t3.model group by t1.id having count(*)  >  3;": {"{VALUE3}": "2", "{VALUE14}": "3", "{COLUMN0}": "id", "{COLUMN1}": "maker", "{COLUMN2}": "model", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{TABLE2}": "car names", "{OP0}": ">=", "{OP1}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;": {"{VALUE3}": "2", "{VALUE14}": "3", "{COLUMN0}": "id", "{COLUMN1}": "maker", "{COLUMN2}": "model", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{TABLE2}": "car names", "{OP0}": ">=", "{OP1}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2": {"{VALUE0}": "1", "{VALUE1}": "2", "{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{AGG0}": "count"}, "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1": {"{VALUE0}": "house", "{VALUE1}": "apartment", "{VALUE3}": "1", "{COLUMN0}": "property_name", "{COLUMN1}": "property_type_code", "{COLUMN2}": "room_count", "{TABLE0}": "properties", "{OP0}": "=", "{OP1}": "=", "{OP2}": ">"}}, {"( name ) , ( result ) , ( bulgarian commander ) that belongs to ( battle ), and except that ( ( name of people ) , ( result of people ) , ( bulgarian commander of people ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of people ) equal to ( lost in battle of poker player ) ) ) ) , that have ( ( location of poker player ) equal to ( 'english channel' ) ))": {"{VALUE0}": "english channel", "{COLUMN0}": "name", "{COLUMN1}": "result", "{COLUMN2}": "bulgarian_commander", "{COLUMN3}": "id", "{COLUMN4}": "lost_in_battle", "{COLUMN5}": "location", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "="}, "( name ) that belongs to ( stadium ), and except that ( ( name of poker player ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of people ) equal to ( stadium id of poker player ) ) ) ) , that have ( ( year of people ) equal to ( 2014 ) ))": {"{VALUE6}": "2014", "{COLUMN0}": "name", "{COLUMN1}": "stadium_id", "{COLUMN2}": "year", "{TABLE0}": "stadium", "{TABLE1}": "concert", "{OP0}": "="}, "( series name of people ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( episode of poker player ) equal to ( a love of a lifetime ) )": {"{VALUE0}": "a love of a lifetime", "{COLUMN0}": "series_name", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "episode", "{TABLE0}": "tv channel", "{TABLE1}": "tv series", "{OP0}": "="}, "( created of poker player ) , ( state of poker player ) , ( phone number of poker player ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of people ) equal to ( contestant number of poker player ) ) ) ) , that have ( ( contestant name of people ) equal to ( 'tabatha gehling' ) )": {"{VALUE0}": "tabatha gehling", "{COLUMN0}": "created", "{COLUMN1}": "state", "{COLUMN2}": "phone_number", "{COLUMN3}": "contestant_number", "{COLUMN4}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{OP0}": "="}, "( first name of people ) , ( name of poker player ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) ) , that have ( ( state of people ) equal to ( 'virginia' ) )": {"{VALUE0}": "virginia", "{COLUMN0}": "first_name", "{COLUMN1}": "name", "{COLUMN2}": "owner_id", "{COLUMN3}": "state", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{OP0}": "="}, "( name ) , ( age ) , ( weight ) that belongs to ( dogs ) , that have ( ( abandoned yn ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "weight", "{COLUMN3}": "abandoned_yn", "{TABLE0}": "dogs", "{OP0}": "="}, "( name of poker player ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of people ) equal to ( singer id of poker player ) ) ) , and ( ( concert ) satisfied that ( ( concert id of people ) equal to ( concert id of car makers ) ) ) ) , that have ( ( year of car makers ) equal to ( 2014 ) )": {"{VALUE9}": "2014", "{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{COLUMN2}": "concert_id", "{COLUMN3}": "year", "{TABLE0}": "singer in concert", "{TABLE1}": "singer", "{TABLE2}": "concert", "{OP0}": "="}, "( version number ) , ( template type code ) that belongs to ( templates ) , that have ( ( version number ) greater than ( 5 ) )": {"{VALUE0}": "5", "{COLUMN0}": "version_number", "{COLUMN1}": "template_type_code", "{TABLE0}": "templates", "{OP0}": ">"}, "( first name ) , ( birth date ) that belongs to ( players ) , that have ( ( country code ) equal to ( 'usa' ) )": {"{VALUE0}": "usa", "{COLUMN0}": "first_name", "{COLUMN1}": "birth_date", "{COLUMN2}": "country_code", "{TABLE0}": "players", "{OP0}": "="}, "( killed of people ) , ( injured of people ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of people ) equal to ( id of poker player ) ) ) ) , that have ( ( tonnage of poker player ) equal to ( 't' ) )": {"{VALUE0}": "t", "{COLUMN0}": "killed", "{COLUMN1}": "injured", "{COLUMN2}": "caused_by_ship_id", "{COLUMN3}": "id", "{COLUMN4}": "tonnage", "{TABLE0}": "death", "{TABLE1}": "ship", "{OP0}": "="}, "( name ) , ( result ) that belongs to ( battle ) , that have ( ( bulgarian commander ) not equal to ( 'boril' ) )": {"{VALUE0}": "boril", "{COLUMN0}": "name", "{COLUMN1}": "result", "{COLUMN2}": "bulgarian_commander", "{TABLE0}": "battle", "{OP0}": "!="}, "( distinct ( id of people ) ) , ( name of people ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of people ) equal to ( lost in battle of poker player ) ) ) ) , that have ( ( ship type of poker player ) equal to ( 'brig' ) )": {"{VALUE0}": "brig", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "lost_in_battle", "{COLUMN3}": "ship_type", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "="}, "( distinct ( first name of people ) ) , ( middle name of people ) , ( last name of people ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of people ) equal to ( student id of poker player ) ) ) , and ( ( degree programs ) satisfied that ( ( degree program id of poker player ) equal to ( degree program id of car makers ) ) ) ) , that have ( ( degree summary name of car makers ) equal to ( 'bachelor' ) )": {"{VALUE0}": "bachelor", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "student_id", "{COLUMN4}": "degree_program_id", "{COLUMN5}": "degree_summary_name", "{TABLE0}": "students", "{TABLE1}": "student enrolment", "{TABLE2}": "degree programs", "{OP0}": "="}, "( title of poker player ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( series name of people ) equal to ( sky radio ) )": {"{VALUE0}": "sky radio", "{COLUMN0}": "title", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "series_name", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "( episode of poker player ) that belongs to ( ( tv channel ) , and ( ( tv series ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( series name of people ) equal to ( sky radio ) )": {"{VALUE0}": "sky radio", "{COLUMN0}": "episode", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "series_name", "{TABLE0}": "tv channel", "{TABLE1}": "tv series", "{OP0}": "="}, "( country of people ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( written by of poker player ) equal to ( 'todd casey' ) )": {"{VALUE0}": "todd casey", "{COLUMN0}": "country", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "written_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "( country ) that belongs to ( tv channel ), and except that ( ( country of people ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( written by of poker player ) equal to ( 'todd casey' ) ))": {"{VALUE0}": "todd casey", "{COLUMN0}": "country", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "written_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "( id ) that belongs to ( tv channel ), and except that ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ))": {"{VALUE0}": "ben jones", "{COLUMN0}": "id", "{COLUMN1}": "channel", "{COLUMN2}": "directed_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "( name of people ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of people ) equal to ( conductor id of poker player ) ) ) ) , that have ( ( year of founded ) greater than ( 2008 ) )": {"{VALUE5}": "2008", "{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{COLUMN3}": "year_of_founded", "{TABLE0}": "conductor", "{OP0}": ">"}, "( first name ) , ( last name ) , ( email address ) that belongs to ( owners ) , that have ( ( state ) like ( '%north%' ) )": {"{VALUE0}": "north", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "email_address", "{COLUMN3}": "state", "{TABLE0}": "owners", "{OP0}": "like"}, "( distinct ( name of people ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of people ) equal to ( singer id of poker player ) ) ) ) , that have ( ( sales of poker player ) greater than ( 300000 ) )": {"{VALUE6}": "300000", "{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{COLUMN2}": "sales", "{TABLE0}": "singer", "{TABLE1}": "song", "{OP0}": ">"}, "( distinct ( country ) ) that belongs to ( singer ) , that have ( ( age ) greater than ( 20 ) )": {"{VALUE0}": "20", "{COLUMN0}": "country", "{COLUMN1}": "age", "{TABLE0}": "singer", "{OP0}": ">"}, "( name ) , ( country ) that belongs to ( singer ) , that have ( ( song_name ) like ( '%hey%' ) )": {"{VALUE0}": "hey", "{COLUMN0}": "name", "{COLUMN1}": "country", "{COLUMN2}": "song_name", "{TABLE0}": "singer", "{OP0}": "like"}, "( airline ) , ( abbreviation ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )": {"{VALUE0}": "usa", "{COLUMN0}": "airline", "{COLUMN1}": "abbreviation", "{COLUMN2}": "country", "{TABLE0}": "airlines", "{OP0}": "="}, "( document id ) , ( template id ) , ( document description ) that belongs to ( documents ) , that have ( ( document name ) equal to ( robbin cv ) )": {"{VALUE0}": "robbin cv", "{COLUMN0}": "document_id", "{COLUMN1}": "template_id", "{COLUMN2}": "document_description", "{COLUMN3}": "document_name", "{TABLE0}": "documents", "{OP0}": "="}, "( template type code of people ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ) , that have ( ( document name of poker player ) equal to ( data base ) )": {"{VALUE0}": "data base", "{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{COLUMN2}": "document_name", "{TABLE0}": "templates", "{TABLE1}": "documents", "{OP0}": "="}, "( document name of poker player ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ) , that have ( ( template type code of people ) equal to ( bk ) )": {"{VALUE0}": "bk", "{COLUMN0}": "document_name", "{COLUMN1}": "template_id", "{COLUMN2}": "template_type_code", "{TABLE0}": "templates", "{TABLE1}": "documents", "{OP0}": "="}, "( name ) that belongs to ( teacher ) , that have ( ( hometown ) not equal to ( little lever urban district ) )": {"{VALUE0}": "little lever urban district", "{COLUMN0}": "name", "{COLUMN1}": "hometown", "{TABLE0}": "teacher", "{OP0}": "!="}, "( name of car makers ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of people ) equal to ( course id of poker player ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of people ) equal to ( teacher id of car makers ) ) ) ) , that have ( ( course of poker player ) equal to ( math ) )": {"{VALUE0}": "math", "{COLUMN0}": "name", "{COLUMN1}": "course", "{COLUMN2}": "course_id", "{COLUMN3}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher", "{OP0}": "="}, "( the sum of ( total spent of ship ) ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of ship ) ) ) ) , that have ( ( level of membership of students ) equal to ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "total_spent", "{COLUMN1}": "id", "{COLUMN2}": "visitor_id", "{COLUMN3}": "level_of_membership", "{TABLE0}": "customer", "{TABLE1}": "visit", "{OP0}": "=", "{AGG0}": "sum"}, "( series name of people ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( title of poker player ) equal to ( the rise of the blue beetle! ) )": {"{VALUE0}": "the rise of the blue beetle!", "{COLUMN0}": "series_name", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "title", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "( name ) that belongs to ( people ) , that have ( ( nationality ) not equal to ( russia ) )": {"{VALUE0}": "russia", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "people", "{OP0}": "!="}, "( the maximum of ( created ) ) that belongs to ( votes ) , that have ( ( state ) equal to ( 'ca' ) )": {"{VALUE0}": "ca", "{COLUMN0}": "created", "{COLUMN1}": "state", "{TABLE0}": "votes", "{OP0}": "=", "{AGG0}": "max"}, "( name ) that belongs to ( conductor ) , that have ( ( nationality ) not equal to ( 'usa' ) )": {"{VALUE0}": "usa", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "conductor", "{OP0}": "!="}, "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( performance ) , that have ( ( type ) not equal to ( live final ) )": {"{VALUE0}": "live final", "{COLUMN0}": "share", "{COLUMN1}": "type", "{TABLE0}": "performance", "{OP0}": "!=", "{AGG0}": "max", "{AGG1}": "min"}, "( name of car makers ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) , and ( ( highschooler ) satisfied that ( ( friend id of people ) equal to ( id of car makers ) ) ) ) , that have ( ( name of poker player ) equal to ( kyle ) )": {"{VALUE0}": "kyle", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{COLUMN3}": "friend_id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": "="}, "( role code ) , ( street ) , ( city ) , ( state ) that belongs to ( professionals ) , that have ( ( city ) like ( '%west%' ) )": {"{VALUE0}": "west", "{COLUMN0}": "role_code", "{COLUMN1}": "street", "{COLUMN2}": "city", "{COLUMN3}": "state", "{TABLE0}": "professionals", "{OP0}": "like"}, "( name ) that belongs to ( singer ) , that have ( ( citizenship ) not equal to ( france ) )": {"{VALUE0}": "france", "{COLUMN0}": "name", "{COLUMN1}": "citizenship", "{TABLE0}": "singer", "{OP0}": "!="}, "( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( singer ) , that have ( ( country ) equal to ( 'france' ) )": {"{VALUE0}": "france", "{COLUMN0}": "age", "{COLUMN1}": "country", "{TABLE0}": "singer", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "( the number of ( all items ) ) that belongs to ( pets ) , that have ( ( weight ) greater than ( 10 ) )": {"{VALUE0}": "10", "{COLUMN0}": "weight", "{TABLE0}": "pets", "{OP0}": ">", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) ) , that have ( ( age of people ) greater than ( 20 ) )": {"{VALUE5}": "20", "{COLUMN0}": "stuid", "{COLUMN1}": "age", "{TABLE0}": "student", "{TABLE1}": "has pet", "{OP0}": ">", "{AGG0}": "count"}, "( petid ) , ( weight ) that belongs to ( pets ) , that have ( ( pet age ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "petid", "{COLUMN1}": "weight", "{COLUMN2}": "pet_age", "{TABLE0}": "pets", "{OP0}": ">"}, "( distinct ( maker of people ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of people ) equal to ( maker of poker player ) ) ) , and ( ( car names ) satisfied that ( ( model of poker player ) equal to ( model of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of car makers ) equal to ( id of student enrolment ) ) ) ) , that have ( ( year of student enrolment ) equal to ( '1970' ) )": {"{VALUE0}": "1970", "{COLUMN0}": "maker", "{COLUMN1}": "id", "{COLUMN2}": "model", "{COLUMN3}": "makeid", "{COLUMN4}": "year", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{TABLE2}": "car names", "{TABLE3}": "cars data", "{OP0}": "="}, "( the average of ( mpg ) ) that belongs to ( cars data ) , that have ( ( cylinders ) equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "mpg", "{COLUMN1}": "cylinders", "{TABLE0}": "cars data", "{OP0}": "=", "{AGG0}": "avg"}, "( the average of ( edispl of poker player ) ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of poker player ) ) ) ) , that have ( ( model of people ) equal to ( 'volvo' ) )": {"{VALUE0}": "volvo", "{COLUMN0}": "edispl", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "model", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "=", "{AGG0}": "avg"}, "( abbreviation ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )": {"{VALUE0}": "jetblue airways", "{COLUMN0}": "abbreviation", "{COLUMN1}": "airline", "{TABLE0}": "airlines", "{OP0}": "="}, "( airline ) that belongs to ( airlines ) , that have ( ( abbreviation ) equal to ( ual ) )": {"{VALUE0}": "ual", "{COLUMN0}": "airline", "{COLUMN1}": "abbreviation", "{TABLE0}": "airlines", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( airline of people ) equal to ( uid of poker player ) ) ) ) , that have ( ( airline of poker player ) equal to ( jetblue airways ) )": {"{VALUE0}": "jetblue airways", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "flights", "{TABLE1}": "airlines", "{OP0}": "=", "{AGG0}": "count"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , that have ( ( destairport of poker player ) equal to ( ahd ) )": {"{VALUE0}": "ahd", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "destairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "="}, "( document name ) , ( template id ) that belongs to ( documents ) , that have ( ( document_description ) like ( %w% ) )": {"{VALUE0}": "w", "{COLUMN0}": "document_name", "{COLUMN1}": "template_id", "{COLUMN2}": "document_description", "{TABLE0}": "documents", "{OP0}": "like"}, "( the number of ( all items ) ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ) , that have ( ( template type code of poker player ) equal to ( 'ppt' ) )": {"{VALUE0}": "ppt", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{TABLE0}": "documents", "{TABLE1}": "templates", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( templates ) , that have ( ( template type code ) equal to ( cv ) )": {"{VALUE0}": "cv", "{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{OP0}": "=", "{AGG0}": "count"}, "( template type description ) that belongs to ( ref template types ) , that have ( ( template type code ) equal to ( ad ) )": {"{VALUE0}": "ad", "{COLUMN0}": "template_type_description", "{COLUMN1}": "template_type_code", "{TABLE0}": "reference template types", "{OP0}": "="}, "( template type code ) that belongs to ( ref template types ) , that have ( ( template type description ) equal to ( book ) )": {"{VALUE0}": "book", "{COLUMN0}": "template_type_code", "{COLUMN1}": "template_type_description", "{TABLE0}": "reference template types", "{OP0}": "="}, "( template id of poker player ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of people ) equal to ( template type code of poker player ) ) ) ) , that have ( ( template type description of people ) equal to ( presentation ) )": {"{VALUE0}": "presentation", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{COLUMN2}": "template_type_description", "{TABLE0}": "reference template types", "{TABLE1}": "templates", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of people ) equal to ( document id of poker player ) ) ) ) , that have ( ( document name of poker player ) equal to ( 'summer show' ) )": {"{VALUE0}": "summer show", "{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{OP0}": "=", "{AGG0}": "count"}, "( other details ) that belongs to ( paragraphs ) , that have ( ( paragraph_text ) like ( 'korea' ) )": {"{VALUE0}": "korea", "{COLUMN0}": "other_details", "{COLUMN1}": "paragraph_text", "{TABLE0}": "paragraphs", "{OP0}": "like"}, "( paragraph id of people ) , ( paragraph text of people ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of people ) equal to ( document id of poker player ) ) ) ) , that have ( ( document name of poker player ) equal to ( 'welcome to ny' ) )": {"{VALUE0}": "welcome to ny", "{COLUMN0}": "paragraph_id", "{COLUMN1}": "paragraph_text", "{COLUMN2}": "document_id", "{COLUMN3}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{OP0}": "="}, "( paragraph text of people ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of people ) equal to ( document id of poker player ) ) ) ) , that have ( ( document name of poker player ) equal to ( customer reviews ) )": {"{VALUE0}": "customer reviews", "{COLUMN0}": "paragraph_text", "{COLUMN1}": "document_id", "{COLUMN2}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{OP0}": "="}, "( the average of ( age ) ) that belongs to ( visitor ) , that have ( ( level of membership ) less than or equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "age", "{COLUMN1}": "level_of_membership", "{TABLE0}": "customer", "{OP0}": "<=", "{AGG0}": "avg"}, "( the average of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) less than ( 2009 ) )": {"{VALUE0}": "2009", "{COLUMN0}": "num_of_staff", "{COLUMN1}": "open_year", "{TABLE0}": "museum", "{OP0}": "<", "{AGG0}": "avg"}, "( num of staff ) , ( open year ) that belongs to ( museum ) , that have ( ( name ) equal to ( 'plaza museum' ) )": {"{VALUE0}": "plaza museum", "{COLUMN0}": "num_of_staff", "{COLUMN1}": "open_year", "{COLUMN2}": "name", "{TABLE0}": "museum", "{OP0}": "="}, "( title ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( ben jones ) )": {"{VALUE0}": "ben jones", "{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{TABLE0}": "cartoon", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( cartoon ) , that have ( ( written by ) equal to ( joseph kuhr ) )": {"{VALUE0}": "joseph kuhr", "{COLUMN0}": "written_by", "{TABLE0}": "cartoon", "{OP0}": "=", "{AGG0}": "count"}, "( content ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )": {"{VALUE0}": "sky radio", "{COLUMN0}": "content", "{COLUMN1}": "series_name", "{TABLE0}": "tv channel", "{OP0}": "="}, "( package option ) that belongs to ( tv channel ) , that have ( ( series name ) equal to ( sky radio ) )": {"{VALUE0}": "sky radio", "{COLUMN0}": "package_option", "{COLUMN1}": "series_name", "{TABLE0}": "tv channel", "{OP0}": "="}, "( air date ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )": {"{VALUE0}": "a love of a lifetime", "{COLUMN0}": "air_date", "{COLUMN1}": "episode", "{TABLE0}": "tv series", "{OP0}": "="}, "( weekly rank ) that belongs to ( tv series ) , that have ( ( episode ) equal to ( a love of a lifetime ) )": {"{VALUE0}": "a love of a lifetime", "{COLUMN0}": "weekly_rank", "{COLUMN1}": "episode", "{TABLE0}": "tv series", "{OP0}": "="}, "( the maximum of ( final table made ) ) that belongs to ( poker player ) , that have ( ( earnings ) less than ( 200000 ) )": {"{VALUE0}": "200000", "{COLUMN0}": "final_table_made", "{COLUMN1}": "earnings", "{TABLE0}": "poker player", "{OP0}": "<", "{AGG0}": "max"}, "( name of people ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) ) , that have ( ( earnings of poker player ) greater than ( 300000 ) )": {"{VALUE6}": "300000", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "earnings", "{TABLE0}": "people", "{TABLE1}": "poker player", "{OP0}": ">"}, "( the average of ( earnings of poker player ) ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) ) , that have ( ( height of people ) greater than ( 200 ) )": {"{VALUE6}": "200", "{COLUMN0}": "earnings", "{COLUMN1}": "people_id", "{COLUMN2}": "height", "{TABLE0}": "people", "{TABLE1}": "poker player", "{OP0}": ">", "{AGG0}": "avg"}, "( continent ) that belongs to ( country ) , that have ( ( name ) equal to ( anguilla ) )": {"{VALUE0}": "anguilla", "{COLUMN0}": "continent", "{COLUMN1}": "name", "{TABLE0}": "country", "{OP0}": "="}, "( region ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( name of poker player ) equal to ( kabul ) )": {"{VALUE0}": "kabul", "{COLUMN0}": "region", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "name", "{TABLE0}": "country", "{TABLE1}": "city", "{OP0}": "="}, "( population ) , ( region ) that belongs to ( country ) , that have ( ( name ) equal to ( angola ) )": {"{VALUE0}": "angola", "{COLUMN0}": "population", "{COLUMN1}": "region", "{COLUMN2}": "name", "{TABLE0}": "country", "{OP0}": "="}, "( the sum of ( population ) ) , ( the maximum of ( gnp ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )": {"{VALUE0}": "asia", "{COLUMN0}": "population", "{COLUMN1}": "gnp", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "sum", "{AGG1}": "max"}, "( the sum of ( population ) ) that belongs to ( city ) , that have ( ( district ) equal to ( gelderland ) )": {"{VALUE0}": "gelderland", "{COLUMN0}": "population", "{COLUMN1}": "district", "{TABLE0}": "city", "{OP0}": "=", "{AGG0}": "sum"}, "( the average of ( gnp ) ) , ( the sum of ( population ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( us territory ) )": {"{VALUE0}": "us territory", "{COLUMN0}": "gnp", "{COLUMN1}": "population", "{COLUMN2}": "governmentform", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "sum"}, "( grade ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )": {"{VALUE0}": "kyle", "{COLUMN0}": "grade", "{COLUMN1}": "name", "{TABLE0}": "high schooler", "{OP0}": "="}, "( name ) that belongs to ( highschooler ) , that have ( ( grade ) equal to ( 10 ) )": {"{VALUE0}": "10", "{COLUMN0}": "name", "{COLUMN1}": "grade", "{TABLE0}": "high schooler", "{OP0}": "="}, "( id ) that belongs to ( highschooler ) , that have ( ( name ) equal to ( kyle ) )": {"{VALUE0}": "kyle", "{COLUMN0}": "id", "{COLUMN1}": "name", "{TABLE0}": "high schooler", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , that have ( ( name of poker player ) equal to ( kyle ) )": {"{VALUE0}": "kyle", "{COLUMN0}": "student_id", "{COLUMN1}": "id", "{COLUMN2}": "name", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , that have ( ( name of poker player ) equal to ( kyle ) )": {"{VALUE0}": "kyle", "{COLUMN0}": "student_id", "{COLUMN1}": "id", "{COLUMN2}": "name", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{OP0}": "=", "{AGG0}": "count"}, "( feature type name of poker player ) that belongs to ( ( other available features ) , and ( ( ref feature types ) satisfied that ( ( feature type code of people ) equal to ( feature type code of poker player ) ) ) ) , that have ( ( feature name of people ) equal to ( aircon ) )": {"{VALUE0}": "aircon", "{COLUMN0}": "feature_type_name", "{COLUMN1}": "feature_type_code", "{COLUMN2}": "feature_name", "{TABLE0}": "other available features", "{TABLE1}": "reference feature types", "{OP0}": "="}, "( stuid ) that belongs to ( student ), and except that ( ( stuid of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ))": {"{VALUE0}": "cat", "{COLUMN0}": "stuid", "{COLUMN1}": "petid", "{COLUMN2}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "="}, "( petid of poker player ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) ) , that have ( ( lname of people ) equal to ( 'smith' ) )": {"{VALUE0}": "smith", "{COLUMN0}": "petid", "{COLUMN1}": "stuid", "{COLUMN2}": "lname", "{TABLE0}": "student", "{TABLE1}": "has pet", "{OP0}": "="}, "( distinct ( model of people ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of people ) equal to ( model of poker player ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of poker player ) equal to ( id of car makers ) ) ) ) , that have ( ( year of car makers ) greater than ( 1980 ) )": {"{VALUE9}": "1980", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "model list", "{TABLE1}": "car names", "{TABLE2}": "cars data", "{OP0}": ">"}, "( accelerate of people ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of people ) equal to ( makeid of poker player ) ) ) ) , that have ( ( make of poker player ) equal to ( 'amc hornet sportabout (sw)' ) )": {"{VALUE0}": "amc hornet sportabout  ( sw ) ", "{COLUMN0}": "accelerate", "{COLUMN1}": "id", "{COLUMN2}": "makeid", "{COLUMN3}": "make", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( horsepower ) greater than ( 150 ) )": {"{VALUE0}": "150", "{COLUMN0}": "horsepower", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count"}, "( the average of ( horsepower ) ) that belongs to ( cars data ) , that have ( ( year ) less than ( 1980 ) )": {"{VALUE0}": "1980", "{COLUMN0}": "horsepower", "{COLUMN1}": "year", "{TABLE0}": "cars data", "{OP0}": "<", "{AGG0}": "avg"}, "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "cylinders", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of people ) equal to ( maker of poker player ) ) ) ) , that have ( ( fullname of people ) equal to ( 'american motor company' ) )": {"{VALUE0}": "american motor company", "{COLUMN0}": "id", "{COLUMN1}": "maker", "{COLUMN2}": "fullname", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( cylinders ) greater than ( 6 ) )": {"{VALUE0}": "6", "{COLUMN0}": "cylinders", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count"}, "( country ) that belongs to ( airlines ) , that have ( ( airline ) equal to ( jetblue airways ) )": {"{VALUE0}": "jetblue airways", "{COLUMN0}": "country", "{COLUMN1}": "airline", "{TABLE0}": "airlines", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( usa ) )": {"{VALUE0}": "usa", "{COLUMN0}": "country", "{TABLE0}": "airlines", "{OP0}": "=", "{AGG0}": "count"}, "( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( aberdeen ) )": {"{VALUE0}": "aberdeen", "{COLUMN0}": "airportname", "{COLUMN1}": "city", "{TABLE0}": "airports", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )": {"{VALUE0}": "apg", "{COLUMN0}": "sourceairport", "{TABLE0}": "flights", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( ato ) )": {"{VALUE0}": "ato", "{COLUMN0}": "destairport", "{TABLE0}": "flights", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of people ) equal to ( airportcode of poker player ) ) ) ) , that have ( ( city of poker player ) equal to ( aberdeen ) )": {"{VALUE0}": "aberdeen", "{COLUMN0}": "sourceairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of people ) equal to ( airportcode of poker player ) ) ) ) , that have ( ( city of poker player ) equal to ( aberdeen ) )": {"{VALUE0}": "aberdeen", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , that have ( ( sourceairport of poker player ) equal to ( ahd ) )": {"{VALUE0}": "ahd", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "="}, "( flightno of people ) that belongs to ( ( flights ) , and ( ( airlines ) satisfied that ( ( uid of poker player ) equal to ( airline of people ) ) ) ) , that have ( ( airline of poker player ) equal to ( united airlines ) )": {"{VALUE0}": "united airlines", "{COLUMN0}": "flightno", "{COLUMN1}": "uid", "{COLUMN2}": "airline", "{TABLE0}": "flights", "{TABLE1}": "airlines", "{OP0}": "="}, "( flightno ) that belongs to ( flights ) , that have ( ( sourceairport ) equal to ( apg ) )": {"{VALUE0}": "apg", "{COLUMN0}": "flightno", "{COLUMN1}": "sourceairport", "{TABLE0}": "flights", "{OP0}": "="}, "( flightno ) that belongs to ( flights ) , that have ( ( destairport ) equal to ( apg ) )": {"{VALUE0}": "apg", "{COLUMN0}": "flightno", "{COLUMN1}": "destairport", "{TABLE0}": "flights", "{OP0}": "="}, "( flightno of people ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( sourceairport of people ) equal to ( airportcode of poker player ) ) ) ) , that have ( ( city of poker player ) equal to ( aberdeen ) )": {"{VALUE0}": "aberdeen", "{COLUMN0}": "flightno", "{COLUMN1}": "sourceairport", "{COLUMN2}": "airportcode", "{COLUMN3}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "="}, "( flightno of people ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of people ) equal to ( airportcode of poker player ) ) ) ) , that have ( ( city of poker player ) equal to ( aberdeen ) )": {"{VALUE0}": "aberdeen", "{COLUMN0}": "flightno", "{COLUMN1}": "destairport", "{COLUMN2}": "airportcode", "{COLUMN3}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( age ) less than ( 30 ) )": {"{VALUE0}": "30", "{COLUMN0}": "age", "{TABLE0}": "customer", "{OP0}": "<", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ship ) , that have ( ( disposition of ship ) equal to ( 'captured' ) )": {"{VALUE0}": "captured", "{COLUMN0}": "disposition_of_ship", "{TABLE0}": "ship", "{OP0}": "=", "{AGG0}": "count"}, "( note ) that belongs to ( death ) , that have ( ( note ) like ( '%east%' ) )": {"{VALUE0}": "east", "{COLUMN0}": "note", "{TABLE0}": "death", "{OP0}": "like"}, "( course description ) that belongs to ( courses ) , that have ( ( course name ) equal to ( 'math' ) )": {"{VALUE0}": "math", "{COLUMN0}": "course_description", "{COLUMN1}": "course_name", "{TABLE0}": "courses", "{OP0}": "="}, "( zip postcode ) that belongs to ( addresses ) , that have ( ( city ) equal to ( 'port chelsea' ) )": {"{VALUE0}": "port chelsea", "{COLUMN0}": "zip_postcode", "{COLUMN1}": "city", "{TABLE0}": "addresses", "{OP0}": "="}, "( section description ) that belongs to ( sections ) , that have ( ( section name ) equal to ( 'h' ) )": {"{VALUE0}": "h", "{COLUMN0}": "section_description", "{COLUMN1}": "section_name", "{TABLE0}": "sections", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( tv channel ) , that have ( ( language ) equal to ( english ) )": {"{VALUE0}": "english", "{COLUMN0}": "language", "{TABLE0}": "tv channel", "{OP0}": "=", "{AGG0}": "count"}, "( package option ) , ( series name ) that belongs to ( tv channel ) , that have ( ( hight definition tv ) equal to ( yes ) )": {"{VALUE0}": "yes", "{COLUMN0}": "package_option", "{COLUMN1}": "series_name", "{COLUMN2}": "hight_definition_tv", "{TABLE0}": "tv channel", "{OP0}": "="}, "( pixel aspect ratio par ) , ( country ) that belongs to ( tv channel ) , that have ( ( language ) not equal to ( 'english' ) )": {"{VALUE0}": "english", "{COLUMN0}": "pixel_aspect_ratio_par", "{COLUMN1}": "country", "{COLUMN2}": "language", "{TABLE0}": "tv channel", "{OP0}": "!="}, "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant name ) not equal to ( 'jessie alloway' ) )": {"{VALUE0}": "jessie alloway", "{COLUMN0}": "contestant_name", "{TABLE0}": "contestants", "{OP0}": "!="}, "( name ) that belongs to ( country ) , that have ( ( indepyear ) greater than ( 1950 ) )": {"{VALUE0}": "1950", "{COLUMN0}": "name", "{COLUMN1}": "indepyear", "{TABLE0}": "country", "{OP0}": ">"}, "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( region ) equal to ( caribbean ) )": {"{VALUE0}": "caribbean", "{COLUMN0}": "surfacearea", "{COLUMN1}": "region", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "sum"}, "( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( name ) equal to ( brazil ) )": {"{VALUE0}": "brazil", "{COLUMN0}": "population", "{COLUMN1}": "lifeexpectancy", "{COLUMN2}": "name", "{TABLE0}": "country", "{OP0}": "="}, "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( region ) equal to ( central africa ) )": {"{VALUE0}": "central africa", "{COLUMN0}": "lifeexpectancy", "{COLUMN1}": "region", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "avg"}, "( the number of ( language of poker player ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( name of people ) equal to ( aruba ) )": {"{VALUE0}": "aruba", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "name", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( distinct ( continent ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( chinese ) )": {"{VALUE0}": "chinese", "{COLUMN0}": "continent", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count"}, "( distinct ( countrycode ) ) that belongs to ( countrylanguage ) , that have ( ( language ) not equal to ( english ) )": {"{VALUE0}": "english", "{COLUMN0}": "countrycode", "{COLUMN1}": "language", "{TABLE0}": "countrylanguage", "{OP0}": "!="}, "( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of people ) equal to ( countryid of poker player ) ) ) ) , that have ( ( countryname of poker player ) equal to ( 'france' ) )": {"{VALUE0}": "france", "{COLUMN0}": "country", "{COLUMN1}": "countryid", "{COLUMN2}": "countryname", "{TABLE0}": "car makers", "{TABLE1}": "countries", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of people ) equal to ( id of poker player ) ) ) , and ( ( countries ) satisfied that ( ( country of poker player ) equal to ( countryid of car makers ) ) ) ) , that have ( ( countryname of car makers ) equal to ( 'usa' ) )": {"{VALUE0}": "usa", "{COLUMN0}": "maker", "{COLUMN1}": "id", "{COLUMN2}": "country", "{COLUMN3}": "countryid", "{COLUMN4}": "countryname", "{TABLE0}": "model list", "{TABLE1}": "car makers", "{TABLE2}": "countries", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( year ) equal to ( 1980 ) )": {"{VALUE0}": "1980", "{COLUMN0}": "year", "{TABLE0}": "cars data", "{OP0}": "=", "{AGG0}": "count"}, "( airportcode ) , ( airportname ) that belongs to ( airports ) , that have ( ( city ) equal to ( anthony ) )": {"{VALUE0}": "anthony", "{COLUMN0}": "airportcode", "{COLUMN1}": "airportname", "{COLUMN2}": "city", "{TABLE0}": "airports", "{OP0}": "="}, "( city ) , ( country ) that belongs to ( airports ) , that have ( ( airportname ) equal to ( alton ) )": {"{VALUE0}": "alton", "{COLUMN0}": "city", "{COLUMN1}": "country", "{COLUMN2}": "airportname", "{TABLE0}": "airports", "{OP0}": "="}, "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) equal to ( ako ) )": {"{VALUE0}": "ako", "{COLUMN0}": "airportname", "{COLUMN1}": "airportcode", "{TABLE0}": "airports", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( departments ) , and ( ( degree programs ) satisfied that ( ( department id of people ) equal to ( department id of poker player ) ) ) ) , that have ( ( department name of people ) equal to ( 'engineer' ) )": {"{VALUE0}": "engineer", "{COLUMN0}": "department_id", "{COLUMN1}": "department_name", "{TABLE0}": "departments", "{TABLE1}": "degree programs", "{OP0}": "=", "{AGG0}": "count"}, "( department description ) that belongs to ( departments ) , that have ( ( department_name ) like ( '%computer%' ) )": {"{VALUE0}": "computer", "{COLUMN0}": "department_description", "{COLUMN1}": "department_name", "{TABLE0}": "departments", "{OP0}": "like"}, "( contestant name ) that belongs to ( contestants ) , that have ( ( contestant_name ) like ( %al% ) )": {"{VALUE0}": "al", "{COLUMN0}": "contestant_name", "{TABLE0}": "contestants", "{OP0}": "like"}, "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( governmentform ) equal to ( republic ) )": {"{VALUE0}": "republic", "{COLUMN0}": "governmentform", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( distinct ( governmentform ) ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) )": {"{VALUE0}": "africa", "{COLUMN0}": "governmentform", "{COLUMN1}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "count"}, "( countrycode ) that belongs to ( countrylanguage ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))": {"{VALUE0}": "english", "{COLUMN0}": "countrycode", "{COLUMN1}": "language", "{TABLE0}": "countrylanguage", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) )": {"{VALUE0}": "asia", "{COLUMN0}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{AGG0}": "count"}, "( line 1 ) , ( line 2 ) that belongs to ( addresses )": {"{COLUMN0}": "line_1", "{COLUMN1}": "line_2", "{TABLE0}": "addresses"}, "( first name ) that belongs to ( professionals ) and ( first name ) that belongs to ( owners ), and except that ( ( name ) that belongs to ( dogs ))": {"{COLUMN0}": "first_name", "{COLUMN1}": "name", "{TABLE0}": "professionals", "{TABLE1}": "owners", "{TABLE2}": "dogs"}, "( first name of people ) , ( name of poker player ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "name", "{COLUMN2}": "owner_id", "{TABLE0}": "owners", "{TABLE1}": "dogs"}, "( document id ) , ( document name ) , ( document description ) that belongs to ( documents )": {"{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{COLUMN2}": "document_description", "{TABLE0}": "documents"}, "( template id ) , ( version number ) , ( template type code ) that belongs to ( templates )": {"{COLUMN0}": "template_id", "{COLUMN1}": "version_number", "{COLUMN2}": "template_type_code", "{TABLE0}": "templates"}, "( vote id ) , ( phone number ) , ( state ) that belongs to ( votes )": {"{COLUMN0}": "vote_id", "{COLUMN1}": "phone_number", "{COLUMN2}": "state", "{TABLE0}": "votes"}, "( professional id ) , ( role code ) , ( email address ) that belongs to ( professionals ), and except that ( ( professional id of people ) , ( role code of people ) , ( email address of people ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of people ) equal to ( professional id of poker player ) ) ) ))": {"{COLUMN0}": "professional_id", "{COLUMN1}": "role_code", "{COLUMN2}": "email_address", "{TABLE0}": "professionals", "{TABLE1}": "treatments"}, "( first name of people ) , ( last name of people ) , ( size code of poker player ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "size_code", "{COLUMN3}": "owner_id", "{TABLE0}": "owners", "{TABLE1}": "dogs"}, "( email address ) , ( cell number ) , ( home phone ) that belongs to ( professionals )": {"{COLUMN0}": "email_address", "{COLUMN1}": "cell_number", "{COLUMN2}": "home_phone", "{TABLE0}": "professionals"}, "( title of poker player ) , ( name of people ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of people ) equal to ( singer id of poker player ) ) ) )": {"{COLUMN0}": "title", "{COLUMN1}": "name", "{COLUMN2}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song"}, "( the maximum of ( capacity ) ) , ( average ) that belongs to ( stadium )": {"{COLUMN0}": "capacity", "{COLUMN1}": "average", "{TABLE0}": "stadium", "{AGG0}": "max"}, "( age ) , ( hometown ) that belongs to ( teacher )": {"{COLUMN0}": "age", "{COLUMN1}": "hometown", "{TABLE0}": "teacher"}, "( name of car makers ) , ( course of poker player ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of people ) equal to ( course id of poker player ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of people ) equal to ( teacher id of car makers ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "course", "{COLUMN2}": "course_id", "{COLUMN3}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher"}, "( name ) , ( date ) that belongs to ( battle )": {"{COLUMN0}": "name", "{COLUMN1}": "date", "{TABLE0}": "battle"}, "( distinct ( state ) ) , ( created ) that belongs to ( votes )": {"{COLUMN0}": "state", "{COLUMN1}": "created", "{TABLE0}": "votes"}, "( name of people ) , ( orchestra of poker player ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of people ) equal to ( conductor id of poker player ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{TABLE0}": "conductor"}, "( name of poker player ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ), and intersect with ( ( name of poker player ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( liked id of people ) equal to ( id of poker player ) ) ) ))": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{COLUMN3}": "liked_id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{TABLE2}": "likes"}, "( state ) that belongs to ( owners ), and intersect with ( ( state ) that belongs to ( professionals ))": {"{COLUMN0}": "state", "{TABLE0}": "owners", "{TABLE1}": "professionals"}, "( date of treatment of people ) , ( first name of poker player ) that belongs to ( ( treatments ) , and ( ( professionals ) satisfied that ( ( professional id of people ) equal to ( professional id of poker player ) ) ) )": {"{COLUMN0}": "date_of_treatment", "{COLUMN1}": "first_name", "{COLUMN2}": "professional_id", "{TABLE0}": "treatments", "{TABLE1}": "professionals"}, "( cost of treatment of people ) , ( treatment type description of poker player ) that belongs to ( ( treatments ) , and ( ( treatment types ) satisfied that ( ( treatment type code of people ) equal to ( treatment type code of poker player ) ) ) )": {"{COLUMN0}": "cost_of_treatment", "{COLUMN1}": "treatment_type_description", "{COLUMN2}": "treatment_type_code", "{TABLE0}": "treatments", "{TABLE1}": "treatment types"}, "( distinct ( date arrived of people ) ) , ( date departed of people ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of people ) equal to ( dog id of poker player ) ) ) )": {"{COLUMN0}": "date_arrived", "{COLUMN1}": "date_departed", "{COLUMN2}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments"}, "( date arrived ) , ( date departed ) that belongs to ( dogs )": {"{COLUMN0}": "date_arrived", "{COLUMN1}": "date_departed", "{TABLE0}": "dogs"}, "( distinct ( breed code ) ) , ( size code ) that belongs to ( dogs )": {"{COLUMN0}": "breed_code", "{COLUMN1}": "size_code", "{TABLE0}": "dogs"}, "( distinct ( first name of people ) ) , ( treatment type description of car makers ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of people ) equal to ( professional id of poker player ) ) ) , and ( ( treatment types ) satisfied that ( ( treatment type code of poker player ) equal to ( treatment type code of car makers ) ) ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "treatment_type_description", "{COLUMN2}": "professional_id", "{COLUMN3}": "treatment_type_code", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{TABLE2}": "treatment types"}, "( birth year ) , ( citizenship ) that belongs to ( singer )": {"{COLUMN0}": "birth_year", "{COLUMN1}": "citizenship", "{TABLE0}": "singer"}, "( the average of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( stadium )": {"{COLUMN0}": "capacity", "{TABLE0}": "stadium", "{AGG0}": "avg", "{AGG1}": "max"}, "( distinct ( fname of people ) ) , ( age of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) )": {"{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet"}, "( maker ) , ( model ) that belongs to ( model list )": {"{COLUMN0}": "maker", "{COLUMN1}": "model", "{TABLE0}": "model list"}, "( the minimum of ( number products ) ) , ( the maximum of ( number products ) ) that belongs to ( shop )": {"{COLUMN0}": "number_products", "{TABLE0}": "shop", "{AGG0}": "min", "{AGG1}": "max"}, "( the sum of ( bonus ) ) that belongs to ( evaluation )": {"{COLUMN0}": "bonus", "{TABLE0}": "evaluation", "{AGG0}": "sum"}, "( template id ) that belongs to ( templates ), and except that ( ( template id ) that belongs to ( documents ))": {"{COLUMN0}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents"}, "( distinct ( template type code ) ) that belongs to ( templates )": {"{COLUMN0}": "template_type_code", "{TABLE0}": "templates"}, "( the minimum of ( version number ) ) , ( template type code ) that belongs to ( templates )": {"{COLUMN0}": "version_number", "{COLUMN1}": "template_type_code", "{TABLE0}": "templates", "{AGG0}": "min"}, "( distinct ( template type description of people ) ) that belongs to ( ( ref template types ) , and ( ( templates ) satisfied that ( ( template type code of people ) equal to ( template type code of poker player ) ) ) , and ( ( documents ) satisfied that ( ( template id of poker player ) equal to ( template id of car makers ) ) ) )": {"{COLUMN0}": "template_type_description", "{COLUMN1}": "template_type_code", "{COLUMN2}": "template_id", "{TABLE0}": "reference template types", "{TABLE1}": "templates", "{TABLE2}": "documents"}, "( the number of ( distinct ( country code ) ) ) that belongs to ( players )": {"{COLUMN0}": "country_code", "{TABLE0}": "players", "{AGG0}": "count"}, "( the number of ( distinct ( result ) ) ) that belongs to ( battle )": {"{COLUMN0}": "result", "{TABLE0}": "battle", "{AGG0}": "count"}, "( distinct ( course name of people ) ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of people ) equal to ( course id of poker player ) ) ) )": {"{COLUMN0}": "course_name", "{COLUMN1}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "student enrolment courses"}, "( the number of ( distinct ( series name ) ) ) , ( the number of ( distinct ( content ) ) ) that belongs to ( tv channel )": {"{COLUMN0}": "series_name", "{COLUMN1}": "content", "{TABLE0}": "tv channel", "{AGG0}": "count", "{AGG1}": "count"}, "( final table made ) , ( best finish ) that belongs to ( poker player )": {"{COLUMN0}": "final_table_made", "{COLUMN1}": "best_finish", "{TABLE0}": "poker player"}, "( the average of ( attendance ) ) that belongs to ( show )": {"{COLUMN0}": "attendance", "{TABLE0}": "show", "{AGG0}": "avg"}, "( the number of ( distinct ( nationality ) ) ) that belongs to ( conductor )": {"{COLUMN0}": "nationality", "{TABLE0}": "conductor", "{AGG0}": "count"}, "( name ) , ( grade ) that belongs to ( highschooler )": {"{COLUMN0}": "name", "{COLUMN1}": "grade", "{TABLE0}": "high schooler"}, "( id ) that belongs to ( highschooler ), and except that ( ( student id ) that belongs to ( friend ))": {"{COLUMN0}": "id", "{COLUMN1}": "student_id", "{TABLE0}": "high schooler", "{TABLE1}": "friend"}, "( name ) that belongs to ( highschooler ), and except that ( ( name of poker player ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ))": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "high schooler", "{TABLE1}": "friend"}, "( student id ) that belongs to ( friend ), and intersect with ( ( liked id ) that belongs to ( likes ))": {"{COLUMN0}": "student_id", "{COLUMN1}": "liked_id", "{TABLE0}": "friend", "{TABLE1}": "likes"}, "( the average of ( age ) ) that belongs to ( dogs )": {"{COLUMN0}": "age", "{TABLE0}": "dogs", "{AGG0}": "avg"}, "( charge type ) , ( charge amount ) that belongs to ( charges )": {"{COLUMN0}": "charge_type", "{COLUMN1}": "charge_amount", "{TABLE0}": "charges"}, "( the maximum of ( charge amount ) ) that belongs to ( charges )": {"{COLUMN0}": "charge_amount", "{TABLE0}": "charges", "{AGG0}": "max"}, "( the number of ( all items ) ) that belongs to ( singer )": {"{TABLE0}": "singer", "{AGG0}": "count"}, "( the number of ( distinct ( pettype ) ) ) that belongs to ( pets )": {"{COLUMN0}": "pettype", "{TABLE0}": "pets", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( continents )": {"{TABLE0}": "continents", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( countries )": {"{TABLE0}": "countries", "{AGG0}": "count"}, "( countryname ) that belongs to ( countries ), and except that ( ( countryname of people ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of people ) equal to ( country of poker player ) ) ) ))": {"{COLUMN0}": "countryname", "{COLUMN1}": "countryid", "{COLUMN2}": "country", "{TABLE0}": "countries", "{TABLE1}": "car makers"}, "( the number of ( all items ) ) that belongs to ( airlines )": {"{TABLE0}": "airlines", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( airports )": {"{TABLE0}": "airports", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( flights )": {"{TABLE0}": "flights", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( employee )": {"{TABLE0}": "employee", "{AGG0}": "count"}, "all items that belongs to ( hiring )": {"{TABLE0}": "hiring"}, "( the number of ( distinct ( location ) ) ) that belongs to ( shop )": {"{COLUMN0}": "location", "{TABLE0}": "shop", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( documents )": {"{TABLE0}": "documents", "{AGG0}": "count"}, "( the number of ( distinct ( template id ) ) ) that belongs to ( documents )": {"{COLUMN0}": "template_id", "{TABLE0}": "documents", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( templates )": {"{TABLE0}": "templates", "{AGG0}": "count"}, "( template type code ) that belongs to ( templates ), and except that ( ( template type code ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ))": {"{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents"}, "( template type code ) , ( template type description ) that belongs to ( ref template types )": {"{COLUMN0}": "template_type_code", "{COLUMN1}": "template_type_description", "{TABLE0}": "reference template types"}, "( the number of ( all items ) ) that belongs to ( paragraphs )": {"{TABLE0}": "paragraphs", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( teacher )": {"{TABLE0}": "teacher", "{AGG0}": "count"}, "( the average of ( num of ticket ) ) , ( the maximum of ( num of ticket ) ) that belongs to ( visit )": {"{COLUMN0}": "num_of_ticket", "{TABLE0}": "visit", "{AGG0}": "avg", "{AGG1}": "max"}, "( the number of ( all items ) ) that belongs to ( players )": {"{TABLE0}": "players", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( matches )": {"{TABLE0}": "matches", "{AGG0}": "count"}, "( the average of ( loser age ) ) , ( the average of ( winner age ) ) that belongs to ( matches )": {"{COLUMN0}": "loser_age", "{COLUMN1}": "winner_age", "{TABLE0}": "matches", "{AGG0}": "avg", "{AGG1}": "avg"}, "( the average of ( winner rank ) ) that belongs to ( matches )": {"{COLUMN0}": "winner_rank", "{TABLE0}": "matches", "{AGG0}": "avg"}, "( the minimum of ( loser rank ) ) that belongs to ( matches )": {"{COLUMN0}": "loser_rank", "{TABLE0}": "matches", "{AGG0}": "min"}, "( the number of ( distinct ( loser name ) ) ) that belongs to ( matches )": {"{COLUMN0}": "loser_name", "{TABLE0}": "matches", "{AGG0}": "count"}, "( the maximum of ( killed ) ) , ( the minimum of ( killed ) ) that belongs to ( death )": {"{COLUMN0}": "killed", "{TABLE0}": "death", "{AGG0}": "max", "{AGG1}": "min"}, "( the number of ( all items ) ) that belongs to ( courses )": {"{TABLE0}": "courses", "{AGG0}": "count"}, "( the number of ( distinct ( degree summary name ) ) ) that belongs to ( degree programs )": {"{COLUMN0}": "degree_summary_name", "{TABLE0}": "degree programs", "{AGG0}": "count"}, "( section name ) , ( section description ) that belongs to ( sections )": {"{COLUMN0}": "section_name", "{COLUMN1}": "section_description", "{TABLE0}": "sections"}, "( the average of ( transcript date ) ) that belongs to ( transcripts )": {"{COLUMN0}": "transcript_date", "{TABLE0}": "transcripts", "{AGG0}": "avg"}, "( the number of ( all items ) ) that belongs to ( transcripts )": {"{TABLE0}": "transcripts", "{AGG0}": "count"}, "( the number of ( distinct ( current address id ) ) ) that belongs to ( students )": {"{COLUMN0}": "current_address_id", "{TABLE0}": "students", "{AGG0}": "count"}, "( the maximum of ( share ) ) , ( the minimum of ( share ) ) that belongs to ( tv series )": {"{COLUMN0}": "share", "{TABLE0}": "tv series", "{AGG0}": "max", "{AGG1}": "min"}, "( the average of ( earnings ) ) that belongs to ( poker player )": {"{COLUMN0}": "earnings", "{TABLE0}": "poker player", "{AGG0}": "avg"}, "( name of people ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "people", "{TABLE1}": "poker player"}, "( the number of ( distinct ( nationality ) ) ) that belongs to ( people )": {"{COLUMN0}": "nationality", "{TABLE0}": "people", "{AGG0}": "count"}, "( the maximum of ( area code ) ) , ( the minimum of ( area code ) ) that belongs to ( area code state )": {"{COLUMN0}": "area_code", "{TABLE0}": "area code state", "{AGG0}": "max", "{AGG1}": "min"}, "( the number of ( distinct ( language ) ) ) that belongs to ( countrylanguage )": {"{COLUMN0}": "language", "{TABLE0}": "countrylanguage", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( conductor )": {"{TABLE0}": "conductor", "{AGG0}": "count"}, "( grade ) that belongs to ( highschooler )": {"{COLUMN0}": "grade", "{TABLE0}": "high schooler"}, "( the number of ( distinct ( dog id ) ) ) that belongs to ( treatments )": {"{COLUMN0}": "dog_id", "{TABLE0}": "treatments", "{AGG0}": "count"}, "( the maximum of ( age ) ) that belongs to ( dogs )": {"{COLUMN0}": "age", "{TABLE0}": "dogs", "{AGG0}": "max"}, "( the average of ( injured ) ) that belongs to ( death )": {"{COLUMN0}": "injured", "{TABLE0}": "death", "{AGG0}": "avg"}, "( the number of ( distinct ( department id ) ) ) that belongs to ( degree programs )": {"{COLUMN0}": "department_id", "{TABLE0}": "degree programs", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( poker player )": {"{TABLE0}": "poker player", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( area code state )": {"{TABLE0}": "area code state", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( highschooler )": {"{TABLE0}": "high schooler", "{AGG0}": "count"}, "( the number of ( distinct ( professional id ) ) ) that belongs to ( treatments )": {"{COLUMN0}": "professional_id", "{TABLE0}": "treatments", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( other available features )": {"{TABLE0}": "other available features", "{AGG0}": "count"}, "( address id of people ) , ( line 1 of people ) , ( line 2 of people ) that belongs to ( ( addresses ) , and ( ( students ) satisfied that ( ( address id of people ) equal to ( current address id of poker player ) ) ) ) , grouped by ( address id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "address_id", "{COLUMN1}": "line_1", "{COLUMN2}": "line_2", "{COLUMN3}": "current_address_id", "{TABLE0}": "addresses", "{TABLE1}": "students", "{AGG0}": "count", "{SC0}": "desc"}, "( student id of people ) , ( first name of people ) , ( middle name of people ) , ( last name of people ) , ( the number of ( all items ) ) , ( student id of people ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of people ) equal to ( student id of poker player ) ) ) ) , grouped by ( student id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "student_id", "{COLUMN1}": "first_name", "{COLUMN2}": "middle_name", "{COLUMN3}": "last_name", "{TABLE0}": "students", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( owner id of people ) , ( first name of poker player ) , ( last name of poker player ) that belongs to ( ( dogs ) , and ( ( owners ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) ) , grouped by ( owner id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "owner_id", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "dogs", "{TABLE1}": "owners", "{AGG0}": "count", "{SC0}": "desc"}, "( owner id of people ) , ( last name of people ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of poker player ) equal to ( dog id of car makers ) ) ) ) , grouped by ( owner id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "owner_id", "{COLUMN1}": "last_name", "{COLUMN2}": "dog_id", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{TABLE2}": "treatments", "{AGG0}": "count", "{SC0}": "desc"}, "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of ship ) ) ) ) , grouped by ( employee id of ship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "employee_id", "{TABLE0}": "employee", "{TABLE1}": "evaluation", "{AGG0}": "count", "{SC0}": "desc"}, "( id of poker player ) , ( name of poker player ) that belongs to ( ( death ) , and ( ( ship ) satisfied that ( ( caused by ship id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( id of poker player ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "caused_by_ship_id", "{TABLE0}": "death", "{TABLE1}": "ship", "{AGG0}": "count", "{SC0}": "desc"}, "( contestant number of people ) , ( contestant name of people ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of people ) equal to ( contestant number of poker player ) ) ) ) , grouped by ( contestant number of people ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "contestant_number", "{COLUMN1}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{AGG0}": "count", "{SC0}": "asc"}, "( name of ship ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of students ) equal to ( shop id of ship ) ) ) ) , grouped by ( shop id of students ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "shop_id", "{TABLE0}": "hiring", "{TABLE1}": "shop", "{AGG0}": "count", "{SC0}": "desc"}, "( museum id of ship ) , ( name of students ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of students ) equal to ( museum id of ship ) ) ) ) , grouped by ( museum id of ship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "museum_id", "{COLUMN1}": "name", "{TABLE0}": "museum", "{TABLE1}": "visit", "{AGG0}": "count", "{SC0}": "desc"}, "( name of people ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of people ) equal to ( conductor id of poker player ) ) ) ) , grouped by ( conductor id of poker player ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{TABLE0}": "conductor", "{AGG0}": "count", "{SC0}": "desc"}, "( name of poker player ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( student id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{AGG0}": "count", "{SC0}": "desc"}, "( name of poker player ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( student id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{AGG0}": "count", "{SC0}": "desc"}, "( breed name of people ) that belongs to ( ( breeds ) , and ( ( dogs ) satisfied that ( ( breed code of people ) equal to ( breed code of poker player ) ) ) ) , grouped by ( breed name of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "breed_name", "{COLUMN1}": "breed_code", "{TABLE0}": "breeds", "{TABLE1}": "dogs", "{AGG0}": "count", "{SC0}": "desc"}, "( year ) that belongs to ( concert ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "year", "{TABLE0}": "concert", "{AGG0}": "count", "{SC0}": "desc"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , grouped by ( airline of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "( template id of people ) , ( template type code of poker player ) that belongs to ( ( documents ) , and ( ( templates ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ) , grouped by ( template id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{TABLE0}": "documents", "{TABLE1}": "templates", "{AGG0}": "count", "{SC0}": "desc"}, "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{AGG0}": "count", "{SC0}": "desc"}, "( template type code of people ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ) , grouped by ( template type code of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents", "{AGG0}": "count", "{SC0}": "desc"}, "( document id of people ) , ( document name of poker player ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of people ) equal to ( document id of poker player ) ) ) ) , grouped by ( document id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{AGG0}": "count", "{SC0}": "desc"}, "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{AGG0}": "count", "{SC0}": "asc"}, "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "hometown", "{TABLE0}": "teacher", "{AGG0}": "count", "{SC0}": "desc"}, "( year ) that belongs to ( matches ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "year", "{TABLE0}": "matches", "{AGG0}": "count", "{SC0}": "desc"}, "( winner name ) , ( winner rank points ) that belongs to ( matches ) , grouped by ( winner name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "winner_name", "{COLUMN1}": "winner_rank_points", "{TABLE0}": "matches", "{AGG0}": "count", "{SC0}": "desc"}, "( country code ) that belongs to ( players ) , grouped by ( country code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "country_code", "{TABLE0}": "players", "{AGG0}": "count", "{SC0}": "desc"}, "( department name of poker player ) , ( department id of people ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of people ) equal to ( department id of poker player ) ) ) ) , grouped by ( department id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "department_name", "{COLUMN1}": "department_id", "{TABLE0}": "degree programs", "{TABLE1}": "departments", "{AGG0}": "count", "{SC0}": "desc"}, "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "language", "{TABLE0}": "tv channel", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "asc"}, "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "nationality", "{TABLE0}": "people", "{AGG0}": "count", "{SC0}": "desc"}, "( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , grouped by ( name of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{AGG0}": "count", "{SC0}": "desc"}, "( record company ) that belongs to ( orchestra ) , grouped by ( record company ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{AGG0}": "count", "{SC0}": "desc"}, "( citizenship ) that belongs to ( singer ) , grouped by ( citizenship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "citizenship", "{TABLE0}": "singer", "{AGG0}": "count", "{SC0}": "desc"}, "( countryname of poker player ) that belongs to ( ( car makers ) , and ( ( countries ) satisfied that ( ( country of people ) equal to ( countryid of poker player ) ) ) ) , grouped by ( country of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "countryname", "{COLUMN1}": "country", "{COLUMN2}": "countryid", "{TABLE0}": "car makers", "{TABLE1}": "countries", "{AGG0}": "count", "{SC0}": "desc"}, "( model ) that belongs to ( car names ) , grouped by ( model ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "model", "{TABLE0}": "car names", "{AGG0}": "count", "{SC0}": "desc"}, "( city of people ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of people ) equal to ( destairport of poker player ) ) ) ) , grouped by ( city of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "city", "{COLUMN1}": "airportcode", "{COLUMN2}": "destairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "( city of people ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( airportcode of people ) equal to ( sourceairport of poker player ) ) ) ) , grouped by ( city of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "city", "{COLUMN1}": "airportcode", "{COLUMN2}": "sourceairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "( airportcode of people ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of people ) equal to ( destairport of poker player ) ) or ( ( airportcode of people ) equal to ( sourceairport of poker player ) ) ) ) ) , grouped by ( airportcode of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "airportcode", "{COLUMN1}": "destairport", "{COLUMN2}": "sourceairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count", "{SC0}": "desc"}, "( department name of ship ) , ( department id of students ) that belongs to ( ( degree programs ) , and ( ( departments ) satisfied that ( ( department id of students ) equal to ( department id of ship ) ) ) ) , grouped by ( department id of students ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "department_name", "{COLUMN1}": "department_id", "{TABLE0}": "degree programs", "{TABLE1}": "departments", "{AGG0}": "count", "{SC0}": "desc"}, "( semester name of people ) , ( semester id of people ) that belongs to ( ( semesters ) , and ( ( student enrolment ) satisfied that ( ( semester id of people ) equal to ( semester id of poker player ) ) ) ) , grouped by ( semester id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "semester_name", "{COLUMN1}": "semester_id", "{TABLE0}": "semesters", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{SC0}": "desc"}, "( degree summary name of people ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of people ) equal to ( degree program id of poker player ) ) ) ) , grouped by ( degree summary name of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "degree_summary_name", "{COLUMN1}": "degree_program_id", "{TABLE0}": "degree programs", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{SC0}": "desc"}, "( degree program id of people ) , ( degree summary name of people ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of people ) equal to ( degree program id of poker player ) ) ) ) , grouped by ( degree program id of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "degree_program_id", "{COLUMN1}": "degree_summary_name", "{TABLE0}": "degree programs", "{TABLE1}": "student enrolment", "{AGG0}": "count", "{SC0}": "desc"}, "( course name of people ) that belongs to ( ( courses ) , and ( ( student enrolment courses ) satisfied that ( ( course id of people ) equal to ( course id of poker player ) ) ) ) , grouped by ( course name of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "course_name", "{COLUMN1}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "student enrolment courses", "{AGG0}": "count", "{SC0}": "desc"}, "( transcript date of poker player ) , ( transcript id of people ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of people ) equal to ( transcript id of poker player ) ) ) ) , grouped by ( transcript id of people ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "transcript_date", "{COLUMN1}": "transcript_id", "{TABLE0}": "transcript contents", "{TABLE1}": "transcripts", "{AGG0}": "count", "{SC0}": "asc"}, "( area code of people ) that belongs to ( ( area code state ) , and ( ( votes ) satisfied that ( ( state of people ) equal to ( state of poker player ) ) ) ) , grouped by ( area code of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "area_code", "{COLUMN1}": "state", "{TABLE0}": "area code state", "{TABLE1}": "votes", "{AGG0}": "count", "{SC0}": "desc"}, "( continent of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , grouped by ( continent of people ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "continent", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{AGG0}": "count", "{SC0}": "desc"}, "( language ) that belongs to ( countrylanguage ) , grouped by ( language ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "language", "{TABLE0}": "countrylanguage", "{AGG0}": "count", "{SC0}": "desc"}, "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{AGG0}": "count", "{SC0}": "desc"}, "( the number of ( all items ) ) , ( student course id ) that belongs to ( transcript contents ) , grouped by ( student course id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "student_course_id", "{TABLE0}": "transcript contents", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( country ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "country", "{TABLE0}": "tv channel", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( contid of people ) , ( continent of people ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of people ) equal to ( continent of poker player ) ) ) ) , grouped by ( contid of people )": {"{COLUMN0}": "contid", "{COLUMN1}": "continent", "{TABLE0}": "continents", "{TABLE1}": "countries", "{AGG0}": "count"}, "( name of poker player ) , ( the number of ( all items ) ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of people ) equal to ( stadium id of poker player ) ) ) ) , grouped by ( stadium id of people )": {"{COLUMN0}": "name", "{COLUMN1}": "stadium_id", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{AGG0}": "count"}, "( hometown ) , ( the number of ( all items ) ) that belongs to ( teacher ) , grouped by ( hometown )": {"{COLUMN0}": "hometown", "{TABLE0}": "teacher", "{AGG0}": "count"}, "( nationality ) , ( the number of ( all items ) ) that belongs to ( people ) , grouped by ( nationality )": {"{COLUMN0}": "nationality", "{TABLE0}": "people", "{AGG0}": "count"}, "( citizenship ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( citizenship )": {"{COLUMN0}": "citizenship", "{TABLE0}": "singer", "{AGG0}": "count"}, "( citizenship ) , ( the maximum of ( net worth millions ) ) that belongs to ( singer ) , grouped by ( citizenship )": {"{COLUMN0}": "citizenship", "{COLUMN1}": "net_worth_millions", "{TABLE0}": "singer", "{AGG0}": "max"}, "( name of people ) , ( the sum of ( sales of poker player ) ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of people ) equal to ( singer id of poker player ) ) ) ) , grouped by ( name of people )": {"{COLUMN0}": "name", "{COLUMN1}": "sales", "{COLUMN2}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song", "{AGG0}": "sum"}, "( concert name of poker player ) , ( theme of poker player ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of people ) equal to ( concert id of poker player ) ) ) ) , grouped by ( concert id of poker player )": {"{COLUMN0}": "concert_name", "{COLUMN1}": "theme", "{COLUMN2}": "concert_id", "{TABLE0}": "singer in concert", "{TABLE1}": "concert", "{AGG0}": "count"}, "( name of poker player ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( singer ) satisfied that ( ( singer id of people ) equal to ( singer id of poker player ) ) ) ) , grouped by ( singer id of poker player )": {"{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{TABLE0}": "singer in concert", "{TABLE1}": "singer", "{AGG0}": "count"}, "( fullname of people ) , ( id of people ) , ( the number of ( all items ) ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of people ) equal to ( maker of poker player ) ) ) ) , grouped by ( id of people )": {"{COLUMN0}": "fullname", "{COLUMN1}": "id", "{COLUMN2}": "maker", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( fullname of poker player ) , ( id of poker player ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of people ) equal to ( id of poker player ) ) ) ) , grouped by ( id of poker player )": {"{COLUMN0}": "fullname", "{COLUMN1}": "id", "{COLUMN2}": "maker", "{TABLE0}": "model list", "{TABLE1}": "car makers", "{AGG0}": "count"}, "( the average of ( weight ) ) , ( year ) that belongs to ( cars data ) , grouped by ( year )": {"{COLUMN0}": "weight", "{COLUMN1}": "year", "{TABLE0}": "cars data", "{AGG0}": "avg"}, "( the number of ( all items ) ) , ( name of ship ) that belongs to ( ( hiring ) , and ( ( shop ) satisfied that ( ( shop id of students ) equal to ( shop id of ship ) ) ) ) , grouped by ( name of ship )": {"{COLUMN0}": "name", "{COLUMN1}": "shop_id", "{TABLE0}": "hiring", "{TABLE1}": "shop", "{AGG0}": "count"}, "( template id ) , ( the number of ( all items ) ) that belongs to ( documents ) , grouped by ( template id )": {"{COLUMN0}": "template_id", "{TABLE0}": "documents", "{AGG0}": "count"}, "( document id of people ) , ( document name of poker player ) , ( the number of ( all items ) ) that belongs to ( ( paragraphs ) , and ( ( documents ) satisfied that ( ( document id of people ) equal to ( document id of poker player ) ) ) ) , grouped by ( document id of people )": {"{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "paragraphs", "{TABLE1}": "documents", "{AGG0}": "count"}, "( the average of ( ranking ) ) , ( first name of people ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of people ) equal to ( player id of poker player ) ) ) ) , grouped by ( first name of people )": {"{COLUMN0}": "ranking", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{TABLE0}": "players", "{TABLE1}": "rankings", "{AGG0}": "avg"}, "( the sum of ( ranking points ) ) , ( first name of people ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of people ) equal to ( player id of poker player ) ) ) ) , grouped by ( first name of people )": {"{COLUMN0}": "ranking_points", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{TABLE0}": "players", "{TABLE1}": "rankings", "{AGG0}": "sum"}, "( name of poker player ) , ( the number of ( all items ) ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( student id of people )": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{AGG0}": "count"}, "( country ) , ( the number of ( all items ) ) that belongs to ( singer ) , grouped by ( country )": {"{COLUMN0}": "country", "{TABLE0}": "singer", "{AGG0}": "count"}, "( concert name of ship ) , ( theme of ship ) , ( the number of ( all items ) ) that belongs to ( ( singer in concert ) , and ( ( concert ) satisfied that ( ( concert id of students ) equal to ( concert id of ship ) ) ) ) , grouped by ( concert id of ship )": {"{COLUMN0}": "concert_name", "{COLUMN1}": "theme", "{COLUMN2}": "concert_id", "{TABLE0}": "singer in concert", "{TABLE1}": "concert", "{AGG0}": "count"}, "( the maximum of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )": {"{COLUMN0}": "weight", "{COLUMN1}": "pettype", "{TABLE0}": "pets", "{AGG0}": "max"}, "( the number of ( all items ) ) , ( stuid of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) ) , grouped by ( stuid of people )": {"{COLUMN0}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( stuid of students ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of students ) equal to ( stuid of ship ) ) ) ) , grouped by ( stuid of students )": {"{COLUMN0}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{AGG0}": "count"}, "( continent of people ) , ( the number of ( all items ) ) that belongs to ( ( continents ) , and ( ( countries ) satisfied that ( ( contid of people ) equal to ( continent of poker player ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of poker player ) equal to ( country of car makers ) ) ) ) , grouped by ( continent of people )": {"{COLUMN0}": "continent", "{COLUMN1}": "contid", "{COLUMN2}": "countryid", "{COLUMN3}": "country", "{TABLE0}": "continents", "{TABLE1}": "countries", "{TABLE2}": "car makers", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( fullname of ship ) that belongs to ( ( model list ) , and ( ( car makers ) satisfied that ( ( maker of students ) equal to ( id of ship ) ) ) ) , grouped by ( id of ship )": {"{COLUMN0}": "fullname", "{COLUMN1}": "maker", "{COLUMN2}": "id", "{TABLE0}": "model list", "{TABLE1}": "car makers", "{AGG0}": "count"}, "( the maximum of ( accelerate ) ) , ( cylinders ) that belongs to ( cars data ) , grouped by ( cylinders )": {"{COLUMN0}": "accelerate", "{COLUMN1}": "cylinders", "{TABLE0}": "cars data", "{AGG0}": "max"}, "( the number of ( all items ) ) , ( location ) that belongs to ( shop ) , grouped by ( location )": {"{COLUMN0}": "location", "{TABLE0}": "shop", "{AGG0}": "count"}, "( template type code ) , ( the number of ( all items ) ) that belongs to ( templates ) , grouped by ( template type code )": {"{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{AGG0}": "count"}, "( template type code of people ) , ( the number of ( all items ) ) that belongs to ( ( templates ) , and ( ( documents ) satisfied that ( ( template id of people ) equal to ( template id of poker player ) ) ) ) , grouped by ( template type code of people )": {"{COLUMN0}": "template_type_code", "{COLUMN1}": "template_id", "{TABLE0}": "templates", "{TABLE1}": "documents", "{AGG0}": "count"}, "( name of poker player ) , ( the number of ( all items ) ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of people ) equal to ( teacher id of poker player ) ) ) ) , grouped by ( name of poker player )": {"{COLUMN0}": "name", "{COLUMN1}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( country code ) that belongs to ( players ) , grouped by ( country code )": {"{COLUMN0}": "country_code", "{TABLE0}": "players", "{AGG0}": "count"}, "( the sum of ( tours ) ) , ( ranking date ) that belongs to ( rankings ) , grouped by ( ranking date )": {"{COLUMN0}": "tours", "{COLUMN1}": "ranking_date", "{TABLE0}": "rankings", "{AGG0}": "sum"}, "( the number of ( all items ) ) , ( year ) that belongs to ( matches ) , grouped by ( year )": {"{COLUMN0}": "year", "{TABLE0}": "matches", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( hand ) that belongs to ( players ) , grouped by ( hand )": {"{COLUMN0}": "hand", "{TABLE0}": "players", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( directed by ) that belongs to ( cartoon ) , grouped by ( directed by )": {"{COLUMN0}": "directed_by", "{TABLE0}": "cartoon", "{AGG0}": "count"}, "( language ) , ( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , grouped by ( countrycode )": {"{COLUMN0}": "language", "{COLUMN1}": "countrycode", "{COLUMN2}": "percentage", "{TABLE0}": "countrylanguage", "{AGG0}": "max"}, "( record company ) , ( the number of ( all items ) ) that belongs to ( orchestra ) , grouped by ( record company )": {"{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{AGG0}": "count"}, "( student id ) , ( the number of ( all items ) ) that belongs to ( friend ) , grouped by ( student id )": {"{COLUMN0}": "student_id", "{TABLE0}": "friend", "{AGG0}": "count"}, "( name of poker player ) , ( the number of ( all items ) ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( student id of people )": {"{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{AGG0}": "count"}, "( student id ) , ( the number of ( all items ) ) that belongs to ( likes ) , grouped by ( student id )": {"{COLUMN0}": "student_id", "{TABLE0}": "likes", "{AGG0}": "count"}, "( property type description of poker player ) that belongs to ( ( properties ) , and ( ( ref property types ) satisfied that ( ( property type code of people ) equal to ( property type code of poker player ) ) ) ) , grouped by ( property type code of people )": {"{COLUMN0}": "property_type_description", "{COLUMN1}": "property_type_code", "{TABLE0}": "properties", "{TABLE1}": "reference property types"}, "( the average of ( pet age ) ) , ( the maximum of ( pet age ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )": {"{COLUMN0}": "pet_age", "{COLUMN1}": "pettype", "{TABLE0}": "pets", "{AGG0}": "avg", "{AGG1}": "max"}, "( the average of ( weight ) ) , ( pettype ) that belongs to ( pets ) , grouped by ( pettype )": {"{COLUMN0}": "weight", "{COLUMN1}": "pettype", "{TABLE0}": "pets", "{AGG0}": "avg"}, "( the number of ( all items ) ) , ( city ) that belongs to ( employee ) , grouped by ( city )": {"{COLUMN0}": "city", "{TABLE0}": "employee", "{AGG0}": "count"}, "( language ) , ( the number of ( all items ) ) that belongs to ( tv channel ) , grouped by ( language )": {"{COLUMN0}": "language", "{TABLE0}": "tv channel", "{AGG0}": "count"}, "( grade ) , ( the number of ( all items ) ) that belongs to ( highschooler ) , grouped by ( grade )": {"{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{AGG0}": "count"}, "( id of students ) , ( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of ship ) ) ) ) , grouped by ( id of students ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "age", "{COLUMN3}": "visitor_id", "{TABLE0}": "customer", "{TABLE1}": "visit", "{OP0}": ">", "{AGG0}": "count"}, "( first name of people ) , ( middle name of people ) , ( last name of people ) , ( student id of people ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of people ) equal to ( student id of poker player ) ) ) ) , grouped by ( student id of people ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )": {"{VALUE5}": "2", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "student_id", "{TABLE0}": "students", "{TABLE1}": "student enrolment", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( language of poker player ) ) , ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , grouped by ( name of people ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "language", "{COLUMN1}": "name", "{COLUMN2}": "code", "{COLUMN3}": "countrycode", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "( professional id of people ) , ( role code of people ) , ( first name of people ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of people ) equal to ( professional id of poker player ) ) ) ) , grouped by ( professional id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE4}": "2", "{COLUMN0}": "professional_id", "{COLUMN1}": "role_code", "{COLUMN2}": "first_name", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": ">=", "{AGG0}": "count"}, "( professional id of people ) , ( cell number of people ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of people ) equal to ( professional id of poker player ) ) ) ) , grouped by ( professional id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE3}": "2", "{COLUMN0}": "professional_id", "{COLUMN1}": "cell_number", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": ">=", "{AGG0}": "count"}, "( fullname of people ) , ( id of people ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of people ) equal to ( maker of poker player ) ) ) ) , grouped by ( id of people ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )": {"{VALUE7}": "3", "{COLUMN0}": "fullname", "{COLUMN1}": "id", "{COLUMN2}": "maker", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{OP0}": ">", "{AGG0}": "count"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , grouped by ( airline of people ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )": {"{VALUE6}": "10", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": ">", "{AGG0}": "count"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , grouped by ( airline of people ) , that have ( ( the number of ( all items ) ) less than ( 200 ) )": {"{VALUE6}": "200", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "<", "{AGG0}": "count"}, "( template type code ) that belongs to ( templates ) , grouped by ( template type code ) , that have ( ( the number of ( all items ) ) less than ( 3 ) )": {"{VALUE0}": "3", "{COLUMN0}": "template_type_code", "{TABLE0}": "templates", "{OP0}": "<", "{AGG0}": "count"}, "( tourney name ) that belongs to ( matches ) , grouped by ( tourney name ) , that have ( ( the number of ( all items ) ) greater than ( 10 ) )": {"{VALUE0}": "10", "{COLUMN0}": "tourney_name", "{TABLE0}": "matches", "{OP0}": ">", "{AGG0}": "count"}, "( course name of people ) , ( course id of people ) that belongs to ( ( courses ) , and ( ( sections ) satisfied that ( ( course id of people ) equal to ( course id of poker player ) ) ) ) , grouped by ( course id of people ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )": {"{VALUE3}": "2", "{COLUMN0}": "course_name", "{COLUMN1}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "sections", "{OP0}": "<=", "{AGG0}": "count"}, "( contestant number of people ) , ( contestant name of people ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of people ) equal to ( contestant number of poker player ) ) ) ) , grouped by ( contestant number of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE3}": "2", "{COLUMN0}": "contestant_number", "{COLUMN1}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{OP0}": ">=", "{AGG0}": "count"}, "( name of people ) that belongs to ( ( conductor ) , and ( ( orchestra ) satisfied that ( ( conductor id of people ) equal to ( conductor id of poker player ) ) ) ) , grouped by ( conductor id of poker player ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "orchestra", "{COLUMN2}": "conductor_id", "{TABLE0}": "conductor", "{OP0}": ">", "{AGG0}": "count"}, "( name of poker player ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( student id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )": {"{VALUE6}": "3", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": ">=", "{AGG0}": "count"}, "( name of poker player ) that belongs to ( ( likes ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , grouped by ( student id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{TABLE0}": "likes", "{TABLE1}": "high schooler", "{OP0}": ">=", "{AGG0}": "count"}, "( name of people ) that belongs to ( ( singer ) , and ( ( song ) satisfied that ( ( singer id of people ) equal to ( singer id of poker player ) ) ) ) , grouped by ( name of people ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song", "{OP0}": ">", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of students ) equal to ( country of ship ) ) ) ) , grouped by ( countryid of students ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE1}": "2", "{COLUMN0}": "countryid", "{COLUMN1}": "country", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{OP0}": ">=", "{AGG0}": "count"}, "( hometown ) that belongs to ( teacher ) , grouped by ( hometown ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "hometown", "{TABLE0}": "teacher", "{OP0}": ">=", "{AGG0}": "count"}, "( name of poker player ) that belongs to ( ( course arrange ) , and ( ( teacher ) satisfied that ( ( teacher id of people ) equal to ( teacher id of poker player ) ) ) ) , grouped by ( name of poker player ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "name", "{COLUMN1}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher", "{OP0}": ">=", "{AGG0}": "count"}, "( country code ) that belongs to ( players ) , grouped by ( country code ) , that have ( ( the number of ( all items ) ) greater than ( 50 ) )": {"{VALUE0}": "50", "{COLUMN0}": "country_code", "{TABLE0}": "players", "{OP0}": ">", "{AGG0}": "count"}, "( transcript date of poker player ) , ( transcript id of people ) that belongs to ( ( transcript contents ) , and ( ( transcripts ) satisfied that ( ( transcript id of people ) equal to ( transcript id of poker player ) ) ) ) , grouped by ( transcript id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "transcript_date", "{COLUMN1}": "transcript_id", "{TABLE0}": "transcript contents", "{TABLE1}": "transcripts", "{OP0}": ">=", "{AGG0}": "count"}, "( id ) that belongs to ( tv channel ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "id", "{COLUMN1}": "country", "{TABLE0}": "tv channel", "{OP0}": ">", "{AGG0}": "count"}, "( nationality ) that belongs to ( people ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "nationality", "{TABLE0}": "people", "{OP0}": ">=", "{AGG0}": "count"}, "( year of founded ) that belongs to ( ( orchestra ) , and ( ( performance ) satisfied that ( ( orchestra id of people ) equal to ( orchestra id of poker player ) ) ) ) , grouped by ( orchestra id of poker player ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "year_of_founded", "{COLUMN1}": "orchestra", "{COLUMN2}": "orchestra_id", "{TABLE0}": "performance", "{OP0}": ">", "{AGG0}": "count"}, "( grade ) that belongs to ( highschooler ) , grouped by ( grade ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{OP0}": ">=", "{AGG0}": "count"}, "( fname of people ) , ( sex of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) ) , grouped by ( stuid of people ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "sex", "{COLUMN2}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{OP0}": ">", "{AGG0}": "count"}, "( countryname of people ) , ( countryid of people ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of people ) equal to ( country of poker player ) ) ) ) , grouped by ( countryid of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "countryname", "{COLUMN1}": "countryid", "{COLUMN2}": "country", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{OP0}": ">=", "{AGG0}": "count"}, "( template id ) that belongs to ( documents ) , grouped by ( template id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "template_id", "{TABLE0}": "documents", "{OP0}": ">", "{AGG0}": "count"}, "( first name of people ) , ( country code of people ) , ( birth date of people ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of people ) equal to ( winner id of poker player ) ) ) ) , ordered by ( ( winner rank points of poker player ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "country_code", "{COLUMN2}": "birth_date", "{COLUMN3}": "player_id", "{COLUMN4}": "winner_id", "{COLUMN5}": "winner_rank_points", "{TABLE0}": "players", "{TABLE1}": "matches", "{SC0}": "desc"}, "( name ) , ( capacity ) that belongs to ( stadium ) , ordered by ( ( average ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "capacity", "{COLUMN2}": "average", "{TABLE0}": "stadium", "{SC0}": "desc"}, "( manager name ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "manager_name", "{COLUMN1}": "district", "{COLUMN2}": "number_products", "{TABLE0}": "shop", "{SC0}": "desc"}, "( name of students ) that belongs to ( ( employee ) , and ( ( evaluation ) satisfied that ( ( employee id of students ) equal to ( employee id of ship ) ) ) ) , ordered by ( ( bonus of ship ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "employee_id", "{COLUMN2}": "bonus", "{TABLE0}": "employee", "{TABLE1}": "evaluation", "{SC0}": "desc"}, "( country code of people ) , ( first name of people ) that belongs to ( ( players ) , and ( ( rankings ) satisfied that ( ( player id of people ) equal to ( player id of poker player ) ) ) ) , ordered by ( ( tours of poker player ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "country_code", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{COLUMN3}": "tours", "{TABLE0}": "players", "{TABLE1}": "rankings", "{SC0}": "desc"}, "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date first registered ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "date_first_registered", "{TABLE0}": "students", "{SC0}": "asc"}, "( name of students ) , ( age of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of ship ) ) ) ) , ordered by ( ( num of ticket of ship ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "id", "{COLUMN3}": "visitor_id", "{COLUMN4}": "num_of_ticket", "{TABLE0}": "customer", "{TABLE1}": "visit", "{SC0}": "desc"}, "( winner name ) , ( loser name ) that belongs to ( matches ) , ordered by ( ( minutes ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "winner_name", "{COLUMN1}": "loser_name", "{COLUMN2}": "minutes", "{TABLE0}": "matches", "{SC0}": "desc"}, "( first name ) , ( middle name ) , ( last name ) that belongs to ( students ) , ordered by ( ( date left ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "middle_name", "{COLUMN2}": "last_name", "{COLUMN3}": "date_left", "{TABLE0}": "students", "{SC0}": "asc"}, "( episode ) , ( rating ) that belongs to ( tv series ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "episode", "{COLUMN1}": "rating", "{TABLE0}": "tv series", "{SC0}": "desc"}, "( production code ) , ( channel ) that belongs to ( cartoon ) , ordered by ( ( original air date ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "production_code", "{COLUMN1}": "channel", "{COLUMN2}": "original_air_date", "{TABLE0}": "cartoon", "{SC0}": "desc"}, "( name ) , ( population ) , ( headofstate ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "headofstate", "{COLUMN3}": "surfacearea", "{TABLE0}": "country", "{SC0}": "desc"}, "( name ) that belongs to ( country ) , ordered by ( ( population ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "country", "{SC0}": "desc"}, "( name ) that belongs to ( country ) , ordered by ( ( population ) in ascending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "country", "{SC0}": "asc"}, "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "net_worth_millions", "{TABLE0}": "singer", "{SC0}": "desc"}, "( model of people ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of poker player ) ) ) ) , ordered by ( ( horsepower of poker player ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "horsepower", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{SC0}": "asc"}, "( model of students ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of students ) equal to ( id of ship ) ) ) ) , ordered by ( ( mpg of ship ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "mpg", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{SC0}": "desc"}, "( horsepower of people ) that belongs to ( ( cars data ) ) , ordered by ( ( accelerate of people ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "horsepower", "{COLUMN1}": "accelerate", "{TABLE0}": "cars data", "{SC0}": "desc"}, "( hometown ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "hometown", "{COLUMN1}": "age", "{TABLE0}": "teacher", "{SC0}": "asc"}, "( museum id ) , ( name ) that belongs to ( museum ) , ordered by ( ( num of staff ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "museum_id", "{COLUMN1}": "name", "{COLUMN2}": "num_of_staff", "{TABLE0}": "museum", "{SC0}": "desc"}, "( money rank ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "money_rank", "{COLUMN1}": "earnings", "{TABLE0}": "poker player", "{SC0}": "desc"}, "( birth date of people ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) ) , ordered by ( ( earnings of poker player ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "birth_date", "{COLUMN1}": "people_id", "{COLUMN2}": "earnings", "{TABLE0}": "people", "{TABLE1}": "poker player", "{SC0}": "asc"}, "( money rank of poker player ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) ) , ordered by ( ( height of people ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "money_rank", "{COLUMN1}": "people_id", "{COLUMN2}": "height", "{TABLE0}": "people", "{TABLE1}": "poker player", "{SC0}": "desc"}, "( name ) , ( surfacearea ) that belongs to ( country ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 5 )": {"{VALUE0}": "5", "{COLUMN0}": "name", "{COLUMN1}": "surfacearea", "{TABLE0}": "country", "{SC0}": "desc"}, "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "year_of_work", "{TABLE0}": "conductor", "{SC0}": "desc"}, "( model of people ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of poker player ) ) ) ) , ordered by ( ( mpg of poker player ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "mpg", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{SC0}": "desc"}, "( transcript date ) , ( other details ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "transcript_date", "{COLUMN1}": "other_details", "{TABLE0}": "transcripts", "{SC0}": "asc"}, "( transcript date ) that belongs to ( transcripts ) , ordered by ( ( transcript date ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "transcript_date", "{TABLE0}": "transcripts", "{SC0}": "desc"}, "( cost of treatment ) that belongs to ( treatments ) , ordered by ( ( date of treatment ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "cost_of_treatment", "{COLUMN1}": "date_of_treatment", "{TABLE0}": "treatments", "{SC0}": "desc"}, "( name ) that belongs to ( teacher ) , that have ( ( ( age ) equal to ( 32 ) ) or ( ( age ) equal to ( 33 ) ) )": {"{VALUE0}": "32", "{VALUE1}": "33", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "teacher", "{OP0}": "=", "{OP1}": "="}, "( first name of students ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( permanent address id of students ) equal to ( address id of ship ) ) ) ) , that have ( ( ( country of ship ) equal to ( 'haiti' ) ) or ( ( cell mobile number of students ) equal to ( '09700166582' ) ) )": {"{VALUE0}": "haiti", "{VALUE1}": "09700166582", "{COLUMN0}": "first_name", "{COLUMN1}": "permanent_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "country", "{COLUMN4}": "cell_mobile_number", "{TABLE0}": "students", "{TABLE1}": "addresses", "{OP0}": "=", "{OP1}": "="}, "( title ) that belongs to ( cartoon ) , that have ( ( ( directed by ) equal to ( ben jones ) ) or ( ( directed by ) equal to ( brandon vietti ) ) )": {"{VALUE0}": "ben jones", "{VALUE1}": "brandon vietti", "{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{TABLE0}": "cartoon", "{OP0}": "=", "{OP1}": "="}, "( email address ) that belongs to ( professionals ) , that have ( ( ( state ) equal to ( 'hawaii' ) ) or ( ( state ) equal to ( 'wisconsin' ) ) )": {"{VALUE0}": "hawaii", "{VALUE1}": "wisconsin", "{COLUMN0}": "email_address", "{COLUMN1}": "state", "{TABLE0}": "professionals", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( singer ) , that have ( ( ( birth year ) equal to ( 1948 ) ) or ( ( birth year ) equal to ( 1949 ) ) )": {"{VALUE0}": "1948", "{VALUE1}": "1949", "{COLUMN0}": "name", "{COLUMN1}": "birth_year", "{TABLE0}": "singer", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( concert ) , that have ( ( ( year ) equal to ( 2014 ) ) or ( ( year ) equal to ( 2015 ) ) )": {"{VALUE0}": "2014", "{VALUE1}": "2015", "{COLUMN0}": "year", "{TABLE0}": "concert", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( distinct ( model of poker player ) ) that belongs to ( ( car names ) , and ( ( model list ) satisfied that ( ( model of people ) equal to ( model of poker player ) ) ) , and ( ( car makers ) satisfied that ( ( maker of poker player ) equal to ( id of car makers ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of student enrolment ) ) ) ) , that have ( ( ( fullname of car makers ) equal to ( 'general motors' ) ) or ( ( weight of student enrolment ) greater than ( 3500 ) ) )": {"{VALUE0}": "general motors", "{VALUE15}": "3500", "{COLUMN0}": "model", "{COLUMN1}": "maker", "{COLUMN2}": "id", "{COLUMN3}": "makeid", "{COLUMN4}": "fullname", "{COLUMN5}": "weight", "{TABLE0}": "car names", "{TABLE1}": "model list", "{TABLE2}": "car makers", "{TABLE3}": "cars data", "{OP0}": "=", "{OP1}": ">"}, "( the maximum of ( mpg ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) or ( ( year ) less than ( 1980 ) ) )": {"{VALUE0}": "8", "{VALUE1}": "1980", "{COLUMN0}": "mpg", "{COLUMN1}": "cylinders", "{COLUMN2}": "year", "{TABLE0}": "cars data", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "max"}, "( template id ) that belongs to ( templates ) , that have ( ( ( template type code ) equal to ( pp ) ) or ( ( template type code ) equal to ( ppt ) ) )": {"{VALUE0}": "pp", "{VALUE1}": "ppt", "{COLUMN0}": "template_id", "{COLUMN1}": "template_type_code", "{TABLE0}": "templates", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( matches ) , that have ( ( ( year ) equal to ( 2013 ) ) or ( ( year ) equal to ( 2016 ) ) )": {"{VALUE0}": "2013", "{VALUE1}": "2016", "{COLUMN0}": "year", "{TABLE0}": "matches", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( votes ) , that have ( ( ( state ) equal to ( 'ny' ) ) or ( ( state ) equal to ( 'ca' ) ) )": {"{VALUE0}": "ny", "{VALUE1}": "ca", "{COLUMN0}": "state", "{TABLE0}": "votes", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( distinct ( fname of people ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'cat' ) ) or ( ( pettype of car makers ) equal to ( 'dog' ) ) )": {"{VALUE0}": "cat", "{VALUE1}": "dog", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of people ) equal to ( airportcode of poker player ) ) ) ) , that have ( ( ( city of poker player ) equal to ( aberdeen ) ) or ( ( city of poker player ) equal to ( abilene ) ) )": {"{VALUE0}": "aberdeen", "{VALUE1}": "abilene", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( museum ) , that have ( ( ( open year ) greater than ( 2013 ) ) or ( ( open year ) less than ( 2008 ) ) )": {"{VALUE0}": "2013", "{VALUE1}": "2008", "{COLUMN0}": "open_year", "{TABLE0}": "museum", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "count"}, "( the sum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) or ( ( continent ) equal to ( europe ) ) )": {"{VALUE0}": "asia", "{VALUE1}": "europe", "{COLUMN0}": "surfacearea", "{COLUMN1}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "( distinct ( region of people ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( language of poker player ) equal to ( english ) ) or ( ( language of poker player ) equal to ( dutch ) ) )": {"{VALUE0}": "english", "{VALUE1}": "dutch", "{COLUMN0}": "region", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( orchestra ) , that have ( ( ( major record format ) equal to ( cd ) ) or ( ( major record format ) equal to ( dvd ) ) )": {"{VALUE0}": "cd", "{VALUE1}": "dvd", "{COLUMN0}": "orchestra", "{COLUMN1}": "major_record_format", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( highschooler ) , that have ( ( ( grade ) equal to ( 9 ) ) or ( ( grade ) equal to ( 10 ) ) )": {"{VALUE0}": "9", "{VALUE1}": "10", "{COLUMN0}": "grade", "{TABLE0}": "high schooler", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( name ) that belongs to ( battle ) , that have ( ( ( bulgarian commander ) equal to ( 'kaloyan' ) ) and ( ( latin commander ) equal to ( 'baldwin i' ) ) )": {"{VALUE0}": "kaloyan", "{VALUE1}": "baldwin i", "{COLUMN0}": "name", "{COLUMN1}": "bulgarian_commander", "{COLUMN2}": "latin_commander", "{TABLE0}": "battle", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of poker player ) equal to ( petid of car makers ) ) ) ) , that have ( ( ( sex of people ) equal to ( 'f' ) ) and ( ( pettype of car makers ) equal to ( 'dog' ) ) )": {"{VALUE0}": "f", "{VALUE1}": "dog", "{COLUMN0}": "stuid", "{COLUMN1}": "petid", "{COLUMN2}": "sex", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( europe ) ) and ( ( population ) equal to ( 80000 ) ) )": {"{VALUE0}": "europe", "{VALUE1}": "80000", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "="}, "( the minimum of ( weight ) ) that belongs to ( cars data ) , that have ( ( ( cylinders ) equal to ( 8 ) ) and ( ( year ) equal to ( 1974 ) ) )": {"{VALUE0}": "8", "{VALUE1}": "1974", "{COLUMN0}": "weight", "{COLUMN1}": "cylinders", "{COLUMN2}": "year", "{TABLE0}": "cars data", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "min"}, "( cell mobile number ) that belongs to ( students ) , that have ( ( ( first name ) equal to ( 'timmothy' ) ) and ( ( last name ) equal to ( 'ward' ) ) )": {"{VALUE0}": "timmothy", "{VALUE1}": "ward", "{COLUMN0}": "cell_mobile_number", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "students", "{OP0}": "=", "{OP1}": "="}, "( the sum of ( population ) ) , ( the average of ( surfacearea ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( north america ) ) and ( ( surfacearea ) greater than ( 3000 ) ) )": {"{VALUE0}": "north america", "{VALUE2}": "3000", "{COLUMN0}": "population", "{COLUMN1}": "surfacearea", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "sum", "{AGG1}": "avg"}, "( lname of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( ( pet age of car makers ) equal to ( 3 ) ) and ( ( pettype of car makers ) equal to ( 'cat' ) ) )": {"{VALUE0}": "cat", "{VALUE6}": "3", "{COLUMN0}": "lname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pet_age", "{COLUMN4}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "( distinct ( model of people ) ) that belongs to ( ( model list ) , and ( ( car names ) satisfied that ( ( model of people ) equal to ( model of poker player ) ) ) , and ( ( cars data ) satisfied that ( ( makeid of poker player ) equal to ( id of car makers ) ) ) , and ( ( car makers ) satisfied that ( ( maker of people ) equal to ( id of student enrolment ) ) ) ) , that have ( ( ( weight of car makers ) less than ( 3500 ) ) and ( ( fullname of student enrolment ) not equal to ( 'ford motor company' ) ) )": {"{VALUE0}": "ford motor company", "{VALUE13}": "3500", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "maker", "{COLUMN4}": "weight", "{COLUMN5}": "fullname", "{TABLE0}": "model list", "{TABLE1}": "car names", "{TABLE2}": "cars data", "{TABLE3}": "car makers", "{OP0}": "<", "{OP1}": "!="}, "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of people ) equal to ( airportcode of poker player ) ) ) , and ( ( airports ) satisfied that ( ( sourceairport of people ) equal to ( airportcode of car makers ) ) ) ) , that have ( ( ( city of poker player ) equal to ( ashley ) ) and ( ( city of car makers ) equal to ( aberdeen ) ) )": {"{VALUE0}": "ashley", "{VALUE1}": "aberdeen", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "sourceairport", "{COLUMN3}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of poker player ) equal to ( uid of people ) ) ) ) , that have ( ( ( airline of people ) equal to ( united airlines ) ) and ( ( destairport of poker player ) equal to ( asy ) ) )": {"{VALUE0}": "united airlines", "{VALUE1}": "asy", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "destairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( airline of poker player ) equal to ( uid of people ) ) ) ) , that have ( ( ( airline of people ) equal to ( united airlines ) ) and ( ( sourceairport of poker player ) equal to ( ahd ) ) )": {"{VALUE0}": "united airlines", "{VALUE1}": "ahd", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( flights ) , and ( ( airports ) satisfied that ( ( destairport of people ) equal to ( airportcode of poker player ) ) ) , and ( ( airlines ) satisfied that ( ( uid of car makers ) equal to ( airline of people ) ) ) ) , that have ( ( ( city of poker player ) equal to ( aberdeen ) ) and ( ( airline of car makers ) equal to ( united airlines ) ) )": {"{VALUE0}": "aberdeen", "{VALUE1}": "united airlines", "{COLUMN0}": "destairport", "{COLUMN1}": "airportcode", "{COLUMN2}": "uid", "{COLUMN3}": "airline", "{COLUMN4}": "city", "{TABLE0}": "flights", "{TABLE1}": "airports", "{TABLE2}": "airlines", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( language of poker player ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( headofstate of people ) equal to ( beatrix ) ) and ( ( isofficial of poker player ) equal to ( t ) ) )": {"{VALUE0}": "beatrix", "{VALUE1}": "t", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "headofstate", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "="}, "( the number of ( distinct ( language of poker player ) ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( indepyear ) less than ( 1930 ) ) and ( ( isofficial of poker player ) equal to ( t ) ) )": {"{VALUE0}": "t", "{VALUE6}": "1930", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "indepyear", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "<", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( distinct ( winner name ) ) ) that belongs to ( matches ) , that have ( ( ( tourney name ) equal to ( 'wta championships' ) ) and ( ( winner hand ) equal to ( 'l' ) ) )": {"{VALUE0}": "wta championships", "{VALUE1}": "l", "{COLUMN0}": "winner_name", "{COLUMN1}": "tourney_name", "{COLUMN2}": "winner_hand", "{TABLE0}": "matches", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( governmentform ) equal to ( republic ) ) )": {"{VALUE0}": "africa", "{VALUE1}": "republic", "{COLUMN0}": "lifeexpectancy", "{COLUMN1}": "continent", "{COLUMN2}": "governmentform", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "( the number of ( all items ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( name of people ) equal to ( afghanistan ) ) and ( ( isofficial ) equal to ( t ) ) )": {"{VALUE0}": "afghanistan", "{VALUE1}": "t", "{COLUMN0}": "code", "{COLUMN1}": "countrycode", "{COLUMN2}": "name", "{COLUMN3}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( name ) that belongs to ( stadium ) , that have ( ( stadium_id ) not in ( ( stadium id ) that belongs to ( concert ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "stadium_id", "{TABLE0}": "stadium", "{TABLE1}": "concert"}, "( name ) that belongs to ( employee ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( evaluation ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "employee_id", "{TABLE0}": "employee", "{TABLE1}": "evaluation"}, "( name ) that belongs to ( shop ) , that have ( ( shop_id ) not in ( ( shop id ) that belongs to ( hiring ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "shop_id", "{TABLE0}": "shop", "{TABLE1}": "hiring"}, "( name ) that belongs to ( museum ) , that have ( ( museum_id ) not in ( ( museum id ) that belongs to ( visit ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "museum_id", "{TABLE0}": "museum", "{TABLE1}": "visit"}, "( name ) that belongs to ( singer ) , that have ( ( singer_id ) not in ( ( singer id ) that belongs to ( song ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "singer_id", "{TABLE0}": "singer", "{TABLE1}": "song"}, "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( ( stuid ) that belongs to ( has pet ) ) ) )": {"{COLUMN0}": "age", "{COLUMN1}": "stuid", "{TABLE0}": "student", "{TABLE1}": "has pet", "{AGG0}": "avg"}, "( airportname ) that belongs to ( airports ) , that have ( ( airportcode ) not in ( ( sourceairport ) that belongs to ( flights ) and ( destairport ) that belongs to ( flights ) ) )": {"{COLUMN0}": "airportname", "{COLUMN1}": "airportcode", "{COLUMN2}": "sourceairport", "{COLUMN3}": "destairport", "{TABLE0}": "airports", "{TABLE1}": "flights"}, "( name ) that belongs to ( teacher ) , that have ( ( teacher_id ) not in ( ( teacher id ) that belongs to ( course arrange ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "teacher_id", "{TABLE0}": "teacher", "{TABLE1}": "course arrange"}, "( semester name ) that belongs to ( semesters ) , that have ( ( semester_id ) not in ( ( ( semester id ) that belongs to ( student enrolment ) ) ) )": {"{COLUMN0}": "semester_name", "{COLUMN1}": "semester_id", "{TABLE0}": "semesters", "{TABLE1}": "student enrolment"}, "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( poker player ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "people", "{TABLE1}": "poker player"}, "( orchestra ) that belongs to ( orchestra ) , that have ( ( orchestra_id ) not in ( ( orchestra id ) that belongs to ( performance ) ) )": {"{COLUMN0}": "orchestra", "{COLUMN1}": "orchestra_id", "{TABLE0}": "performance"}, "( the minimum of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) not in ( ( student id of people ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) ) )": {"{COLUMN0}": "grade", "{COLUMN1}": "id", "{COLUMN2}": "student_id", "{TABLE0}": "high schooler", "{TABLE1}": "friend", "{AGG0}": "min"}, "( the number of ( all items ) ) that belongs to ( owners ) , that have ( ( owner_id ) not in ( ( owner id ) that belongs to ( dogs ) ) )": {"{COLUMN0}": "owner_id", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( contestants ) , that have ( ( contestant_number ) not in ( ( contestant number ) that belongs to ( votes ) ) )": {"{COLUMN0}": "contestant_number", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( dog id ) that belongs to ( treatments ) ) )": {"{COLUMN0}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( ( dog id ) that belongs to ( treatments ) ) ) )": {"{COLUMN0}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( professionals ) , that have ( ( professional_id ) not in ( ( professional id ) that belongs to ( treatments ) ) )": {"{COLUMN0}": "professional_id", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{AGG0}": "count"}, "( name of people ) , ( date of people ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of people ) equal to ( lost in battle of poker player ) ) ) ) , that have ( ( name of poker player ) equal to ( 'lettice' ) ), and intersect with ( ( name of people ) , ( date of people ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of people ) equal to ( lost in battle of poker player ) ) ) ) , that have ( ( name of poker player ) equal to ( 'hms atalanta' ) ))": {"{VALUE0}": "lettice", "{VALUE1}": "hms atalanta", "{COLUMN0}": "name", "{COLUMN1}": "date", "{COLUMN2}": "id", "{COLUMN3}": "lost_in_battle", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "=", "{OP1}": "="}, "( series name of people ) , ( country of people ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( directed by of poker player ) equal to ( 'michael chang' ) ), and intersect with ( ( series name of people ) , ( country of people ) that belongs to ( ( tv channel ) , and ( ( cartoon ) satisfied that ( ( id of people ) equal to ( channel of poker player ) ) ) ) , that have ( ( directed by of poker player ) equal to ( 'ben jones' ) ))": {"{VALUE0}": "michael chang", "{VALUE1}": "ben jones", "{COLUMN0}": "series_name", "{COLUMN1}": "country", "{COLUMN2}": "id", "{COLUMN3}": "channel", "{COLUMN4}": "directed_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "=", "{OP1}": "="}, "( name of poker player ) , ( location of poker player ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of people ) equal to ( stadium id of poker player ) ) ) ) , that have ( ( year of people ) equal to ( 2014 ) ), and intersect with ( ( name of poker player ) , ( location of poker player ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of people ) equal to ( stadium id of poker player ) ) ) ) , that have ( ( year of people ) equal to ( 2015 ) ))": {"{VALUE7}": "2014", "{VALUE15}": "2015", "{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "stadium_id", "{COLUMN3}": "year", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": "=", "{OP1}": "="}, "( name of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of ship ) ) ) , and ( ( museum ) satisfied that ( ( museum id of model list ) equal to ( museum id of ship ) ) ) ) , that have ( ( open year of model list ) less than ( 2009 ) ), and intersect with ( ( name of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of ship ) ) ) , and ( ( museum ) satisfied that ( ( museum id of model list ) equal to ( museum id of ship ) ) ) ) , that have ( ( open year of model list ) greater than ( 2011 ) ))": {"{VALUE9}": "2009", "{VALUE19}": "2011", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "visitor_id", "{COLUMN3}": "museum_id", "{COLUMN4}": "open_year", "{TABLE0}": "customer", "{TABLE1}": "visit", "{TABLE2}": "museum", "{OP0}": "<", "{OP1}": ">"}, "( country ) that belongs to ( singer ) , that have ( ( age ) greater than ( 40 ) ), and intersect with ( ( country ) that belongs to ( singer ) , that have ( ( age ) less than ( 30 ) ))": {"{VALUE0}": "40", "{VALUE1}": "30", "{COLUMN0}": "country", "{COLUMN1}": "age", "{TABLE0}": "singer", "{OP0}": ">", "{OP1}": "<"}, "( country code of people ) , ( first name of people ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of people ) equal to ( winner id of poker player ) ) ) ) , that have ( ( tourney name of poker player ) equal to ( 'wta championships' ) ), and intersect with ( ( country code of people ) , ( first name of people ) that belongs to ( ( players ) , and ( ( matches ) satisfied that ( ( player id of people ) equal to ( winner id of poker player ) ) ) ) , that have ( ( tourney name of poker player ) equal to ( 'australian open' ) ))": {"{VALUE0}": "wta championships", "{VALUE1}": "australian open", "{COLUMN0}": "country_code", "{COLUMN1}": "first_name", "{COLUMN2}": "player_id", "{COLUMN3}": "winner_id", "{COLUMN4}": "tourney_name", "{TABLE0}": "players", "{TABLE1}": "matches", "{OP0}": "=", "{OP1}": "="}, "( district ) that belongs to ( shop ) , that have ( ( number products ) less than ( 3000 ) ), and intersect with ( ( district ) that belongs to ( shop ) , that have ( ( number products ) greater than ( 10000 ) ))": {"{VALUE0}": "3000", "{VALUE1}": "10000", "{COLUMN0}": "district", "{COLUMN1}": "number_products", "{TABLE0}": "shop", "{OP0}": "<", "{OP1}": ">"}, "( area code of car makers ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of people ) equal to ( contestant number of poker player ) ) ) , and ( ( area code state ) satisfied that ( ( state of poker player ) equal to ( state of car makers ) ) ) ) , that have ( ( contestant name of people ) equal to ( 'tabatha gehling' ) ), and intersect with ( ( area code of car makers ) that belongs to ( ( contestants ) , and ( ( votes ) satisfied that ( ( contestant number of people ) equal to ( contestant number of poker player ) ) ) , and ( ( area code state ) satisfied that ( ( state of poker player ) equal to ( state of car makers ) ) ) ) , that have ( ( contestant name of people ) equal to ( 'kelly clauss' ) ))": {"{VALUE0}": "tabatha gehling", "{VALUE1}": "kelly clauss", "{COLUMN0}": "area_code", "{COLUMN1}": "contestant_number", "{COLUMN2}": "state", "{COLUMN3}": "contestant_name", "{TABLE0}": "contestants", "{TABLE1}": "votes", "{TABLE2}": "area code state", "{OP0}": "=", "{OP1}": "="}, "( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) less than ( 1945 ) ), and intersect with ( ( citizenship ) that belongs to ( singer ) , that have ( ( birth year ) greater than ( 1955 ) ))": {"{VALUE0}": "1945", "{VALUE1}": "1955", "{COLUMN0}": "citizenship", "{COLUMN1}": "birth_year", "{TABLE0}": "singer", "{OP0}": "<", "{OP1}": ">"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , that have ( ( sourceairport of poker player ) equal to ( apg ) ), and intersect with ( ( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , that have ( ( sourceairport of poker player ) equal to ( cvo ) ))": {"{VALUE0}": "apg", "{VALUE1}": "cvo", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "="}, "( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'brazil' ) ), and intersect with ( ( document id ) that belongs to ( paragraphs ) , that have ( ( paragraph text ) equal to ( 'ireland' ) ))": {"{VALUE0}": "brazil", "{VALUE1}": "ireland", "{COLUMN0}": "document_id", "{COLUMN1}": "paragraph_text", "{TABLE0}": "paragraphs", "{OP0}": "=", "{OP1}": "="}, "( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) less than ( 2003 ) ), and intersect with ( ( record company ) that belongs to ( orchestra ) , that have ( ( year of founded ) greater than ( 2003 ) ))": {"{VALUE0}": "2003", "{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{COLUMN2}": "year_of_founded", "{OP0}": "<", "{OP1}": ">"}, "( distinct ( semester id of poker player ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of people ) equal to ( degree program id of poker player ) ) ) ) , that have ( ( degree summary name ) equal to ( 'master' ) ), and intersect with ( ( distinct ( semester id of poker player ) ) that belongs to ( ( degree programs ) , and ( ( student enrolment ) satisfied that ( ( degree program id of people ) equal to ( degree program id of poker player ) ) ) ) , that have ( ( degree summary name ) equal to ( 'bachelor' ) ))": {"{VALUE0}": "master", "{VALUE1}": "bachelor", "{COLUMN0}": "semester_id", "{COLUMN1}": "degree_program_id", "{COLUMN2}": "degree_summary_name", "{TABLE0}": "degree programs", "{TABLE1}": "student enrolment", "{OP0}": "=", "{OP1}": "="}, "( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( english ) ), and intersect with ( ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( french ) ))": {"{VALUE0}": "english", "{VALUE1}": "french", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "="}, "( fname of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ), and intersect with ( ( fname of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'dog' ) ))": {"{VALUE0}": "cat", "{VALUE1}": "dog", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "petid", "{COLUMN3}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2013 ) ), and intersect with ( ( winner name ) that belongs to ( matches ) , that have ( ( year ) equal to ( 2016 ) ))": {"{VALUE0}": "2013", "{VALUE1}": "2016", "{COLUMN0}": "winner_name", "{COLUMN1}": "year", "{TABLE0}": "matches", "{OP0}": "=", "{OP1}": "="}, "( name ) , ( location ) , ( district ) that belongs to ( shop ) , ordered by ( ( number products ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "district", "{COLUMN3}": "number_products", "{TABLE0}": "shop", "{SC0}": "desc"}, "( name ) , ( country ) , ( age ) that belongs to ( singer ) , ordered by ( ( age ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "country", "{COLUMN2}": "age", "{TABLE0}": "singer", "{SC0}": "desc"}, "( name ) , ( birth date ) that belongs to ( people ) , ordered by ( ( name ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "birth_date", "{TABLE0}": "people", "{SC0}": "asc"}, "( name ) that belongs to ( teacher ) , ordered by ( ( age ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "teacher", "{SC0}": "asc"}, "( name ) , ( tonnage ) that belongs to ( ship ) , ordered by ( ( name ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "tonnage", "{TABLE0}": "ship", "{SC0}": "desc"}, "( name ) that belongs to ( conductor ) , ordered by ( ( age ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "conductor", "{SC0}": "asc"}, "( name ) that belongs to ( singer ) , ordered by ( ( net worth millions ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "net_worth_millions", "{TABLE0}": "singer", "{SC0}": "asc"}, "( other student details ) that belongs to ( students ) , ordered by ( ( other student details ) in descending order )": {"{COLUMN0}": "other_student_details", "{TABLE0}": "students", "{SC0}": "desc"}, "( name of people ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) ) , ordered by ( ( earnings of poker player ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "earnings", "{TABLE0}": "people", "{TABLE1}": "poker player", "{SC0}": "desc"}, "( contestant number ) , ( contestant name ) that belongs to ( contestants ) , ordered by ( ( contestant name ) in descending order )": {"{COLUMN0}": "contestant_number", "{COLUMN1}": "contestant_name", "{TABLE0}": "contestants", "{SC0}": "desc"}, "( record company ) that belongs to ( orchestra ) , ordered by ( ( year of founded ) in descending order )": {"{COLUMN0}": "record_company", "{COLUMN1}": "orchestra", "{COLUMN2}": "year_of_founded", "{SC0}": "desc"}, "( name ) that belongs to ( conductor ) , ordered by ( ( year of work ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "year_of_work", "{TABLE0}": "conductor", "{SC0}": "desc"}, "( section name ) that belongs to ( sections ) , ordered by ( ( section name ) in descending order )": {"{COLUMN0}": "section_name", "{TABLE0}": "sections", "{SC0}": "desc"}, "( earnings ) that belongs to ( poker player ) , ordered by ( ( earnings ) in descending order )": {"{COLUMN0}": "earnings", "{TABLE0}": "poker player", "{SC0}": "desc"}, "( horsepower of poker player ) , ( make of people ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of poker player ) ) ) ) , that have ( ( cylinders of poker player ) equal to ( 3 ) ) , ordered by ( ( horsepower of poker player ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{VALUE7}": "3", "{COLUMN0}": "horsepower", "{COLUMN1}": "make", "{COLUMN2}": "makeid", "{COLUMN3}": "id", "{COLUMN4}": "cylinders", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "=", "{SC0}": "desc"}, "( cylinders of people ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of people ) equal to ( makeid of poker player ) ) ) ) , that have ( ( model of poker player ) equal to ( 'volvo' ) ) , ordered by ( ( accelerate of people ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "volvo", "{VALUE1}": "1", "{COLUMN0}": "cylinders", "{COLUMN1}": "id", "{COLUMN2}": "makeid", "{COLUMN3}": "model", "{COLUMN4}": "accelerate", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": "=", "{SC0}": "asc"}, "( model of people ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of poker player ) ) ) ) , that have ( ( cylinders of poker player ) equal to ( 4 ) ) , ordered by ( ( horsepower of poker player ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{VALUE6}": "4", "{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "cylinders", "{COLUMN4}": "horsepower", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "=", "{SC0}": "desc"}, "( winner name ) that belongs to ( matches ) , that have ( ( tourney name ) equal to ( 'australian open' ) ) , ordered by ( ( winner rank points ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "australian open", "{VALUE2}": "1", "{COLUMN0}": "winner_name", "{COLUMN1}": "tourney_name", "{COLUMN2}": "winner_rank_points", "{TABLE0}": "matches", "{OP0}": "=", "{SC0}": "desc"}, "( name of people ) , ( population of people ) that belongs to ( ( city ) , and ( ( countrylanguage ) satisfied that ( ( countrycode of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( english ) ) , ordered by ( ( population of people ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "english", "{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "city", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{SC0}": "desc"}, "( name ) , ( population ) , ( lifeexpectancy ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( surfacearea ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "asia", "{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "lifeexpectancy", "{COLUMN3}": "continent", "{COLUMN4}": "surfacearea", "{TABLE0}": "country", "{OP0}": "=", "{SC0}": "desc"}, "( language of poker player ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( name of people ) equal to ( aruba ) ) , ordered by ( ( percentage ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "aruba", "{VALUE2}": "1", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "name", "{COLUMN4}": "percentage", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{SC0}": "desc"}, "( name ) that belongs to ( shop ) , that have ( ( number products ) greater than ( the average of ( number products ) ) that belongs to ( shop ) )": {"{COLUMN0}": "name", "{COLUMN1}": "number_products", "{TABLE0}": "shop", "{OP0}": ">", "{AGG0}": "avg"}, "( distinct ( first name of people ) ) , ( last name of people ) that belongs to ( ( professionals ) join ( ( treatments ) ) ) , that have ( ( cost of treatment ) less than ( the average of ( cost of treatment ) ) that belongs to ( treatments ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "cost_of_treatment", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": "<", "{AGG0}": "avg"}, "( song name ) that belongs to ( singer ) , that have ( ( age ) greater than ( the average of ( age ) ) that belongs to ( singer ) )": {"{COLUMN0}": "song_name", "{COLUMN1}": "age", "{TABLE0}": "singer", "{OP0}": ">", "{AGG0}": "avg"}, "( model of people ) that belongs to ( ( car names ) , and ( ( cars data ) satisfied that ( ( makeid of people ) equal to ( id of poker player ) ) ) ) , that have ( ( weight of poker player ) less than ( the average of ( weight ) ) that belongs to ( cars data ) )": {"{COLUMN0}": "model", "{COLUMN1}": "makeid", "{COLUMN2}": "id", "{COLUMN3}": "weight", "{TABLE0}": "car names", "{TABLE1}": "cars data", "{OP0}": "<", "{AGG0}": "avg"}, "( make of poker player ) , ( year of people ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of people ) equal to ( makeid of poker player ) ) ) ) , that have ( ( year of people ) equal to ( the minimum of ( year ) ) that belongs to ( cars data ) )": {"{COLUMN0}": "make", "{COLUMN1}": "year", "{COLUMN2}": "id", "{COLUMN3}": "makeid", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": "=", "{AGG0}": "min"}, "( last name of people ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) ) , that have ( ( age of poker player ) equal to ( the maximum of ( age ) ) that belongs to ( dogs ) )": {"{COLUMN0}": "last_name", "{COLUMN1}": "owner_id", "{COLUMN2}": "age", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{OP0}": "=", "{AGG0}": "max"}, "( the number of ( all items ) ) that belongs to ( dogs ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( dogs ) )": {"{COLUMN0}": "age", "{TABLE0}": "dogs", "{OP0}": "<", "{AGG0}": "count", "{AGG1}": "avg"}, "( name of car makers ) , ( course of poker player ) that belongs to ( ( course arrange ) , and ( ( course ) satisfied that ( ( course id of people ) equal to ( course id of poker player ) ) ) , and ( ( teacher ) satisfied that ( ( teacher id of people ) equal to ( teacher id of car makers ) ) ) ) , ordered by ( ( name of car makers ) )": {"{COLUMN0}": "name", "{COLUMN1}": "course", "{COLUMN2}": "course_id", "{COLUMN3}": "teacher_id", "{TABLE0}": "course arrange", "{TABLE1}": "teacher"}, "( first name ) , ( last name ) that belongs to ( players ) , ordered by ( ( birth date ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "birth_date", "{TABLE0}": "players"}, "( name ) that belongs to ( employee ) , ordered by ( ( age ) )": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "employee"}, "( title ) that belongs to ( cartoon ) , ordered by ( ( title ) )": {"{COLUMN0}": "title", "{TABLE0}": "cartoon"}, "( title ) , ( directed by ) that belongs to ( cartoon ) , ordered by ( ( original air date ) )": {"{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{COLUMN2}": "original_air_date", "{TABLE0}": "cartoon"}, "( name of people ) that belongs to ( ( people ) , and ( ( poker player ) satisfied that ( ( people id of people ) equal to ( people id of poker player ) ) ) ) , ordered by ( ( final table made of poker player ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "final_table_made", "{TABLE0}": "people", "{TABLE1}": "poker player"}, "( episode ) that belongs to ( tv series ) , ordered by ( ( rating ) )": {"{COLUMN0}": "episode", "{COLUMN1}": "rating", "{TABLE0}": "tv series"}, "( name ) , ( surfacearea ) , ( indepyear ) that belongs to ( country ) , ordered by ( ( population ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "surfacearea", "{COLUMN2}": "indepyear", "{COLUMN3}": "population", "{TABLE0}": "country"}, "( song name ) , ( song release year ) that belongs to ( singer ) , ordered by ( ( age ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "song_name", "{COLUMN1}": "song_release_year", "{COLUMN2}": "age", "{TABLE0}": "singer"}, "( pettype ) , ( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "pettype", "{COLUMN1}": "weight", "{COLUMN2}": "pet_age", "{TABLE0}": "pets"}, "( first name ) , ( country code ) that belongs to ( players ) , ordered by ( ( birth date ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "country_code", "{COLUMN2}": "birth_date", "{TABLE0}": "players"}, "( distinct ( winner name ) ) , ( winner rank ) that belongs to ( matches ) , ordered by ( ( winner age ) ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "winner_name", "{COLUMN1}": "winner_rank", "{COLUMN2}": "winner_age", "{TABLE0}": "matches"}, "( weight ) that belongs to ( pets ) , ordered by ( ( pet age ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "weight", "{COLUMN1}": "pet_age", "{TABLE0}": "pets"}, "( name of poker player ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) , that have ( ( grade of poker player ) greater than ( 5 ) ) , grouped by ( student id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{VALUE6}": "5", "{COLUMN0}": "name", "{COLUMN1}": "student_id", "{COLUMN2}": "id", "{COLUMN3}": "grade", "{TABLE0}": "friend", "{TABLE1}": "high schooler", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "( city ) that belongs to ( employee ) , that have ( ( age ) less than ( 30 ) ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "30", "{VALUE1}": "1", "{COLUMN0}": "city", "{COLUMN1}": "age", "{TABLE0}": "employee", "{OP0}": "<", "{OP1}": ">", "{AGG0}": "count"}, "( countryname of people ) that belongs to ( ( countries ) , and ( ( continents ) satisfied that ( ( continent of people ) equal to ( contid of poker player ) ) ) , and ( ( car makers ) satisfied that ( ( countryid of people ) equal to ( country of car makers ) ) ) ) , that have ( ( continent of poker player ) equal to ( 'europe' ) ) , grouped by ( countryname of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )": {"{VALUE0}": "europe", "{VALUE6}": "3", "{COLUMN0}": "countryname", "{COLUMN1}": "continent", "{COLUMN2}": "contid", "{COLUMN3}": "countryid", "{COLUMN4}": "country", "{TABLE0}": "countries", "{TABLE1}": "continents", "{TABLE2}": "car makers", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "( language of poker player ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( governmentform of people ) equal to ( republic ) ) , grouped by ( language of poker player ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )": {"{VALUE0}": "republic", "{VALUE2}": "1", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "governmentform", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( package option ) that belongs to ( tv channel ) , that have ( ( id ) not in ( ( channel ) that belongs to ( cartoon ) , that have ( ( directed by ) equal to ( 'ben jones' ) ) ) )": {"{VALUE0}": "ben jones", "{COLUMN0}": "package_option", "{COLUMN1}": "id", "{COLUMN2}": "channel", "{COLUMN3}": "directed_by", "{TABLE0}": "tv channel", "{TABLE1}": "cartoon", "{OP0}": "="}, "( major ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) )": {"{VALUE0}": "cat", "{COLUMN0}": "major", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "petid", "{COLUMN4}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( visitor ) , that have ( ( id ) not in ( ( visitor id of ship ) that belongs to ( ( museum ) , and ( ( visit ) satisfied that ( ( museum id of students ) equal to ( museum id of ship ) ) ) ) , that have ( ( open year of students ) greater than ( 2010 ) ) ) )": {"{VALUE6}": "2010", "{COLUMN0}": "id", "{COLUMN1}": "visitor_id", "{COLUMN2}": "museum_id", "{COLUMN3}": "open_year", "{TABLE0}": "customer", "{TABLE1}": "museum", "{TABLE2}": "visit", "{OP0}": ">", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( battle ) , that have ( ( id ) not in ( ( lost in battle ) that belongs to ( ship ) , that have ( ( tonnage ) equal to ( '225' ) ) ) )": {"{VALUE0}": "225", "{COLUMN0}": "id", "{COLUMN1}": "lost_in_battle", "{COLUMN2}": "tonnage", "{TABLE0}": "battle", "{TABLE1}": "ship", "{OP0}": "=", "{AGG0}": "count"}, "( the sum of ( population ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( english ) ) ) )": {"{VALUE0}": "english", "{COLUMN0}": "population", "{COLUMN1}": "name", "{COLUMN2}": "code", "{COLUMN3}": "countrycode", "{COLUMN4}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "sum"}, "( location ) , ( name ) that belongs to ( stadium ) , that have ( ( capacity ) between ( 5000 ) and ( 10000 ) )": {"{VALUE0}": "5000", "{VALUE1}": "10000", "{COLUMN0}": "location", "{COLUMN1}": "name", "{COLUMN2}": "capacity", "{TABLE0}": "stadium"}, "( distinct ( year ) ) that belongs to ( cars data ) , that have ( ( weight ) between ( 3000 ) and ( 4000 ) )": {"{VALUE0}": "3000", "{VALUE1}": "4000", "{COLUMN0}": "year", "{COLUMN1}": "weight", "{TABLE0}": "cars data"}, "( name ) that belongs to ( city ) , that have ( ( population ) between ( 160000 ) and ( 900000 ) )": {"{VALUE0}": "160000", "{VALUE1}": "900000", "{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "city"}, "( visitor id of ship ) , ( name of students ) , ( level of membership of students ) that belongs to ( ( visitor ) , and ( ( visit ) satisfied that ( ( id of students ) equal to ( visitor id of ship ) ) ) ) , grouped by ( visitor id of ship ) , ordered by ( ( the sum of ( total spent of ship ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "visitor_id", "{COLUMN1}": "name", "{COLUMN2}": "level_of_membership", "{COLUMN3}": "id", "{COLUMN4}": "total_spent", "{TABLE0}": "customer", "{TABLE1}": "visit", "{AGG0}": "sum", "{SC0}": "desc"}, "( owner id of people ) , ( zip code of people ) that belongs to ( ( owners ) , and ( ( dogs ) satisfied that ( ( owner id of people ) equal to ( owner id of poker player ) ) ) , and ( ( treatments ) satisfied that ( ( dog id of poker player ) equal to ( dog id of car makers ) ) ) ) , grouped by ( owner id of people ) , ordered by ( ( the sum of ( cost of treatment of car makers ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "owner_id", "{COLUMN1}": "zip_code", "{COLUMN2}": "dog_id", "{COLUMN3}": "cost_of_treatment", "{TABLE0}": "owners", "{TABLE1}": "dogs", "{TABLE2}": "treatments", "{AGG0}": "sum", "{SC0}": "desc"}, "( treatment type description of people ) that belongs to ( ( treatment types ) , and ( ( treatments ) satisfied that ( ( treatment type code of people ) equal to ( treatment type code of poker player ) ) ) ) , grouped by ( treatment type code of people ) , ordered by ( ( the sum of ( cost of treatment ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "treatment_type_description", "{COLUMN1}": "treatment_type_code", "{COLUMN2}": "cost_of_treatment", "{TABLE0}": "treatment types", "{TABLE1}": "treatments", "{AGG0}": "sum", "{SC0}": "asc"}, "( id of people ) , ( name of people ) that belongs to ( ( battle ) , and ( ( ship ) satisfied that ( ( id of people ) equal to ( lost in battle of poker player ) ) ) , and ( ( death ) satisfied that ( ( id of poker player ) equal to ( caused by ship id of car makers ) ) ) ) , grouped by ( id of people ) , that have ( ( the sum of ( killed of car makers ) ) greater than ( 10 ) )": {"{VALUE11}": "10", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "lost_in_battle", "{COLUMN3}": "caused_by_ship_id", "{COLUMN4}": "killed", "{TABLE0}": "battle", "{TABLE1}": "ship", "{TABLE2}": "death", "{OP0}": ">", "{AGG0}": "sum"}, "( the sum of ( population ) ) , ( the average of ( lifeexpectancy ) ) , ( continent ) that belongs to ( country ) , grouped by ( continent ) , that have ( ( the average of ( lifeexpectancy ) ) less than ( 72 ) )": {"{VALUE0}": "72", "{COLUMN0}": "population", "{COLUMN1}": "lifeexpectancy", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": "<", "{AGG0}": "sum", "{AGG1}": "avg", "{AGG2}": "avg"}, "( the sum of ( population ) ) , ( governmentform ) that belongs to ( country ) , grouped by ( governmentform ) , that have ( ( the average of ( lifeexpectancy ) ) greater than ( 72 ) )": {"{VALUE0}": "72", "{COLUMN0}": "population", "{COLUMN1}": "governmentform", "{COLUMN2}": "lifeexpectancy", "{TABLE0}": "country", "{OP0}": ">", "{AGG0}": "sum", "{AGG1}": "avg"}, "( name of poker player ) , ( capacity of poker player ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of people ) equal to ( stadium id of poker player ) ) ) ) , that have ( ( year of people ) greater than or equal to ( 2014 ) ) , grouped by ( stadium id of poker player ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{VALUE7}": "2014", "{COLUMN0}": "name", "{COLUMN1}": "capacity", "{COLUMN2}": "stadium_id", "{COLUMN3}": "year", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": ">=", "{AGG0}": "count", "{SC0}": "desc"}, "( name of ship ) , ( capacity of ship ) that belongs to ( ( concert ) , and ( ( stadium ) satisfied that ( ( stadium id of students ) equal to ( stadium id of ship ) ) ) ) , that have ( ( year of students ) greater than ( 2013 ) ) , grouped by ( stadium id of ship ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{VALUE7}": "2013", "{COLUMN0}": "name", "{COLUMN1}": "capacity", "{COLUMN2}": "stadium_id", "{COLUMN3}": "year", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": ">", "{AGG0}": "count", "{SC0}": "desc"}, "( language of poker player ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( continent of people ) equal to ( asia ) ) , grouped by ( language of poker player ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "asia", "{VALUE2}": "1", "{COLUMN0}": "language", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "continent", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( the number of ( all items ) ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )": {"{VALUE0}": "spanish", "{COLUMN0}": "percentage", "{COLUMN1}": "language", "{COLUMN2}": "countrycode", "{TABLE0}": "countrylanguage", "{OP0}": "=", "{AGG0}": "count", "{AGG1}": "max"}, "( countrycode ) , ( the maximum of ( percentage ) ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( spanish ) ) , grouped by ( countrycode )": {"{VALUE0}": "spanish", "{COLUMN0}": "countrycode", "{COLUMN1}": "percentage", "{COLUMN2}": "language", "{TABLE0}": "countrylanguage", "{OP0}": "=", "{AGG0}": "max"}, "( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , that have ( ( sourceairport of poker player ) equal to ( cvo ) ), and except that ( ( airline of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , that have ( ( sourceairport of poker player ) equal to ( apg ) ))": {"{VALUE0}": "cvo", "{VALUE1}": "apg", "{COLUMN0}": "airline", "{COLUMN1}": "uid", "{COLUMN2}": "sourceairport", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{OP0}": "=", "{OP1}": "="}, "( code ) that belongs to ( country ) , that have ( ( governmentform ) not equal to ( republic ) ), and except that ( ( countrycode ) that belongs to ( countrylanguage ) , that have ( ( language ) equal to ( english ) ))": {"{VALUE0}": "republic", "{VALUE1}": "english", "{COLUMN0}": "code", "{COLUMN1}": "governmentform", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "!=", "{OP1}": "="}, "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )": {"{VALUE0}": "africa", "{VALUE1}": "asia", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "<", "{OP2}": "=", "{AGG0}": "max"}, "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( africa ) ) and ( ( population ) less than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) ) )": {"{VALUE0}": "africa", "{VALUE1}": "asia", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": "<", "{OP2}": "=", "{AGG0}": "min"}, "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the maximum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )": {"{VALUE0}": "asia", "{VALUE1}": "africa", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": ">", "{OP2}": "=", "{AGG0}": "max"}, "( name ) that belongs to ( country ) , that have ( ( ( continent ) equal to ( asia ) ) and ( ( population ) greater than ( the minimum of ( population ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( africa ) ) ) )": {"{VALUE0}": "asia", "{VALUE1}": "africa", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "population", "{TABLE0}": "country", "{OP0}": "=", "{OP1}": ">", "{OP2}": "=", "{AGG0}": "min"}, "( the number of ( all items ) ) that belongs to ( concert ) , that have ( ( stadium id ) equal to ( ( ( stadium id ) that belongs to ( stadium ) , ordered by ( ( capacity ) in descending order ) , limited to the top ( 1 ) ) ) )": {"{VALUE0}": "1", "{COLUMN0}": "stadium_id", "{COLUMN1}": "capacity", "{TABLE0}": "concert", "{TABLE1}": "stadium", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( the number of ( all items ) ) that belongs to ( cars data ) , that have ( ( accelerate ) greater than ( accelerate ) that belongs to ( cars data ) , ordered by ( ( horsepower ) in descending order ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "accelerate", "{COLUMN1}": "horsepower", "{TABLE0}": "cars data", "{OP0}": ">", "{AGG0}": "count", "{SC0}": "desc"}, "( the average of ( age ) ) that belongs to ( dogs ) , that have ( ( dog_id ) in ( ( dog id ) that belongs to ( treatments ) ) )": {"{COLUMN0}": "age", "{COLUMN1}": "dog_id", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{AGG0}": "avg"}, "( the average of ( grade ) ) that belongs to ( highschooler ) , that have ( ( id ) in ( ( student id of people ) that belongs to ( ( friend ) , and ( ( highschooler ) satisfied that ( ( student id of people ) equal to ( id of poker player ) ) ) ) ) )": {"{COLUMN0}": "grade", "{COLUMN1}": "id", "{COLUMN2}": "student_id", "{TABLE0}": "high schooler", "{TABLE1}": "friend", "{AGG0}": "avg"}, "( abbreviation of people ) , ( country of people ) that belongs to ( ( airlines ) , and ( ( flights ) satisfied that ( ( uid of people ) equal to ( airline of poker player ) ) ) ) , grouped by ( airline of people ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "abbreviation", "{COLUMN1}": "country", "{COLUMN2}": "uid", "{COLUMN3}": "airline", "{TABLE0}": "airlines", "{TABLE1}": "flights", "{AGG0}": "count"}, "( airportcode of people ) that belongs to ( ( airports ) , and ( ( flights ) satisfied that ( ( ( airportcode of people ) equal to ( destairport of poker player ) ) or ( ( airportcode of people ) equal to ( sourceairport of poker player ) ) ) ) ) , grouped by ( airportcode of people ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "airportcode", "{COLUMN1}": "destairport", "{COLUMN2}": "sourceairport", "{TABLE0}": "airports", "{TABLE1}": "flights", "{AGG0}": "count"}, "( name ) that belongs to ( museum ) , that have ( ( num of staff ) greater than ( the minimum of ( num of staff ) ) that belongs to ( museum ) , that have ( ( open year ) greater than ( 2010 ) ) )": {"{VALUE0}": "2010", "{COLUMN0}": "name", "{COLUMN1}": "num_of_staff", "{COLUMN2}": "open_year", "{TABLE0}": "museum", "{OP0}": ">", "{OP1}": ">", "{AGG0}": "min"}, "( name ) that belongs to ( country ) , that have ( ( surfacearea ) greater than ( the minimum of ( surfacearea ) ) that belongs to ( country ) , that have ( ( continent ) equal to ( europe ) ) )": {"{VALUE0}": "europe", "{COLUMN0}": "name", "{COLUMN1}": "surfacearea", "{COLUMN2}": "continent", "{TABLE0}": "country", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "( professional id ) , ( last name ) , ( cell number ) that belongs to ( professionals ) , that have ( ( state ) equal to ( 'indiana' ) ) and ( professional id of people ) , ( last name of people ) , ( cell number of people ) that belongs to ( ( professionals ) , and ( ( treatments ) satisfied that ( ( professional id of people ) equal to ( professional id of poker player ) ) ) ) , grouped by ( professional id of people ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "indiana", "{VALUE6}": "2", "{COLUMN0}": "professional_id", "{COLUMN1}": "last_name", "{COLUMN2}": "cell_number", "{COLUMN3}": "state", "{TABLE0}": "professionals", "{TABLE1}": "treatments", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "count"}, "( name ) , ( level of membership ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( age ) in descending order )": {"{VALUE0}": "4", "{COLUMN0}": "name", "{COLUMN1}": "level_of_membership", "{COLUMN2}": "age", "{TABLE0}": "customer", "{OP0}": ">", "{SC0}": "desc"}, "( name ) that belongs to ( visitor ) , that have ( ( level of membership ) greater than ( 4 ) ) , ordered by ( ( level of membership ) in descending order )": {"{VALUE0}": "4", "{COLUMN0}": "name", "{COLUMN1}": "level_of_membership", "{TABLE0}": "customer", "{OP0}": ">", "{SC0}": "desc"}, "( name ) that belongs to ( country ) , that have ( ( continent ) equal to ( asia ) ) , ordered by ( ( lifeexpectancy ) ) , limited to the top ( 1 )": {"{VALUE0}": "asia", "{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "continent", "{COLUMN2}": "lifeexpectancy", "{TABLE0}": "country", "{OP0}": "="}, "( first name ) , ( last name ) that belongs to ( players ) , that have ( ( hand ) equal to ( 'l' ) ) , ordered by ( ( birth date ) )": {"{VALUE0}": "l", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "hand", "{COLUMN3}": "birth_date", "{TABLE0}": "players", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( \"l ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( english ) ), and intersect with ( ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( language of poker player ) equal to ( dutch ) )) r\" )": {"{VALUE0}": "english", "{VALUE1}": "dutch", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( last name of people ) that belongs to ( ( students ) , and ( ( addresses ) satisfied that ( ( current address id of people ) equal to ( address id of poker player ) ) ) ) , that have ( ( state province county of poker player ) equal to ( 'northcarolina' ) ), and except that ( ( distinct ( last name of car makers ) ) that belongs to ( ( students ) , and ( ( student enrolment ) satisfied that ( ( student id of car makers ) equal to ( student id of student enrolment ) ) ) ))": {"{VALUE0}": "northcarolina", "{COLUMN0}": "last_name", "{COLUMN1}": "current_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "state_province_county", "{COLUMN4}": "student_id", "{TABLE0}": "students", "{TABLE1}": "addresses", "{TABLE2}": "student enrolment", "{OP0}": "="}, "( name of students ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of ship ) ) ) ) , that have ( ( ( language of ship ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and ( name of students ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of ship ) ) ) ) , that have ( ( ( language of ship ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )": {"{VALUE0}": "english", "{VALUE1}": "t", "{VALUE2}": "dutch", "{VALUE3}": "t", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{OP3}": "="}, "all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( language of poker player ) equal to ( english ) ) and ( ( isofficial ) equal to ( t ) ) ) and all items that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( language of poker player ) equal to ( dutch ) ) and ( ( isofficial ) equal to ( t ) ) )": {"{VALUE0}": "english", "{VALUE1}": "t", "{VALUE2}": "dutch", "{VALUE3}": "t", "{COLUMN0}": "code", "{COLUMN1}": "countrycode", "{COLUMN2}": "language", "{COLUMN3}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{OP3}": "="}, "( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( language of poker player ) equal to ( english ) ) and ( ( isofficial of poker player ) equal to ( t ) ) ), and intersect with ( ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( language of poker player ) equal to ( french ) ) and ( ( isofficial of poker player ) equal to ( t ) ) ))": {"{VALUE0}": "english", "{VALUE1}": "t", "{VALUE2}": "french", "{VALUE3}": "t", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "language", "{COLUMN4}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{OP3}": "="}, "( distinct ( name of car makers ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) , and ( ( city ) satisfied that ( ( code of people ) equal to ( countrycode of car makers ) ) ) ) , that have ( ( ( isofficial of poker player ) equal to ( 't' ) ) and ( ( language of poker player ) equal to ( 'chinese' ) ) and ( ( continent of people ) equal to ( asia ) ) )": {"{VALUE0}": "asia", "{VALUE1}": "t", "{VALUE2}": "chinese", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "isofficial", "{COLUMN4}": "language", "{COLUMN5}": "continent", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{TABLE2}": "city", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( distinct ( name of model list ) ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of students ) equal to ( countrycode of ship ) ) ) , and ( ( city ) satisfied that ( ( code of students ) equal to ( countrycode of model list ) ) ) ) , that have ( ( ( isofficial of ship ) equal to ( 't' ) ) and ( ( language of ship ) equal to ( 'chinese' ) ) and ( ( continent of students ) equal to ( asia ) ) )": {"{VALUE0}": "asia", "{VALUE1}": "t", "{VALUE2}": "chinese", "{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "countrycode", "{COLUMN3}": "isofficial", "{COLUMN4}": "language", "{COLUMN5}": "continent", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{TABLE2}": "city", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( distinct ( name of poker player ) ) that belongs to ( ( country ) , and ( ( city ) satisfied that ( ( countrycode of poker player ) equal to ( code of people ) ) ) ) , that have ( ( ( continent of people ) equal to ( 'europe' ) ) and ( ( t1.name ) not in ( ( name of car makers ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of car makers ) equal to ( countrycode of student enrolment ) ) ) ) , that have ( ( ( isofficial of student enrolment ) equal to ( 't' ) ) and ( ( language of student enrolment ) equal to ( 'english' ) ) ) ) ) )": {"{VALUE0}": "europe", "{VALUE1}": "t", "{VALUE2}": "english", "{COLUMN0}": "name", "{COLUMN1}": "countrycode", "{COLUMN2}": "code", "{COLUMN3}": "continent", "{COLUMN4}": "isofficial", "{COLUMN5}": "language", "{TABLE0}": "country", "{TABLE1}": "city", "{TABLE2}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( fname of people ) , ( age of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( ( pettype of car makers ) equal to ( 'dog' ) ) and ( ( t1.stuid ) not in ( ( stuid of people ) that belongs to ( ( student ) , and ( ( has pet ) satisfied that ( ( stuid of people ) equal to ( stuid of poker player ) ) ) , and ( ( pets ) satisfied that ( ( petid of car makers ) equal to ( petid of poker player ) ) ) ) , that have ( ( pettype of car makers ) equal to ( 'cat' ) ) ) ) )": {"{VALUE0}": "dog", "{VALUE1}": "cat", "{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "petid", "{COLUMN4}": "pettype", "{TABLE0}": "student", "{TABLE1}": "has pet", "{TABLE2}": "pets", "{OP0}": "=", "{OP1}": "="}, "( first name ) that belongs to ( students ) , that have ( ( current address id ) not equal to ( permanent address id ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "current_address_id", "{COLUMN2}": "permanent_address_id", "{TABLE0}": "students", "{OP0}": "!="}, "( name of people ) , ( date of treatment of poker player ) that belongs to ( ( dogs ) , and ( ( treatments ) satisfied that ( ( dog id of people ) equal to ( dog id of poker player ) ) ) ) , that have ( ( breed code of people ) equal to ( breed code ) that belongs to ( dogs ) , grouped by ( breed code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "date_of_treatment", "{COLUMN2}": "dog_id", "{COLUMN3}": "breed_code", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "asc"}, "( the number of ( all items ) ) , ( district ) that belongs to ( city ) , that have ( ( population ) greater than ( the average of ( population ) ) that belongs to ( city ) ) , grouped by ( district )": {"{COLUMN0}": "district", "{COLUMN1}": "population", "{TABLE0}": "city", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "avg"}, "( makeid of poker player ) , ( make of poker player ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of people ) equal to ( makeid of poker player ) ) ) ) , that have ( ( ( horsepower of people ) greater than ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) and ( ( cylinders of people ) less than or equal to ( 3 ) ) )": {"{VALUE8}": "3", "{COLUMN0}": "makeid", "{COLUMN1}": "make", "{COLUMN2}": "id", "{COLUMN3}": "horsepower", "{COLUMN4}": "cylinders", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": ">", "{OP1}": "<=", "{AGG0}": "min"}, "( makeid of ship ) , ( make of ship ) that belongs to ( ( cars data ) , and ( ( car names ) satisfied that ( ( id of students ) equal to ( makeid of ship ) ) ) ) , that have ( ( ( horsepower of students ) greater than ( ( ( the minimum of ( horsepower ) ) that belongs to ( cars data ) ) ) ) and ( ( cylinders of students ) less than ( 4 ) ) )": {"{VALUE8}": "4", "{COLUMN0}": "makeid", "{COLUMN1}": "make", "{COLUMN2}": "id", "{COLUMN3}": "horsepower", "{COLUMN4}": "cylinders", "{TABLE0}": "cars data", "{TABLE1}": "car names", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "min"}, "( the average of ( lifeexpectancy ) ) that belongs to ( country ) , that have ( ( name ) not in ( ( name of people ) that belongs to ( ( country ) , and ( ( countrylanguage ) satisfied that ( ( code of people ) equal to ( countrycode of poker player ) ) ) ) , that have ( ( ( language of poker player ) equal to ( english ) ) and ( ( isofficial of poker player ) equal to ( t ) ) ) ) )": {"{VALUE0}": "english", "{VALUE1}": "t", "{COLUMN0}": "lifeexpectancy", "{COLUMN1}": "name", "{COLUMN2}": "code", "{COLUMN3}": "countrycode", "{COLUMN4}": "language", "{COLUMN5}": "isofficial", "{TABLE0}": "country", "{TABLE1}": "countrylanguage", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "( name ) that belongs to ( dogs ) , that have ( ( dog_id ) not in ( ( ( dog id ) that belongs to ( treatments ) , grouped by ( dog id ) , that have ( ( the sum of ( cost of treatment ) ) greater than ( 1000 ) ) ) ) )": {"{VALUE0}": "1000", "{COLUMN0}": "name", "{COLUMN1}": "dog_id", "{COLUMN2}": "cost_of_treatment", "{TABLE0}": "dogs", "{TABLE1}": "treatments", "{OP0}": ">", "{AGG0}": "sum"}, "( document id ) , ( the number of ( all items ) ) that belongs to ( paragraphs ) , grouped by ( document id ) , ordered by ( ( document id ) )": {"{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{AGG0}": "count"}, "( major record format ) that belongs to ( orchestra ) , grouped by ( major record format ) , ordered by ( ( the number of ( all items ) ) in ascending order )": {"{COLUMN0}": "major_record_format", "{COLUMN1}": "orchestra", "{AGG0}": "count", "{SC0}": "asc"}, "( countryid of people ) , ( countryname of people ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of people ) equal to ( country of poker player ) ) ) ) , grouped by ( countryid of people ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of people ) , ( countryname of people ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of people ) equal to ( country of poker player ) ) ) , and ( ( model list ) satisfied that ( ( id of poker player ) equal to ( maker of car makers ) ) ) ) , that have ( ( model of car makers ) equal to ( 'fiat' ) )": {"{VALUE0}": "fiat", "{VALUE8}": "3", "{COLUMN0}": "countryid", "{COLUMN1}": "countryname", "{COLUMN2}": "country", "{COLUMN3}": "id", "{COLUMN4}": "maker", "{COLUMN5}": "model", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{TABLE2}": "model list", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count"}, "( countryid of students ) , ( countryname of students ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of students ) equal to ( country of ship ) ) ) ) , grouped by ( countryid of students ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ) and ( countryid of students ) , ( countryname of students ) that belongs to ( ( countries ) , and ( ( car makers ) satisfied that ( ( countryid of students ) equal to ( country of ship ) ) ) , and ( ( model list ) satisfied that ( ( id of ship ) equal to ( maker of model list ) ) ) ) , that have ( ( model of model list ) equal to ( 'fiat' ) )": {"{VALUE0}": "fiat", "{VALUE8}": "3", "{COLUMN0}": "countryid", "{COLUMN1}": "countryname", "{COLUMN2}": "country", "{COLUMN3}": "id", "{COLUMN4}": "maker", "{COLUMN5}": "model", "{TABLE0}": "countries", "{TABLE1}": "car makers", "{TABLE2}": "model list", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count"}, "( id of people ) , ( maker of people ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of people ) equal to ( maker of poker player ) ) ) ) , grouped by ( id of people ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( id of people ) , ( maker of people ) that belongs to ( ( car makers ) , and ( ( model list ) satisfied that ( ( id of people ) equal to ( maker of poker player ) ) ) , and ( ( car names ) satisfied that ( ( model of poker player ) equal to ( model of car makers ) ) ) ) , grouped by ( id of people ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) ))": {"{VALUE3}": "2", "{VALUE14}": "3", "{COLUMN0}": "id", "{COLUMN1}": "maker", "{COLUMN2}": "model", "{TABLE0}": "car makers", "{TABLE1}": "model list", "{TABLE2}": "car names", "{OP0}": ">=", "{OP1}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "( document id ) that belongs to ( paragraphs ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) between ( 1 ) and ( 2 ) )": {"{VALUE0}": "1", "{VALUE1}": "2", "{COLUMN0}": "document_id", "{TABLE0}": "paragraphs", "{AGG0}": "count"}, "( property name ) that belongs to ( properties ) , that have ( ( property type code ) equal to ( house ) ) and ( property name ) that belongs to ( properties ) , that have ( ( ( property type code ) equal to ( apartment ) ) and ( ( room count ) greater than ( 1 ) ) )": {"{VALUE0}": "house", "{VALUE1}": "apartment", "{VALUE3}": "1", "{COLUMN0}": "property_name", "{COLUMN1}": "property_type_code", "{COLUMN2}": "room_count", "{TABLE0}": "properties", "{OP0}": "=", "{OP1}": "=", "{OP2}": ">"}}]