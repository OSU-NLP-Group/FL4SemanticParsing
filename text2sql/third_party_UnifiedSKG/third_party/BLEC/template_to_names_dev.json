[{"SELECT name_first ,  name_last FROM player WHERE death_year = '';": {"{VALUE0}": "", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "death_year", "{TABLE0}": "player", "{OP0}": "="}, "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  'Australia'": {"{VALUE0}": "australia", "{COLUMN0}": "meter_200", "{COLUMN1}": "meter_300", "{COLUMN2}": "nationality", "{TABLE0}": "swimmer", "{OP0}": "="}, "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'": {"{VALUE0}": "opera", "{COLUMN0}": "name", "{COLUMN1}": "operating_system", "{COLUMN2}": "accelerator_id", "{COLUMN3}": "id", "{COLUMN4}": "browser_id", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{TABLE2}": "browser", "{OP0}": "="}, "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'": {"{VALUE0}": "protoporphyrinogen ix", "{COLUMN0}": "name", "{COLUMN1}": "trade_name", "{COLUMN2}": "medicine_id", "{COLUMN3}": "id", "{COLUMN4}": "enzyme_id", "{COLUMN5}": "product", "{TABLE0}": "medicine", "{TABLE1}": "medicine enzyme interaction", "{TABLE2}": "enzyme", "{OP0}": "="}, "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"": {"{VALUE0}": "x", "{COLUMN0}": "name", "{COLUMN1}": "position", "{COLUMN2}": "physician", "{COLUMN3}": "employeeid", "{COLUMN4}": "medication", "{COLUMN5}": "code", "{COLUMN6}": "brand", "{TABLE0}": "prescribes", "{OP0}": "="}, "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111": {"{VALUE11}": "111", "{COLUMN0}": "name", "{COLUMN1}": "stay", "{COLUMN2}": "patient", "{COLUMN3}": "ssn", "{COLUMN4}": "medication", "{COLUMN5}": "code", "{COLUMN6}": "room", "{TABLE0}": "prescribes", "{OP0}": "="}, "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"": {"{VALUE0}": "white", "{COLUMN0}": "name", "{COLUMN1}": "score", "{COLUMN2}": "grape", "{COLUMN3}": "color", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{OP0}": "="}, "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"": {"{VALUE0}": "christop", "{COLUMN0}": "problem_description", "{COLUMN1}": "reported_by_staff_id", "{COLUMN2}": "staff_id", "{COLUMN3}": "staff_first_name", "{TABLE0}": "problems", "{TABLE1}": "staff", "{OP0}": "="}, "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000": {"{VALUE6}": "10000", "{COLUMN0}": "number_cities", "{COLUMN1}": "market_id", "{COLUMN2}": "low_estimate", "{TABLE0}": "film market estimation", "{TABLE1}": "market", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT Advisor FROM STUDENT WHERE city_code  =  \"BAL\"": {"{VALUE0}": "bal", "{COLUMN0}": "advisor", "{COLUMN1}": "city_code", "{TABLE0}": "student", "{OP0}": "="}, "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800": {"{VALUE7}": "800", "{COLUMN0}": "file_size", "{COLUMN1}": "formats", "{COLUMN2}": "f_id", "{COLUMN3}": "resolution", "{TABLE0}": "files", "{TABLE1}": "song", "{OP0}": "<"}, "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\"": {"{VALUE0}": "violin", "{COLUMN0}": "date", "{COLUMN1}": "member_id", "{COLUMN2}": "performance_id", "{COLUMN3}": "role", "{TABLE0}": "member attendance", "{TABLE1}": "member", "{TABLE2}": "performance", "{OP0}": "="}, "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";": {"{VALUE0}": "lg-p760", "{COLUMN0}": "chip_model", "{COLUMN1}": "screen_mode", "{COLUMN2}": "hardware_model_name", "{TABLE0}": "phone", "{OP0}": "="}, "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'": {"{VALUE0}": "brown", "{COLUMN0}": "balance", "{COLUMN1}": "custid", "{COLUMN2}": "name", "{TABLE0}": "accounts", "{TABLE1}": "savings", "{OP0}": "!=", "{AGG0}": "sum"}, "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0": {"{VALUE7}": "0", "{COLUMN0}": "attribute_name", "{COLUMN1}": "attribute_id", "{COLUMN2}": "attribute_value", "{TABLE0}": "attribute definitions", "{TABLE1}": "catalog contents additional attributes", "{OP0}": "="}, "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'": {"{VALUE0}": "clemson", "{COLUMN0}": "all_games", "{COLUMN1}": "location", "{COLUMN2}": "school_id", "{COLUMN3}": "team_name", "{TABLE0}": "university", "{TABLE1}": "basketball match", "{OP0}": "="}, "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000": {"{VALUE5}": "10000", "{COLUMN0}": "name", "{COLUMN1}": "representative_id", "{COLUMN2}": "votes", "{TABLE0}": "election", "{TABLE1}": "representative", "{OP0}": ">"}, "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'": {"{VALUE0}": "linda", "{COLUMN0}": "address", "{COLUMN1}": "email", "{COLUMN2}": "address_id", "{COLUMN3}": "first_name", "{TABLE0}": "customer", "{OP0}": "="}, "SELECT origin ,  destination FROM Flight WHERE price  >  300": {"{VALUE0}": "300", "{COLUMN0}": "origin", "{COLUMN1}": "destination", "{COLUMN2}": "price", "{TABLE0}": "flight", "{OP0}": ">"}, "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  'New York'": {"{VALUE0}": "new york", "{COLUMN0}": "amount", "{COLUMN1}": "branch_id", "{COLUMN2}": "state", "{TABLE0}": "bank", "{TABLE1}": "loan", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'": {"{VALUE0}": "third-rate ship of the line", "{COLUMN0}": "rank", "{COLUMN1}": "class", "{TABLE0}": "captain", "{OP0}": "="}, "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12": {"{VALUE7}": "12", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "station_id", "{COLUMN3}": "bikes_available", "{TABLE0}": "station", "{TABLE1}": "status", "{OP0}": ">"}, "SELECT name FROM program WHERE origin != 'Beijing'": {"{VALUE0}": "beijing", "{COLUMN0}": "name", "{COLUMN1}": "origin", "{TABLE0}": "program", "{OP0}": "!="}, "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "dates_active", "{COLUMN2}": "number_deaths", "{TABLE0}": "storm", "{OP0}": ">="}, "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015": {"{VALUE6}": "2015", "{COLUMN0}": "name", "{COLUMN1}": "church_id", "{COLUMN2}": "year", "{TABLE0}": "church", "{TABLE1}": "wedding", "{OP0}": "="}, "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70": {"{VALUE9}": "70", "{COLUMN0}": "name", "{COLUMN1}": "machine_id", "{COLUMN2}": "technician_id", "{COLUMN3}": "value_points", "{TABLE0}": "repair assignment", "{TABLE1}": "machine", "{TABLE2}": "technician", "{OP0}": ">"}, "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';": {"{VALUE0}": "full", "{COLUMN0}": "hardware_model_name", "{COLUMN1}": "company_name", "{COLUMN2}": "accreditation_type", "{TABLE0}": "phone", "{OP0}": "like"}, "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"": {"{VALUE0}": "university of oxford", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "authid", "{COLUMN3}": "instid", "{COLUMN4}": "name", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "="}, "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"": {"{VALUE0}": "universal", "{COLUMN0}": "title", "{COLUMN1}": "studio", "{TABLE0}": "film", "{OP0}": "like"}, "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003": {"{VALUE6}": "2003", "{COLUMN0}": "name", "{COLUMN1}": "institution", "{COLUMN2}": "building_id", "{COLUMN3}": "founded", "{TABLE0}": "building", "{OP0}": "="}, "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000": {"{VALUE10}": "10000000", "{COLUMN0}": "aircraft", "{COLUMN1}": "description", "{COLUMN2}": "aircraft_id", "{COLUMN3}": "airport_id", "{COLUMN4}": "total_passengers", "{TABLE0}": "airport aircraft", "{TABLE1}": "airport", "{OP0}": ">"}, "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"": {"{VALUE0}": "right wing", "{COLUMN0}": "name", "{COLUMN1}": "club_id", "{COLUMN2}": "position", "{TABLE0}": "club", "{TABLE1}": "player", "{OP0}": "="}, "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"": {"{VALUE0}": "indiana university", "{COLUMN0}": "title", "{COLUMN1}": "paperid", "{COLUMN2}": "instid", "{COLUMN3}": "name", "{TABLE0}": "papers", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "="}, "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"Lewis\"": {"{VALUE0}": "lewis", "{COLUMN0}": "name", "{COLUMN1}": "year", "{COLUMN2}": "raceid", "{COLUMN3}": "driverid", "{COLUMN4}": "forename", "{TABLE0}": "driver standings", "{TABLE1}": "drivers", "{TABLE2}": "status", "{OP0}": "="}, "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"": {"{VALUE0}": "chervil", "{COLUMN0}": "unit_of_measure", "{COLUMN1}": "product_category_code", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference product categories", "{OP0}": "="}, "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3": {"{VALUE8}": "3", "{COLUMN0}": "product_type_code", "{COLUMN1}": "product_name", "{COLUMN2}": "product_price", "{COLUMN3}": "product_id", "{COLUMN4}": "supplier_id", "{TABLE0}": "product suppliers", "{TABLE1}": "products", "{OP0}": "="}, "SELECT Name FROM ship WHERE Nationality != \"United States\"": {"{VALUE0}": "united states", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "ship", "{OP0}": "!="}, "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'": {"{VALUE0}": "m", "{COLUMN0}": "height", "{COLUMN1}": "weight", "{COLUMN2}": "sex", "{TABLE0}": "people", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000": {"{VALUE0}": "6000", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "salary", "{TABLE0}": "employees", "{OP0}": "<"}, "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"CA\"": {"{VALUE0}": "ca", "{COLUMN0}": "state_county", "{COLUMN1}": "address_id", "{COLUMN2}": "marketing_region_code", "{TABLE0}": "addresses", "{TABLE1}": "stores", "{OP0}": "="}, "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"": {"{VALUE0}": "stop", "{COLUMN0}": "store_name", "{COLUMN1}": "workshop_group_id", "{COLUMN2}": "status_code", "{TABLE0}": "bookings", "{TABLE1}": "drama workshop groups", "{OP0}": "="}, "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'": {"{VALUE0}": "smith", "{COLUMN0}": "name", "{COLUMN1}": "project", "{COLUMN2}": "code", "{COLUMN3}": "scientist", "{COLUMN4}": "ssn", "{TABLE0}": "assigned to", "{TABLE1}": "projects", "{TABLE2}": "scientists", "{OP0}": "like"}, "SELECT forename ,  surname FROM drivers WHERE nationality = \"German\"": {"{VALUE0}": "german", "{COLUMN0}": "forename", "{COLUMN1}": "surname", "{COLUMN2}": "nationality", "{TABLE0}": "status", "{OP0}": "="}, "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"": {"{VALUE0}": "john wen", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "employeeid", "{COLUMN3}": "procedures", "{COLUMN4}": "code", "{COLUMN5}": "treatment", "{TABLE0}": "trained in", "{OP0}": "="}, "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"": {"{VALUE0}": "warm", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{COLUMN3}": "characteristic_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": "="}, "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10": {"{VALUE6}": "10", "{COLUMN0}": "date_order_placed", "{COLUMN1}": "order_id", "{COLUMN2}": "invoice_number", "{TABLE0}": "orders", "{TABLE1}": "shipments", "{OP0}": "="}, "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"": {"{VALUE0}": "bal", "{COLUMN0}": "clubname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "city_code", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "="}, "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"": {"{VALUE0}": "alaska", "{COLUMN0}": "store_email_address", "{COLUMN1}": "address_id", "{COLUMN2}": "state_county", "{TABLE0}": "addresses", "{TABLE1}": "drama workshop groups", "{OP0}": "="}, "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;": {"{VALUE0}": "4", "{COLUMN0}": "address_details", "{COLUMN1}": "mailed_to_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "document_id", "{TABLE0}": "addresses", "{TABLE1}": "documents mailed", "{OP0}": "="}, "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  'Procrastin-X'": {"{VALUE0}": "procrastin-x", "{COLUMN0}": "name", "{COLUMN1}": "patient", "{COLUMN2}": "ssn", "{COLUMN3}": "medication", "{COLUMN4}": "code", "{TABLE0}": "prescribes", "{OP0}": "="}, "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6": {"{VALUE5}": "6", "{COLUMN0}": "member_id", "{COLUMN1}": "level", "{TABLE0}": "purchase", "{TABLE1}": "member", "{OP0}": "=", "{AGG0}": "count"}, "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20": {"{VALUE6}": "20", "{COLUMN0}": "lastname", "{COLUMN1}": "customerid", "{COLUMN2}": "total", "{TABLE0}": "customer", "{TABLE1}": "invoice", "{OP0}": ">"}, "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010": {"{VALUE6}": "2010", "{COLUMN0}": "city", "{COLUMN1}": "city_id", "{COLUMN2}": "host_city", "{COLUMN3}": "year", "{TABLE0}": "hosting city", "{OP0}": ">"}, "SELECT login_name FROM Students WHERE family_name  =  \"Ward\"": {"{VALUE0}": "ward", "{COLUMN0}": "login_name", "{COLUMN1}": "family_name", "{TABLE0}": "students", "{OP0}": "="}, "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009": {"{VALUE0}": "2009", "{COLUMN0}": "ticket_price", "{COLUMN1}": "year", "{TABLE0}": "exhibition", "{OP0}": "<", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"": {"{VALUE0}": "ryley goldner", "{COLUMN0}": "position", "{COLUMN1}": "team", "{COLUMN2}": "team_id", "{COLUMN3}": "name", "{TABLE0}": "match season", "{OP0}": "="}, "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"Robinson R-22\"": {"{VALUE0}": "robinson r-22", "{COLUMN0}": "total_passengers", "{COLUMN1}": "aircraft", "{COLUMN2}": "aircraft_id", "{COLUMN3}": "airport_id", "{TABLE0}": "airport aircraft", "{TABLE1}": "airport", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'": {"{VALUE0}": "acct-211", "{COLUMN0}": "stu_fname", "{COLUMN1}": "class_code", "{COLUMN2}": "stu_num", "{COLUMN3}": "crs_code", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "student", "{OP0}": "="}, "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"": {"{VALUE0}": "gorgoroth", "{COLUMN0}": "issue_date", "{COLUMN1}": "artist", "{COLUMN2}": "volume", "{COLUMN3}": "artist_id", "{OP0}": "="}, "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"": {"{VALUE0}": "balls to the wall", "{COLUMN0}": "name", "{COLUMN1}": "artistid", "{COLUMN2}": "title", "{TABLE0}": "album", "{TABLE1}": "artist", "{OP0}": "="}, "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"": {"{VALUE0}": "tony award", "{COLUMN0}": "nominee", "{COLUMN1}": "award", "{TABLE0}": "musical", "{OP0}": "!="}, "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'": {"{VALUE0}": "london", "{COLUMN0}": "name", "{COLUMN1}": "total_passengers", "{COLUMN2}": "location", "{TABLE0}": "station", "{OP0}": "!="}, "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23": {"{VALUE5}": "23", "{COLUMN0}": "issue_date", "{COLUMN1}": "artist", "{COLUMN2}": "volume", "{COLUMN3}": "artist_id", "{COLUMN4}": "age", "{OP0}": "<="}, "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"": {"{VALUE0}": "sonoma", "{COLUMN0}": "price", "{COLUMN1}": "appelation", "{COLUMN2}": "county", "{TABLE0}": "appellations", "{TABLE1}": "wine", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'": {"{VALUE0}": "email", "{COLUMN0}": "customer_name", "{COLUMN1}": "active_from_date", "{COLUMN2}": "customer_id", "{COLUMN3}": "channel_code", "{TABLE0}": "customers", "{TABLE1}": "customer contact channels", "{OP0}": "="}, "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"": {"{VALUE0}": "rachel elnaugh", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "investor", "{TABLE0}": "entrepreneur", "{TABLE1}": "people", "{OP0}": "!="}, "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'": {"{VALUE0}": "yes", "{COLUMN0}": "name", "{COLUMN1}": "num_employees", "{COLUMN2}": "department_id", "{COLUMN3}": "temporary_acting", "{TABLE0}": "department", "{TABLE1}": "management", "{OP0}": "="}, "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600": {"{VALUE0}": "600", "{COLUMN0}": "age", "{COLUMN1}": "major", "{TABLE0}": "student", "{OP0}": "=", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"": {"{VALUE0}": "dublin", "{COLUMN0}": "position", "{COLUMN1}": "country", "{COLUMN2}": "country_id", "{COLUMN3}": "capital", "{TABLE0}": "match season", "{OP0}": "="}, "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"": {"{VALUE0}": "san jose", "{COLUMN0}": "lat", "{COLUMN1}": "long", "{COLUMN2}": "city", "{TABLE0}": "station", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"": {"{VALUE0}": "the phantom of the opera", "{COLUMN0}": "name", "{COLUMN1}": "musical_id", "{TABLE0}": "actor", "{TABLE1}": "musical", "{OP0}": "="}, "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"film\"": {"{VALUE0}": "film", "{COLUMN0}": "store_phone", "{COLUMN1}": "store_email_address", "{COLUMN2}": "workshop_group_id", "{COLUMN3}": "product_name", "{TABLE0}": "drama workshop groups", "{TABLE1}": "services", "{OP0}": "="}, "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";": {"{VALUE0}": "movies", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "playlist_id", "{TABLE0}": "tracks", "{TABLE1}": "playlist tracks", "{TABLE2}": "playlists", "{OP0}": "="}, "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;": {"{VALUE9}": "15", "{COLUMN0}": "name", "{COLUMN1}": "accelerator_id", "{COLUMN2}": "id", "{COLUMN3}": "browser_id", "{COLUMN4}": "market_share", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{TABLE2}": "browser", "{OP0}": ">"}, "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\"": {"{VALUE0}": "338", "{COLUMN0}": "other_account_details", "{COLUMN1}": "account_name", "{TABLE0}": "accounts", "{OP0}": "="}, "SELECT name ,  year_join FROM artist WHERE country != 'United States'": {"{VALUE0}": "united states", "{COLUMN0}": "name", "{COLUMN1}": "year_join", "{COLUMN2}": "country", "{TABLE0}": "artist", "{OP0}": "!="}, "SELECT Category FROM music_festival WHERE RESULT  =  \"Awarded\"": {"{VALUE0}": "awarded", "{COLUMN0}": "category", "{COLUMN1}": "music_festival", "{COLUMN2}": "result", "{OP0}": "="}, "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full'": {"{VALUE0}": "full", "{COLUMN0}": "model_name", "{COLUMN1}": "chip_model", "{COLUMN2}": "accreditation_type", "{TABLE0}": "phone", "{OP0}": "="}, "SELECT Price FROM WINE WHERE YEAR  <  2010": {"{VALUE0}": "2010", "{COLUMN0}": "price", "{COLUMN1}": "year", "{TABLE0}": "wine", "{OP0}": "<"}, "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"": {"{VALUE0}": "fja filming", "{COLUMN0}": "city_town", "{COLUMN1}": "address_id", "{COLUMN2}": "store_name", "{TABLE0}": "addresses", "{TABLE1}": "stores", "{OP0}": "="}, "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"": {"{VALUE0}": "walter hill", "{COLUMN0}": "studio", "{COLUMN1}": "director", "{TABLE0}": "film", "{OP0}": "="}, "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636": {"{VALUE0}": "636", "{COLUMN0}": "duration", "{COLUMN1}": "bike_id", "{TABLE0}": "trip", "{OP0}": "=", "{AGG0}": "sum", "{AGG1}": "max"}, "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'": {"{VALUE0}": "usa", "{COLUMN0}": "company", "{COLUMN1}": "main_industry", "{COLUMN2}": "headquarters", "{OP0}": "!="}, "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"": {"{VALUE0}": "thesisin", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "employeeid", "{COLUMN3}": "medication", "{COLUMN4}": "code", "{TABLE0}": "prescribes", "{OP0}": "="}, "SELECT phone ,  postal_code FROM address WHERE address  =  '1031 Daugavpils Parkway'": {"{VALUE0}": "1031 daugavpils parkway", "{COLUMN0}": "phone", "{COLUMN1}": "postal_code", "{COLUMN2}": "address", "{OP0}": "="}, "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000": {"{VALUE0}": "5000", "{COLUMN0}": "working_horses", "{COLUMN1}": "total_horses", "{TABLE0}": "farm", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT Carrier FROM device WHERE Software_Platform != 'Android'": {"{VALUE0}": "android", "{COLUMN0}": "carrier", "{COLUMN1}": "device", "{COLUMN2}": "software_platform", "{OP0}": "!="}, "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Aerosmith\";": {"{VALUE0}": "aerosmith", "{COLUMN0}": "title", "{COLUMN1}": "artist_id", "{COLUMN2}": "id", "{COLUMN3}": "name", "{TABLE0}": "albums", "{TABLE1}": "sqlite sequence", "{OP0}": "="}, "SELECT document_type_code FROM Documents WHERE document_id = 2;": {"{VALUE0}": "2", "{COLUMN0}": "document_type_code", "{COLUMN1}": "document_id", "{TABLE0}": "documents", "{OP0}": "="}, "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"": {"{VALUE0}": "nyc", "{COLUMN0}": "gradepoint", "{COLUMN1}": "grade", "{COLUMN2}": "lettergrade", "{COLUMN3}": "stuid", "{COLUMN4}": "city_code", "{TABLE0}": "enrolled in", "{TABLE1}": "grade conversion", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011": {"{VALUE0}": "2011", "{COLUMN0}": "capacity", "{COLUMN1}": "openning_year", "{TABLE0}": "cinema", "{OP0}": ">=", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"How to read a book\"": {"{VALUE0}": "how to read a book", "{COLUMN0}": "document_type_name", "{COLUMN1}": "document_type_code", "{COLUMN2}": "document_name", "{TABLE0}": "all documents", "{TABLE1}": "reference document types", "{OP0}": "="}, "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\"": {"{VALUE0}": "2000-01-01", "{COLUMN0}": "order_id", "{COLUMN1}": "shipment_date", "{TABLE0}": "shipments", "{OP0}": ">"}, "SELECT CName FROM COURSE WHERE Credits  =  1": {"{VALUE0}": "1", "{COLUMN0}": "cname", "{COLUMN1}": "credits", "{TABLE0}": "course", "{OP0}": "="}, "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121": {"{VALUE9}": "1121", "{COLUMN0}": "clubname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "advisor", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "="}, "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"": {"{VALUE0}": "gym", "{COLUMN0}": "room_count", "{COLUMN1}": "apt_id", "{COLUMN2}": "facility_code", "{TABLE0}": "apartment facilities", "{TABLE1}": "apartments", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"cumin\"": {"{VALUE0}": "cumin", "{COLUMN0}": "unit_of_measure", "{COLUMN1}": "product_category_code", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference product categories", "{OP0}": "="}, "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"": {"{VALUE0}": "robin cv", "{COLUMN0}": "location_name", "{COLUMN1}": "document_id", "{COLUMN2}": "location_code", "{COLUMN3}": "document_name", "{TABLE0}": "all documents", "{TABLE1}": "document locations", "{TABLE2}": "reference locations", "{OP0}": "="}, "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"Smith\"": {"{VALUE0}": "smith", "{COLUMN0}": "gradepoint", "{COLUMN1}": "grade", "{COLUMN2}": "lettergrade", "{COLUMN3}": "stuid", "{COLUMN4}": "lname", "{TABLE0}": "enrolled in", "{TABLE1}": "grade conversion", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"": {"{VALUE0}": "david cv", "{COLUMN0}": "section_title", "{COLUMN1}": "document_code", "{COLUMN2}": "document_name", "{TABLE0}": "documents", "{TABLE1}": "document sections", "{OP0}": "="}, "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"Universal Music Group\"": {"{VALUE0}": "universal music group", "{COLUMN0}": "title", "{COLUMN1}": "aid", "{COLUMN2}": "albumid", "{COLUMN3}": "songid", "{COLUMN4}": "label", "{TABLE0}": "albums", "{TABLE1}": "track lists", "{TABLE2}": "songs", "{OP0}": "="}, "SELECT name FROM channel WHERE OWNER != 'CCTV'": {"{VALUE0}": "cctv", "{COLUMN0}": "name", "{COLUMN1}": "owner", "{TABLE0}": "channel", "{OP0}": "!="}, "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"": {"{VALUE0}": "department manager", "{COLUMN0}": "staff_id", "{COLUMN1}": "staff_gender", "{COLUMN2}": "job_title_code", "{TABLE0}": "staff", "{TABLE1}": "staff department assignments", "{OP0}": "="}, "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"": {"{VALUE0}": "leonie", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "supportrepid", "{COLUMN3}": "employeeid", "{TABLE0}": "customer", "{TABLE1}": "employee", "{OP0}": "="}, "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"": {"{VALUE0}": "jeramie", "{COLUMN0}": "order_id", "{COLUMN1}": "order_status", "{COLUMN2}": "customer_id", "{COLUMN3}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "orders", "{OP0}": "="}, "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"": {"{VALUE0}": "tillman ernser", "{COLUMN0}": "channel_code", "{COLUMN1}": "customer_id", "{COLUMN2}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customer contact channels", "{OP0}": "="}, "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\"": {"{VALUE0}": "san francisco", "{COLUMN0}": "end_station_id", "{COLUMN1}": "id", "{COLUMN2}": "city", "{TABLE0}": "trip", "{TABLE1}": "station", "{OP0}": "!=", "{AGG0}": "count"}, "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5": {"{VALUE6}": "5", "{COLUMN0}": "catalog_name", "{COLUMN1}": "date_of_publication", "{COLUMN2}": "catalog_id", "{COLUMN3}": "catalog_level_number", "{TABLE0}": "catalogs", "{TABLE1}": "catalog structure", "{OP0}": ">"}, "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'": {"{VALUE0}": "tv lounge", "{COLUMN0}": "dorm_name", "{COLUMN1}": "dormid", "{COLUMN2}": "amenid", "{COLUMN3}": "amenity_name", "{TABLE0}": "dorm", "{TABLE1}": "has amenity", "{TABLE2}": "dorm amenity", "{OP0}": "="}, "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  'Smithson'": {"{VALUE0}": "smithson", "{COLUMN0}": "crs_description", "{COLUMN1}": "crs_credit", "{COLUMN2}": "class_code", "{COLUMN3}": "stu_num", "{COLUMN4}": "crs_code", "{COLUMN5}": "stu_lname", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "student", "{TABLE3}": "course", "{OP0}": "="}, "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5": {"{VALUE5}": "5", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{COLUMN2}": "grade", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "="}, "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"": {"{VALUE0}": "a", "{COLUMN0}": "staff_id", "{COLUMN1}": "first_name", "{TABLE0}": "lessons", "{TABLE1}": "staff", "{OP0}": "like", "{AGG0}": "count"}, "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"": {"{VALUE0}": "bangla", "{COLUMN0}": "rating", "{COLUMN1}": "resolution", "{COLUMN2}": "languages", "{TABLE0}": "song", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT DISTINCT building FROM classroom WHERE capacity  >  50": {"{VALUE0}": "50", "{COLUMN0}": "building", "{COLUMN1}": "capacity", "{TABLE0}": "classroom", "{OP0}": ">"}, "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'": {"{VALUE0}": "led", "{COLUMN0}": "title", "{COLUMN1}": "id", "{COLUMN2}": "artist_id", "{COLUMN3}": "name", "{TABLE0}": "sqlite sequence", "{TABLE1}": "albums", "{OP0}": "like"}, "SELECT name FROM physician WHERE POSITION LIKE '%senior%'": {"{VALUE0}": "senior", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "position", "{OP0}": "like"}, "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'": {"{VALUE0}": "quo", "{COLUMN0}": "organisation_type_description", "{COLUMN1}": "organisation_type", "{COLUMN2}": "organisation_details", "{TABLE0}": "organisation types", "{TABLE1}": "organisations", "{OP0}": "="}, "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\"": {"{VALUE0}": "university of pennsylvania", "{COLUMN0}": "title", "{COLUMN1}": "paperid", "{COLUMN2}": "instid", "{COLUMN3}": "name", "{TABLE0}": "papers", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "=", "{AGG0}": "count"}, "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"Defender\"": {"{VALUE0}": "defender", "{COLUMN0}": "draft_pick_number", "{COLUMN1}": "draft_class", "{COLUMN2}": "position", "{TABLE0}": "match season", "{OP0}": "="}, "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"": {"{VALUE0}": "defender", "{COLUMN0}": "official_native_language", "{COLUMN1}": "country", "{COLUMN2}": "country_id", "{COLUMN3}": "position", "{TABLE0}": "match season", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000": {"{VALUE6}": "100000", "{COLUMN0}": "delegate", "{COLUMN1}": "county_id", "{COLUMN2}": "district", "{COLUMN3}": "population", "{TABLE0}": "county", "{TABLE1}": "election", "{OP0}": "<"}, "SELECT max(elevation) FROM airports WHERE country  =  'Iceland'": {"{VALUE0}": "iceland", "{COLUMN0}": "elevation", "{COLUMN1}": "country", "{TABLE0}": "airports", "{OP0}": "=", "{AGG0}": "max"}, "SELECT bname FROM bank WHERE state  =  'New York'": {"{VALUE0}": "new york", "{COLUMN0}": "bname", "{COLUMN1}": "state", "{TABLE0}": "bank", "{OP0}": "="}, "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"Julio\"": {"{VALUE0}": "julio", "{COLUMN0}": "course_name", "{COLUMN1}": "author_id", "{COLUMN2}": "personal_name", "{TABLE0}": "course authors and tutors", "{TABLE1}": "courses", "{OP0}": "="}, "SELECT count(*) FROM member WHERE Membership_card  =  'Black'": {"{VALUE0}": "black", "{COLUMN0}": "membership_card", "{TABLE0}": "member", "{OP0}": "=", "{AGG0}": "count"}, "SELECT Name FROM editor WHERE Age  >  25": {"{VALUE0}": "25", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "editor", "{OP0}": ">"}, "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;": {"{VALUE0}": "1", "{COLUMN0}": "document_status_description", "{COLUMN1}": "document_status_code", "{COLUMN2}": "document_id", "{TABLE0}": "reference document status", "{TABLE1}": "documents", "{OP0}": "="}, "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  'PUR'": {"{VALUE0}": "pur", "{COLUMN0}": "transaction_id", "{COLUMN1}": "transaction_type_code", "{TABLE0}": "transactions", "{OP0}": "="}, "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10": {"{VALUE6}": "10", "{COLUMN0}": "address_details", "{COLUMN1}": "address_id", "{COLUMN2}": "customer_id", "{TABLE0}": "addresses", "{TABLE1}": "customer addresses", "{OP0}": "="}, "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006": {"{VALUE0}": "2006", "{COLUMN0}": "city", "{COLUMN1}": "opening_year", "{TABLE0}": "stadium", "{OP0}": "<", "{AGG0}": "count"}, "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\"": {"{VALUE0}": "hopkins student enterprises", "{COLUMN0}": "age", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "clubname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"East\"": {"{VALUE0}": "east", "{COLUMN0}": "police_force", "{COLUMN1}": "location", "{TABLE0}": "county public safety", "{OP0}": "!="}, "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1": {"{VALUE1}": "1", "{COLUMN0}": "address", "{COLUMN1}": "address_id", "{COLUMN2}": "store_id", "{TABLE0}": "store", "{OP0}": "="}, "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'": {"{VALUE0}": "gone with the wind", "{COLUMN0}": "name", "{COLUMN1}": "mid", "{COLUMN2}": "rid", "{COLUMN3}": "title", "{TABLE0}": "rating", "{TABLE1}": "movie", "{TABLE2}": "reviewer", "{OP0}": "="}, "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'": {"{VALUE0}": "heffington", "{COLUMN0}": "dept_name", "{COLUMN1}": "prof_office", "{COLUMN2}": "emp_num", "{COLUMN3}": "dept_code", "{COLUMN4}": "emp_lname", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{OP0}": "="}, "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'": {"{VALUE0}": "man", "{COLUMN0}": "first_name", "{COLUMN1}": "email_address", "{TABLE0}": "teachers", "{OP0}": "like"}, "SELECT DISTINCT classroom FROM list WHERE grade  =  5": {"{VALUE0}": "5", "{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list", "{OP0}": "="}, "SELECT eid ,  salary FROM Employee WHERE name  =  'Mark Young'": {"{VALUE0}": "mark young", "{COLUMN0}": "eid", "{COLUMN1}": "salary", "{COLUMN2}": "name", "{TABLE0}": "employee", "{OP0}": "="}, "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"": {"{VALUE0}": "columbus crew", "{COLUMN0}": "player", "{COLUMN1}": "years_played", "{COLUMN2}": "team", "{COLUMN3}": "team_id", "{COLUMN4}": "name", "{OP0}": "="}, "SELECT DName FROM DEPARTMENT WHERE Building  =  \"Mergenthaler\"": {"{VALUE0}": "mergenthaler", "{COLUMN0}": "dname", "{COLUMN1}": "building", "{TABLE0}": "department", "{OP0}": "="}, "SELECT count(*) FROM address WHERE district  =  'California'": {"{VALUE0}": "california", "{COLUMN0}": "address", "{COLUMN1}": "district", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"Schuster\"": {"{VALUE0}": "schuster", "{COLUMN0}": "text_of_notes", "{COLUMN1}": "teacher_id", "{COLUMN2}": "last_name", "{TABLE0}": "assessment notes", "{TABLE1}": "teachers", "{OP0}": "="}, "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15": {"{VALUE0}": "15", "{COLUMN0}": "location", "{COLUMN1}": "number_of_platforms", "{TABLE0}": "station", "{OP0}": ">="}, "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'": {"{VALUE0}": "history", "{COLUMN0}": "emp_lname", "{COLUMN1}": "prof_office", "{COLUMN2}": "emp_num", "{COLUMN3}": "dept_code", "{COLUMN4}": "dept_name", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{OP0}": "="}, "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"Fall\"": {"{VALUE0}": "fall", "{COLUMN0}": "secretary_vote", "{COLUMN1}": "election_cycle", "{TABLE0}": "voting record", "{OP0}": "="}, "SELECT count(*) FROM WINE WHERE Winery  =  \"Robert Biale\"": {"{VALUE0}": "robert biale", "{COLUMN0}": "winery", "{TABLE0}": "wine", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'": {"{VALUE0}": "z", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "city", "{COLUMN3}": "department_id", "{COLUMN4}": "location_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{TABLE2}": "locations", "{OP0}": "like"}, "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"": {"{VALUE0}": "rob dinning", "{COLUMN0}": "marketing_region_name", "{COLUMN1}": "marketing_region_code", "{COLUMN2}": "store_name", "{TABLE0}": "marketing regions", "{TABLE1}": "stores", "{OP0}": "="}, "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500": {"{VALUE6}": "500", "{COLUMN0}": "good_or_bad_customer", "{COLUMN1}": "coupon_id", "{COLUMN2}": "coupon_amount", "{TABLE0}": "customers", "{TABLE1}": "discount coupons", "{OP0}": "="}, "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100": {"{VALUE6}": "100", "{COLUMN0}": "investor_details", "{COLUMN1}": "investor_id", "{COLUMN2}": "share_count", "{TABLE0}": "investors", "{TABLE1}": "transactions", "{OP0}": ">"}, "SELECT f_id FROM files WHERE formats  =  \"mp3\"": {"{VALUE0}": "mp3", "{COLUMN0}": "f_id", "{COLUMN1}": "formats", "{TABLE0}": "files", "{OP0}": "="}, "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;": {"{VALUE0}": "7", "{COLUMN0}": "draft_details", "{COLUMN1}": "document_id", "{TABLE0}": "document drafts", "{OP0}": "="}, "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30": {"{VALUE0}": "30", "{COLUMN0}": "position", "{COLUMN1}": "age", "{TABLE0}": "pilot", "{OP0}": ">"}, "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'": {"{VALUE0}": "kenyatta kuhn", "{COLUMN0}": "event_id", "{COLUMN1}": "participant_id", "{COLUMN2}": "participant_details", "{TABLE0}": "events", "{TABLE1}": "participants in events", "{TABLE2}": "participants", "{OP0}": "="}, "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'": {"{VALUE0}": "italy", "{COLUMN0}": "dst_apid", "{COLUMN1}": "apid", "{COLUMN2}": "country", "{TABLE0}": "routes", "{TABLE1}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "SELECT StuID FROM Student WHERE Advisor  =  1121": {"{VALUE0}": "1121", "{COLUMN0}": "stuid", "{COLUMN1}": "advisor", "{TABLE0}": "student", "{OP0}": "="}, "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Chris Jackson'": {"{VALUE0}": "chris jackson", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{COLUMN2}": "rid", "{COLUMN3}": "name", "{TABLE0}": "movie", "{TABLE1}": "rating", "{TABLE2}": "reviewer", "{OP0}": "="}, "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"": {"{VALUE0}": "white", "{COLUMN0}": "product_name", "{COLUMN1}": "color_code", "{COLUMN2}": "color_description", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{OP0}": "="}, "SELECT Hispanic FROM city WHERE Black  >  10": {"{VALUE0}": "10", "{COLUMN0}": "hispanic", "{COLUMN1}": "black", "{TABLE0}": "city", "{OP0}": ">"}, "SELECT DISTINCT classroom FROM list WHERE grade  =  4": {"{VALUE0}": "4", "{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list", "{OP0}": "="}, "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '%ee%'": {"{VALUE0}": "ee", "{COLUMN0}": "balance", "{COLUMN1}": "custid", "{COLUMN2}": "name", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{OP0}": "like"}, "SELECT campus FROM campuses WHERE LOCATION  =  \"Chico\"": {"{VALUE0}": "chico", "{COLUMN0}": "campus", "{COLUMN1}": "location", "{TABLE0}": "campuses", "{OP0}": "="}, "SELECT Song FROM volume WHERE Weeks_on_Top  >  1": {"{VALUE0}": "1", "{COLUMN0}": "song", "{COLUMN1}": "volume", "{COLUMN2}": "weeks_on_top", "{OP0}": ">"}, "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"": {"{VALUE0}": "fanny", "{COLUMN0}": "date_of_notes", "{COLUMN1}": "student_id", "{COLUMN2}": "first_name", "{TABLE0}": "assessment notes", "{TABLE1}": "students", "{OP0}": "="}, "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  'Austin'": {"{VALUE0}": "austin", "{COLUMN0}": "revenue", "{COLUMN1}": "headquarter", "{TABLE0}": "manufacturers", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT count(*) FROM medicine WHERE FDA_approved  =  'No'": {"{VALUE0}": "no", "{COLUMN0}": "fda_approved", "{TABLE0}": "medicine", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\"": {"{VALUE0}": "china", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "country", "{TABLE0}": "people", "{TABLE1}": "perpetrator", "{OP0}": "!="}, "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000": {"{VALUE6}": "50000", "{COLUMN0}": "delegate", "{COLUMN1}": "county_id", "{COLUMN2}": "district", "{COLUMN3}": "population", "{TABLE0}": "county", "{TABLE1}": "election", "{OP0}": ">", "{AGG0}": "count"}, "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100": {"{VALUE0}": "100", "{COLUMN0}": "start_station_name", "{COLUMN1}": "duration", "{TABLE0}": "trip", "{OP0}": "<"}, "SELECT * FROM Albums WHERE YEAR  =  2010": {"{VALUE0}": "2010", "{COLUMN0}": "year", "{TABLE0}": "albums", "{OP0}": "="}, "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"": {"{VALUE0}": "metallica", "{COLUMN0}": "artistid", "{COLUMN1}": "name", "{TABLE0}": "album", "{TABLE1}": "artist", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005": {"{VALUE0}": "2005", "{COLUMN0}": "year", "{TABLE0}": "exhibition", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'": {"{VALUE0}": "research", "{COLUMN0}": "grant_amount", "{COLUMN1}": "organisation_id", "{COLUMN2}": "organisation_type", "{COLUMN3}": "organisation_type_description", "{TABLE0}": "grants", "{TABLE1}": "organisations", "{TABLE2}": "organisation types", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\"": {"{VALUE0}": "bootup baltimore", "{COLUMN0}": "position", "{COLUMN1}": "clubid", "{COLUMN2}": "clubname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'": {"{VALUE0}": "elsa", "{COLUMN0}": "address", "{COLUMN1}": "address_id", "{COLUMN2}": "first_name", "{TABLE0}": "staff", "{OP0}": "="}, "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"": {"{VALUE0}": "cumin", "{COLUMN0}": "product_category_code", "{COLUMN1}": "typical_buying_price", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{OP0}": "="}, "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"": {"{VALUE0}": "3452", "{COLUMN0}": "order_id", "{COLUMN1}": "shipment_tracking_number", "{TABLE0}": "shipments", "{OP0}": "="}, "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'": {"{VALUE0}": "cctv", "{COLUMN0}": "share_in_percent", "{COLUMN1}": "owner", "{TABLE0}": "channel", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT Census_Ranking FROM city WHERE Status !=  \"Village\"": {"{VALUE0}": "village", "{COLUMN0}": "census_ranking", "{COLUMN1}": "status", "{TABLE0}": "city", "{OP0}": "!="}, "SELECT city ,  state FROM bank WHERE bname  =  'morningside'": {"{VALUE0}": "morningside", "{COLUMN0}": "city", "{COLUMN1}": "state", "{COLUMN2}": "bname", "{TABLE0}": "bank", "{OP0}": "="}, "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"": {"{VALUE0}": "vincent", "{COLUMN0}": "name", "{COLUMN1}": "tourist_attraction_id", "{COLUMN2}": "tourist_id", "{COLUMN3}": "tourist_details", "{TABLE0}": "tourist attractions", "{TABLE1}": "visits", "{TABLE2}": "visitors", "{OP0}": "="}, "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"": {"{VALUE0}": "biology", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_lname", "{COLUMN2}": "dept_code", "{COLUMN3}": "emp_num", "{COLUMN4}": "dept_name", "{TABLE0}": "professor", "{TABLE1}": "department", "{TABLE2}": "employee", "{OP0}": "="}, "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"": {"{VALUE0}": "miramichi", "{COLUMN0}": "product", "{COLUMN1}": "product_id", "{COLUMN2}": "store_id", "{COLUMN3}": "store_name", "{TABLE0}": "store product", "{TABLE1}": "store", "{OP0}": "="}, "SELECT email FROM user_profiles WHERE name  =  'Mary'": {"{VALUE0}": "mary", "{COLUMN0}": "email", "{COLUMN1}": "name", "{TABLE0}": "user profiles", "{OP0}": "="}, "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  'Night'": {"{VALUE0}": "night", "{COLUMN0}": "program_id", "{COLUMN1}": "time_of_day", "{TABLE0}": "broadcast", "{OP0}": "=", "{AGG0}": "count"}, "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"": {"{VALUE0}": "catnip", "{COLUMN0}": "color_description", "{COLUMN1}": "color_code", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{OP0}": "="}, "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'": {"{VALUE0}": "public", "{COLUMN0}": "school", "{COLUMN1}": "location", "{COLUMN2}": "affiliation", "{TABLE0}": "university", "{OP0}": "="}, "SELECT count(*) FROM inventory WHERE store_id  =  1": {"{VALUE0}": "1", "{COLUMN0}": "store_id", "{TABLE0}": "inventory", "{OP0}": "=", "{AGG0}": "count"}, "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005": {"{VALUE0}": "2005", "{COLUMN0}": "capacity", "{COLUMN1}": "opening_year", "{TABLE0}": "stadium", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";": {"{VALUE0}": "traditional", "{COLUMN0}": "roomname", "{COLUMN1}": "bedtype", "{COLUMN2}": "decor", "{TABLE0}": "rooms", "{OP0}": "="}, "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"": {"{VALUE0}": "chervil", "{COLUMN0}": "color_code", "{COLUMN1}": "color_description", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{OP0}": "="}, "SELECT count(*) FROM customers WHERE state = \"CA\";": {"{VALUE0}": "ca", "{COLUMN0}": "state", "{TABLE0}": "customers", "{OP0}": "=", "{AGG0}": "count"}, "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'": {"{VALUE0}": "australia", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "swimmer_id", "{COLUMN3}": "event_id", "{COLUMN4}": "stadium_id", "{COLUMN5}": "nationality", "{TABLE0}": "swimmer", "{TABLE1}": "record", "{TABLE2}": "event", "{TABLE3}": "stadium", "{OP0}": "="}, "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'": {"{VALUE0}": "smith hall", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "dormid", "{COLUMN3}": "dorm_name", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{OP0}": "="}, "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989": {"{VALUE0}": "1989", "{COLUMN0}": "book_title", "{COLUMN1}": "author_or_editor", "{COLUMN2}": "year", "{TABLE0}": "book club", "{OP0}": ">"}, "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1": {"{VALUE0}": "1", "{COLUMN0}": "actual_delivery_date", "{COLUMN1}": "order_id", "{COLUMN2}": "order_quantity", "{TABLE0}": "customer orders", "{TABLE1}": "order items", "{OP0}": "="}, "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\"": {"{VALUE0}": "1978-06-26", "{COLUMN0}": "problem_id", "{COLUMN1}": "date_problem_reported", "{TABLE0}": "problems", "{OP0}": ">"}, "SELECT count(*) FROM club_rank WHERE Total  <  10": {"{VALUE0}": "10", "{COLUMN0}": "total", "{TABLE0}": "club rank", "{OP0}": "<", "{AGG0}": "count"}, "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"": {"{VALUE0}": "tillman ernser", "{COLUMN0}": "active_to_date", "{COLUMN1}": "customer_id", "{COLUMN2}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customer contact channels", "{OP0}": "=", "{AGG0}": "max"}, "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\"": {"{VALUE0}": "food", "{COLUMN0}": "allergy", "{COLUMN1}": "allergytype", "{TABLE0}": "has allergy", "{TABLE1}": "allergy type", "{OP0}": "=", "{AGG0}": "count"}, "SELECT location_code FROM Ref_locations WHERE location_name  =  \"Canada\"": {"{VALUE0}": "canada", "{COLUMN0}": "location_code", "{COLUMN1}": "location_name", "{TABLE0}": "reference locations", "{OP0}": "="}, "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall'": {"{VALUE0}": "smith hall", "{COLUMN0}": "amenity_name", "{COLUMN1}": "dormid", "{COLUMN2}": "amenid", "{COLUMN3}": "dorm_name", "{TABLE0}": "dorm", "{TABLE1}": "has amenity", "{TABLE2}": "dorm amenity", "{OP0}": "="}, "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"Heilo\"": {"{VALUE0}": "heilo", "{COLUMN0}": "instrument", "{COLUMN1}": "bandmateid", "{COLUMN2}": "id", "{COLUMN3}": "lastname", "{TABLE0}": "instruments", "{TABLE1}": "band", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM addresses WHERE state_province_county  =  \"Colorado\"": {"{VALUE0}": "colorado", "{COLUMN0}": "state_province_county", "{TABLE0}": "addresses", "{OP0}": "=", "{AGG0}": "count"}, "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"": {"{VALUE0}": "flat", "{COLUMN0}": "apt_number", "{COLUMN1}": "apt_type_code", "{TABLE0}": "apartments", "{OP0}": "="}, "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"Marianne\"": {"{VALUE0}": "marianne", "{COLUMN0}": "title", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "songid", "{COLUMN4}": "firstname", "{TABLE0}": "performance", "{TABLE1}": "band", "{TABLE2}": "songs", "{OP0}": "="}, "SELECT role_description FROM ROLES WHERE role_name  =  \"Proof Reader\"": {"{VALUE0}": "proof reader", "{COLUMN0}": "role_description", "{COLUMN1}": "role_name", "{TABLE0}": "roles", "{OP0}": "="}, "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"ORG\"": {"{VALUE0}": "org", "{COLUMN0}": "budget_type_description", "{COLUMN1}": "budget_type_code", "{TABLE0}": "reference budget codes", "{OP0}": "="}, "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  'QM-261'": {"{VALUE0}": "qm-261", "{COLUMN0}": "crs_credit", "{COLUMN1}": "crs_description", "{COLUMN2}": "crs_code", "{TABLE0}": "course", "{OP0}": "="}, "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"": {"{VALUE0}": "hot", "{COLUMN0}": "product_id", "{COLUMN1}": "characteristic_id", "{COLUMN2}": "characteristic_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520": {"{VALUE7}": "520", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "facid", "{COLUMN3}": "dno", "{TABLE0}": "faculty", "{TABLE1}": "member of", "{OP0}": "="}, "SELECT count(*) FROM Rooms WHERE bedType  =  \"King\";": {"{VALUE0}": "king", "{COLUMN0}": "bedtype", "{TABLE0}": "rooms", "{OP0}": "=", "{AGG0}": "count"}, "SELECT text FROM tweets WHERE text LIKE '%intern%'": {"{VALUE0}": "intern", "{COLUMN0}": "text", "{TABLE0}": "tweets", "{OP0}": "like"}, "SELECT count(*) FROM airports WHERE name LIKE '%International%'": {"{VALUE0}": "international", "{COLUMN0}": "name", "{TABLE0}": "airports", "{OP0}": "like", "{AGG0}": "count"}, "SELECT product_category_code FROM products WHERE product_name  =  \"flax\"": {"{VALUE0}": "flax", "{COLUMN0}": "product_category_code", "{COLUMN1}": "product_name", "{TABLE0}": "products", "{OP0}": "="}, "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"": {"{VALUE0}": "sesame", "{COLUMN0}": "characteristic_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{COLUMN3}": "product_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM member WHERE address != 'Hartford'": {"{VALUE0}": "hartford", "{COLUMN0}": "address", "{TABLE0}": "member", "{OP0}": "!=", "{AGG0}": "count"}, "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000": {"{VALUE6}": "2000", "{COLUMN0}": "other_item_details", "{COLUMN1}": "product_id", "{COLUMN2}": "product_price", "{TABLE0}": "order items", "{TABLE1}": "products", "{OP0}": ">"}, "SELECT clubdesc FROM club WHERE clubname  =  \"Pen and Paper Gaming\"": {"{VALUE0}": "pen and paper gaming", "{COLUMN0}": "clubdesc", "{COLUMN1}": "clubname", "{TABLE0}": "club", "{OP0}": "="}, "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"": {"{VALUE0}": "blackville", "{COLUMN0}": "headquartered_city", "{COLUMN1}": "store_id", "{COLUMN2}": "district_id", "{COLUMN3}": "store_name", "{TABLE0}": "store", "{TABLE1}": "store district", "{TABLE2}": "district", "{OP0}": "="}, "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  'Mortgages'": {"{VALUE0}": "mortgages", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "loan_type", "{TABLE0}": "customer", "{TABLE1}": "loan", "{OP0}": "="}, "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"Indonesia\"": {"{VALUE0}": "indonesia", "{COLUMN0}": "player", "{COLUMN1}": "country", "{COLUMN2}": "country_id", "{COLUMN3}": "country_name", "{TABLE0}": "match season", "{OP0}": "="}, "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"": {"{VALUE0}": "spices", "{COLUMN0}": "product_name", "{COLUMN1}": "product_category_code", "{TABLE0}": "products", "{OP0}": "="}, "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'": {"{VALUE0}": "yes", "{COLUMN0}": "age", "{COLUMN1}": "head_id", "{COLUMN2}": "temporary_acting", "{TABLE0}": "management", "{TABLE1}": "head", "{OP0}": "="}, "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"": {"{VALUE0}": "rodrick heaney", "{COLUMN0}": "order_quantity", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_id", "{COLUMN3}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{TABLE2}": "order items", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT customer_name FROM customers WHERE payment_method != 'Cash'": {"{VALUE0}": "cash", "{COLUMN0}": "customer_name", "{COLUMN1}": "payment_method", "{TABLE0}": "customers", "{OP0}": "!="}, "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"red jeans\"": {"{VALUE0}": "red jeans", "{COLUMN0}": "supplier_name", "{COLUMN1}": "supplier_phone", "{COLUMN2}": "supplier_id", "{COLUMN3}": "product_id", "{COLUMN4}": "product_name", "{TABLE0}": "suppliers", "{TABLE1}": "product suppliers", "{TABLE2}": "products", "{OP0}": "="}, "SELECT rID FROM Rating WHERE stars != 4": {"{VALUE0}": "4", "{COLUMN0}": "rid", "{COLUMN1}": "stars", "{TABLE0}": "rating", "{OP0}": "!="}, "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'": {"{VALUE0}": "sint", "{COLUMN0}": "outcome_description", "{COLUMN1}": "outcome_code", "{COLUMN2}": "project_id", "{COLUMN3}": "project_details", "{TABLE0}": "research outcomes", "{TABLE1}": "project outcomes", "{TABLE2}": "projects", "{OP0}": "="}, "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"": {"{VALUE0}": "uk gallery", "{COLUMN0}": "other_details", "{COLUMN1}": "location_name", "{TABLE0}": "locations", "{OP0}": "="}, "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'": {"{VALUE0}": "saving", "{COLUMN0}": "cust_name", "{COLUMN1}": "acc_type", "{TABLE0}": "customer", "{OP0}": "="}, "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'": {"{VALUE0}": "john f kennedy international airport", "{COLUMN0}": "apid", "{COLUMN1}": "dst_apid", "{COLUMN2}": "name", "{TABLE0}": "airports", "{TABLE1}": "routes", "{OP0}": "=", "{AGG0}": "count"}, "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"": {"{VALUE0}": "bootup baltimore", "{COLUMN0}": "lname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "clubname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "="}, "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"": {"{VALUE0}": "sale", "{COLUMN0}": "date_of_transaction", "{COLUMN1}": "transaction_type_code", "{TABLE0}": "transactions", "{OP0}": "="}, "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"": {"{VALUE0}": "edmonton", "{COLUMN0}": "birthdate", "{COLUMN1}": "city", "{TABLE0}": "employee", "{OP0}": "="}, "SELECT Name FROM TRACK WHERE Name LIKE '%you%'": {"{VALUE0}": "you", "{COLUMN0}": "name", "{TABLE0}": "track", "{OP0}": "like"}, "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  'ExxonMobil'": {"{VALUE0}": "exxonmobil", "{COLUMN0}": "manager_name", "{COLUMN1}": "company", "{COLUMN2}": "company_id", "{COLUMN3}": "station_id", "{TABLE0}": "station company", "{TABLE1}": "gas station", "{OP0}": "="}, "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"": {"{VALUE0}": "suite 634", "{COLUMN0}": "booking_status_code", "{COLUMN1}": "apt_id", "{COLUMN2}": "apt_number", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments", "{OP0}": "="}, "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"": {"{VALUE0}": "walk", "{COLUMN0}": "shop_details", "{COLUMN1}": "shop_id", "{COLUMN2}": "tourist_attraction_id", "{COLUMN3}": "how_to_get_there", "{TABLE0}": "shops", "{TABLE1}": "tourist attractions", "{OP0}": "="}, "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"Heilo\"": {"{VALUE0}": "heilo", "{COLUMN0}": "title", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "songid", "{COLUMN4}": "lastname", "{TABLE0}": "performance", "{TABLE1}": "band", "{TABLE2}": "songs", "{OP0}": "="}, "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"": {"{VALUE0}": "los angeles", "{COLUMN0}": "campus", "{COLUMN1}": "county", "{TABLE0}": "campuses", "{OP0}": "="}, "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"": {"{VALUE0}": "confirmed", "{COLUMN0}": "apt_number", "{COLUMN1}": "apt_id", "{COLUMN2}": "booking_status_code", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments", "{OP0}": "="}, "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4": {"{VALUE0}": "4", "{COLUMN0}": "rid", "{COLUMN1}": "stars", "{TABLE0}": "rating", "{OP0}": "="}, "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"": {"{VALUE0}": "acct-211", "{COLUMN0}": "prof_num", "{COLUMN1}": "crs_code", "{TABLE0}": "class", "{OP0}": "=", "{AGG0}": "count"}, "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\"": {"{VALUE0}": "bus", "{COLUMN0}": "name", "{COLUMN1}": "how_to_get_there", "{TABLE0}": "tourist attractions", "{OP0}": "="}, "SELECT count(*) FROM airlines WHERE country  =  'Russia'": {"{VALUE0}": "russia", "{COLUMN0}": "country", "{TABLE0}": "airlines", "{OP0}": "=", "{AGG0}": "count"}, "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"x\"": {"{VALUE0}": "x", "{COLUMN0}": "location_name", "{COLUMN1}": "location_description", "{COLUMN2}": "location_code", "{TABLE0}": "reference locations", "{OP0}": "="}, "SELECT song_name FROM song WHERE languages  =  \"english\"": {"{VALUE0}": "english", "{COLUMN0}": "song_name", "{COLUMN1}": "languages", "{TABLE0}": "song", "{OP0}": "="}, "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1": {"{VALUE0}": "1", "{COLUMN0}": "physician", "{COLUMN1}": "department", "{COLUMN2}": "primaryaffiliation", "{TABLE0}": "affiliated with", "{OP0}": "="}, "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'": {"{VALUE0}": "bob", "{COLUMN0}": "friend", "{COLUMN1}": "name", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "="}, "SELECT count(*) FROM storm WHERE Number_Deaths  >  0": {"{VALUE0}": "0", "{COLUMN0}": "number_deaths", "{TABLE0}": "storm", "{OP0}": ">", "{AGG0}": "count"}, "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"": {"{VALUE0}": "gmail.com", "{COLUMN0}": "email", "{TABLE0}": "customer", "{OP0}": "like", "{AGG0}": "count"}, "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"China\"": {"{VALUE0}": "china", "{COLUMN0}": "marketing_region_descriptrion", "{COLUMN1}": "marketing_region_name", "{TABLE0}": "marketing regions", "{OP0}": "="}, "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"": {"{VALUE0}": "english", "{COLUMN0}": "course_id", "{COLUMN1}": "course_name", "{TABLE0}": "courses", "{TABLE1}": "student course attendance", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'": {"{VALUE0}": "new york city", "{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "city", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "="}, "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";": {"{VALUE0}": "usps", "{COLUMN0}": "shipping_agent_code", "{COLUMN1}": "shipping_agent_name", "{TABLE0}": "reference shipping agents", "{TABLE1}": "documents", "{OP0}": "=", "{AGG0}": "count"}, "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  'Good Customer'": {"{VALUE0}": "good customer", "{COLUMN0}": "date_of_birth", "{COLUMN1}": "customer_status_code", "{TABLE0}": "customers", "{OP0}": "="}, "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"keyboard\"": {"{VALUE0}": "keyboard", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_id", "{COLUMN3}": "product_id", "{COLUMN4}": "product_name", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{TABLE2}": "order items", "{TABLE3}": "products", "{OP0}": "="}, "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"Cancelled\"": {"{VALUE0}": "cancelled", "{COLUMN0}": "customer_id", "{COLUMN1}": "order_status", "{TABLE0}": "customer orders", "{OP0}": "=", "{AGG0}": "count"}, "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"": {"{VALUE0}": "london", "{COLUMN0}": "domestic_passengers", "{COLUMN1}": "airport_name", "{TABLE0}": "airport", "{OP0}": "like", "{AGG0}": "sum"}, "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'": {"{VALUE0}": "houston", "{COLUMN0}": "dname", "{COLUMN1}": "dnumber", "{COLUMN2}": "dlocation", "{TABLE0}": "department", "{TABLE1}": "department locations", "{OP0}": "="}, "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998": {"{VALUE4}": "1998", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "player_id", "{COLUMN3}": "year", "{TABLE0}": "player", "{TABLE1}": "all star", "{OP0}": "="}, "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"": {"{VALUE0}": "division 1", "{COLUMN0}": "nickname", "{COLUMN1}": "division", "{TABLE0}": "school details", "{OP0}": "!="}, "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'": {"{VALUE0}": "graztevski", "{COLUMN0}": "emp_num", "{COLUMN1}": "prof_num", "{COLUMN2}": "emp_lname", "{TABLE0}": "employee", "{TABLE1}": "class", "{OP0}": "=", "{AGG0}": "count"}, "SELECT StuID FROM Student WHERE Sex  =  'M'": {"{VALUE0}": "m", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{TABLE0}": "student", "{OP0}": "="}, "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"": {"{VALUE0}": "delivered", "{COLUMN0}": "customer_name", "{COLUMN1}": "order_date", "{COLUMN2}": "customer_id", "{COLUMN3}": "order_status", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{OP0}": "="}, "SELECT dept_address FROM department WHERE dept_name  =  'History'": {"{VALUE0}": "history", "{COLUMN0}": "dept_address", "{COLUMN1}": "dept_name", "{TABLE0}": "department", "{OP0}": "="}, "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"": {"{VALUE0}": "ebba", "{COLUMN0}": "employee_id", "{COLUMN1}": "employee_name", "{TABLE0}": "employees", "{OP0}": "="}, "SELECT campus FROM campuses WHERE YEAR  <  1800": {"{VALUE0}": "1800", "{COLUMN0}": "campus", "{COLUMN1}": "year", "{TABLE0}": "campuses", "{OP0}": "<"}, "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"Spices\"": {"{VALUE0}": "spices", "{COLUMN0}": "product_category_description", "{COLUMN1}": "product_category_code", "{TABLE0}": "reference product categories", "{OP0}": "="}, "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"": {"{VALUE0}": "boeing 737-800", "{COLUMN0}": "name", "{COLUMN1}": "eid", "{COLUMN2}": "aid", "{TABLE0}": "employee", "{TABLE1}": "certificate", "{TABLE2}": "aircraft", "{OP0}": "="}, "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"": {"{VALUE0}": "nameless ,  painless", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "authid", "{COLUMN3}": "paperid", "{COLUMN4}": "title", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{OP0}": "="}, "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"": {"{VALUE0}": "ashley", "{COLUMN0}": "customer_phone", "{COLUMN1}": "customer_name", "{TABLE0}": "performers", "{OP0}": "="}, "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"": {"{VALUE0}": "kyle", "{COLUMN0}": "apt_type_code", "{COLUMN1}": "apt_number", "{COLUMN2}": "building_id", "{COLUMN3}": "building_manager", "{TABLE0}": "apartment buildings", "{TABLE1}": "apartments", "{OP0}": "="}, "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"": {"{VALUE0}": "south", "{COLUMN0}": "dept_store_chain_id", "{COLUMN1}": "dept_store_chain_name", "{TABLE0}": "department stores", "{TABLE1}": "department store chain", "{OP0}": "=", "{AGG0}": "count"}, "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"": {"{VALUE0}": "english", "{COLUMN0}": "official_native_language", "{COLUMN1}": "country", "{OP0}": "like"}, "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"": {"{VALUE0}": "party", "{COLUMN0}": "organization_name", "{TABLE0}": "organizations", "{OP0}": "like"}, "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'": {"{VALUE0}": "s", "{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "documents", "{TABLE1}": "documents with expenses", "{OP0}": "like"}, "SELECT count(*) FROM artist WHERE country  =  \"Bangladesh\"": {"{VALUE0}": "bangladesh", "{COLUMN0}": "country", "{TABLE0}": "artist", "{OP0}": "=", "{AGG0}": "count"}, "SELECT lastname FROM list WHERE classroom  =  111": {"{VALUE0}": "111", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{TABLE0}": "list", "{OP0}": "="}, "SELECT customer_id FROM customers WHERE customer_name LIKE \"%Diana%\"": {"{VALUE0}": "diana", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_name", "{TABLE0}": "customers", "{OP0}": "like"}, "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"": {"{VALUE0}": "murray", "{COLUMN0}": "catalog_publisher", "{TABLE0}": "catalogs", "{OP0}": "like"}, "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"Flash\"": {"{VALUE0}": "flash", "{COLUMN0}": "bandmate", "{COLUMN1}": "id", "{COLUMN2}": "songid", "{COLUMN3}": "title", "{TABLE0}": "performance", "{TABLE1}": "band", "{TABLE2}": "songs", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1": {"{VALUE1}": "1", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{COLUMN2}": "available_yn", "{TABLE0}": "view product availability", "{TABLE1}": "products for hire", "{OP0}": "="}, "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"animal\"": {"{VALUE0}": "animal", "{COLUMN0}": "allergytype", "{TABLE0}": "allergy type", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'": {"{VALUE0}": "roy", "{COLUMN0}": "roomname", "{COLUMN1}": "room", "{COLUMN2}": "roomid", "{COLUMN3}": "firstname", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{OP0}": "like"}, "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"": {"{VALUE0}": "5", "{COLUMN0}": "account_details", "{TABLE0}": "accounts", "{OP0}": "like", "{AGG0}": "max"}, "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"Cat\"": {"{VALUE0}": "cat", "{COLUMN0}": "allergytype", "{COLUMN1}": "allergy", "{TABLE0}": "allergy type", "{OP0}": "="}, "SELECT founder FROM manufacturers WHERE name LIKE 'S%'": {"{VALUE0}": "s", "{COLUMN0}": "founder", "{COLUMN1}": "name", "{TABLE0}": "manufacturers", "{OP0}": "like"}, "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'": {"{VALUE0}": "klr209", "{COLUMN0}": "class_code", "{COLUMN1}": "class_room", "{TABLE0}": "class", "{OP0}": "="}, "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"": {"{VALUE0}": "film", "{COLUMN0}": "location_name", "{TABLE0}": "locations", "{OP0}": "like"}, "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"": {"{VALUE0}": "diana", "{COLUMN0}": "date_opened", "{COLUMN1}": "date_closed", "{COLUMN2}": "customer_id", "{COLUMN3}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customers policies", "{OP0}": "like"}, "SELECT lname FROM authors WHERE fname  =  \"Amal\"": {"{VALUE0}": "amal", "{COLUMN0}": "lname", "{COLUMN1}": "fname", "{TABLE0}": "authors", "{OP0}": "="}, "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"": {"{VALUE0}": "4:", "{COLUMN0}": "duration", "{TABLE0}": "files", "{OP0}": "like", "{AGG0}": "count"}, "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'": {"{VALUE0}": "published", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{COLUMN2}": "outcome_code", "{COLUMN3}": "outcome_description", "{TABLE0}": "projects", "{TABLE1}": "project outcomes", "{TABLE2}": "research outcomes", "{OP0}": "like"}, "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"": {"{VALUE0}": "brenden", "{COLUMN0}": "building_address", "{COLUMN1}": "building_phone", "{COLUMN2}": "building_manager", "{TABLE0}": "apartment buildings", "{OP0}": "="}, "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"": {"{VALUE0}": "diana", "{COLUMN0}": "customer_details", "{TABLE0}": "customers", "{OP0}": "like"}, "SELECT count(*) FROM Video_games WHERE gtype  =  \"Massively multiplayer online game\"": {"{VALUE0}": "massively multiplayer online game", "{COLUMN0}": "gtype", "{TABLE0}": "video games", "{OP0}": "=", "{AGG0}": "count"}, "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0": {"{VALUE0}": "0", "{COLUMN0}": "blockcode", "{COLUMN1}": "room", "{COLUMN2}": "unavailable", "{OP0}": "="}, "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"": {"{VALUE0}": "ny", "{COLUMN0}": "location", "{TABLE0}": "university", "{OP0}": "like", "{AGG0}": "count"}, "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"Solveig\"": {"{VALUE0}": "solveig", "{COLUMN0}": "stageposition", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "firstname", "{TABLE0}": "performance", "{TABLE1}": "band", "{OP0}": "="}, "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id": {"{COLUMN0}": "customer_name", "{COLUMN1}": "city", "{COLUMN2}": "date_from", "{COLUMN3}": "date_to", "{COLUMN4}": "customer_id", "{COLUMN5}": "address_id", "{TABLE0}": "customer address history", "{TABLE1}": "customers", "{TABLE2}": "addresses"}, "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id": {"{COLUMN0}": "name", "{COLUMN1}": "title", "{COLUMN2}": "date", "{COLUMN3}": "price", "{COLUMN4}": "film_id", "{COLUMN5}": "cinema_id", "{TABLE0}": "schedule", "{TABLE1}": "film", "{TABLE2}": "cinema"}, "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID": {"{COLUMN0}": "code", "{COLUMN1}": "fate", "{COLUMN2}": "name", "{COLUMN3}": "ship_id", "{TABLE0}": "mission", "{TABLE1}": "ship"}, "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id": {"{COLUMN0}": "name", "{COLUMN1}": "building_id", "{COLUMN2}": "id", "{COLUMN3}": "company_id", "{TABLE0}": "office locations", "{TABLE1}": "buildings", "{TABLE2}": "companies"}, "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID": {"{COLUMN0}": "name", "{COLUMN1}": "course_id", "{COLUMN2}": "id", "{TABLE0}": "instructor", "{TABLE1}": "teaches"}, "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id": {"{COLUMN0}": "invoice_date", "{COLUMN1}": "order_id", "{COLUMN2}": "order_details", "{TABLE0}": "invoices", "{TABLE1}": "orders"}, "SELECT name ,  CLASS ,  rank FROM captain": {"{COLUMN0}": "name", "{COLUMN1}": "class", "{COLUMN2}": "rank", "{TABLE0}": "captain"}, "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id": {"{COLUMN0}": "name", "{COLUMN1}": "nationality", "{COLUMN2}": "id", "{COLUMN3}": "architect_id", "{TABLE0}": "architect", "{TABLE1}": "mill"}, "SELECT name FROM Reviewer UNION SELECT title FROM Movie": {"{COLUMN0}": "name", "{COLUMN1}": "title", "{TABLE0}": "reviewer", "{TABLE1}": "movie"}, "SELECT name ,  TIME ,  service FROM train": {"{COLUMN0}": "name", "{COLUMN1}": "time", "{COLUMN2}": "service", "{TABLE0}": "train"}, "SELECT name ,  LOCATION ,  number_of_platforms FROM station": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "number_of_platforms", "{TABLE0}": "station"}, "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID": {"{COLUMN0}": "name", "{COLUMN1}": "theme", "{COLUMN2}": "editor_id", "{COLUMN3}": "journal_id", "{TABLE0}": "journal committee", "{TABLE1}": "editor", "{TABLE2}": "journal"}, "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "employee_id", "{COLUMN3}": "country_name", "{COLUMN4}": "department_id", "{COLUMN5}": "location_id", "{COLUMN6}": "country_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{TABLE2}": "locations", "{TABLE3}": "countries"}, "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID": {"{COLUMN0}": "team", "{COLUMN1}": "location", "{COLUMN2}": "player", "{COLUMN3}": "school", "{COLUMN4}": "school_id"}, "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID": {"{COLUMN0}": "country", "{COLUMN1}": "year", "{COLUMN2}": "market_id", "{TABLE0}": "film market estimation", "{TABLE1}": "market"}, "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id": {"{COLUMN0}": "department_name", "{COLUMN1}": "city", "{COLUMN2}": "state_province", "{COLUMN3}": "location_id", "{TABLE0}": "departments", "{TABLE1}": "locations"}, "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID": {"{COLUMN0}": "shop_name", "{COLUMN1}": "carrier", "{COLUMN2}": "device", "{COLUMN3}": "device_id", "{COLUMN4}": "shop_id", "{TABLE0}": "stock", "{TABLE1}": "shop"}, "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id": {"{COLUMN0}": "statement_id", "{COLUMN1}": "statement_details", "{COLUMN2}": "account_details", "{TABLE0}": "accounts", "{TABLE1}": "statements"}, "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{COLUMN2}": "mountain_id", "{TABLE0}": "climber", "{TABLE1}": "mountain"}, "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code": {"{COLUMN0}": "document_type_name", "{COLUMN1}": "document_type_description", "{COLUMN2}": "document_date", "{COLUMN3}": "document_type_code", "{TABLE0}": "reference document types", "{TABLE1}": "documents"}, "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID": {"{COLUMN0}": "location", "{COLUMN1}": "nickname", "{COLUMN2}": "school", "{COLUMN3}": "school_id", "{TABLE0}": "school details"}, "SELECT Name ,  Score FROM WINE": {"{COLUMN0}": "name", "{COLUMN1}": "score", "{TABLE0}": "wine"}, "SELECT Company ,  Investor FROM entrepreneur": {"{COLUMN0}": "company", "{COLUMN1}": "investor", "{TABLE0}": "entrepreneur"}, "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code": {"{COLUMN0}": "budget_type_code", "{COLUMN1}": "budget_type_description", "{COLUMN2}": "document_id", "{TABLE0}": "documents with expenses", "{TABLE1}": "reference budget codes"}, "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code": {"{COLUMN0}": "stu_fname", "{COLUMN1}": "stu_lname", "{COLUMN2}": "crs_description", "{COLUMN3}": "stu_num", "{COLUMN4}": "class_code", "{COLUMN5}": "crs_code", "{TABLE0}": "student", "{TABLE1}": "enroll", "{TABLE2}": "class", "{TABLE3}": "course"}, "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote": {"{COLUMN0}": "major", "{COLUMN1}": "stuid", "{COLUMN2}": "treasurer_vote", "{TABLE0}": "student", "{TABLE1}": "voting record"}, "SELECT name ,  LOCATION FROM enzyme": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{TABLE0}": "enzyme"}, "SELECT Character ,  Duration FROM actor": {"{COLUMN0}": "character", "{COLUMN1}": "duration", "{TABLE0}": "actor"}, "SELECT DISTINCT classroom ,  grade FROM list": {"{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list"}, "SELECT Title ,  Issues FROM book": {"{COLUMN0}": "title", "{COLUMN1}": "issues", "{TABLE0}": "book"}, "SELECT Grape ,  Appelation FROM WINE": {"{COLUMN0}": "grape", "{COLUMN1}": "appelation", "{TABLE0}": "wine"}, "SELECT Name ,  Country FROM member": {"{COLUMN0}": "name", "{COLUMN1}": "country", "{TABLE0}": "member"}, "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id": {"{COLUMN0}": "date_moved_in", "{COLUMN1}": "customer_id", "{COLUMN2}": "customer_details", "{TABLE0}": "customers", "{TABLE1}": "customer events"}, "SELECT name ,  price FROM products": {"{COLUMN0}": "name", "{COLUMN1}": "price", "{TABLE0}": "products"}, "SELECT name ,  LOCATION FROM track": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{TABLE0}": "track"}, "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn": {"{COLUMN0}": "name", "{COLUMN1}": "appointment", "{COLUMN2}": "patient", "{COLUMN3}": "ssn"}, "SELECT name ,  open_date ,  organized_by FROM Church": {"{COLUMN0}": "name", "{COLUMN1}": "open_date", "{COLUMN2}": "organized_by", "{TABLE0}": "church"}, "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed": {"{COLUMN0}": "employee_id", "{COLUMN1}": "destroyed_by_employee_id", "{TABLE0}": "employees", "{TABLE1}": "documents to be destroyed"}, "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id": {"{COLUMN0}": "bname", "{COLUMN1}": "branch_id", "{TABLE0}": "bank", "{TABLE1}": "loan"}, "SELECT Order_Date FROM BOOKINGS": {"{COLUMN0}": "order_date", "{TABLE0}": "bookings"}, "SELECT min(rank) FROM review": {"{COLUMN0}": "rank", "{TABLE0}": "review", "{AGG0}": "min"}, "SELECT Name ,  Other_Details FROM Staff": {"{COLUMN0}": "name", "{COLUMN1}": "other_details", "{TABLE0}": "staff"}, "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK": {"{COLUMN0}": "milliseconds", "{TABLE0}": "track", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID": {"{COLUMN0}": "royal_family_details", "{COLUMN1}": "how_to_get_there", "{COLUMN2}": "royal_family_id", "{COLUMN3}": "tourist_attraction_id", "{TABLE0}": "royal family", "{TABLE1}": "tourist attractions"}, "SELECT DISTINCT main_industry FROM company": {"{COLUMN0}": "main_industry", "{COLUMN1}": "company"}, "SELECT DISTINCT LOCATION FROM track": {"{COLUMN0}": "location", "{TABLE0}": "track"}, "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player": {"{COLUMN0}": "hs", "{TABLE0}": "player", "{AGG0}": "avg", "{AGG1}": "max", "{AGG2}": "min"}, "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn": {"{COLUMN0}": "name", "{COLUMN1}": "scientist", "{COLUMN2}": "ssn", "{TABLE0}": "assigned to", "{TABLE1}": "scientists"}, "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track": {"{COLUMN0}": "seating", "{TABLE0}": "track", "{AGG0}": "min", "{AGG1}": "max", "{AGG2}": "avg"}, "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;": {"{COLUMN0}": "amount_outstanding", "{TABLE0}": "customers", "{AGG0}": "max", "{AGG1}": "min", "{AGG2}": "avg"}, "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "entrepreneur", "{TABLE1}": "people"}, "SELECT count(DISTINCT LOCATION) FROM perpetrator": {"{COLUMN0}": "location", "{TABLE0}": "perpetrator", "{AGG0}": "count"}, "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft": {"{COLUMN0}": "distance", "{TABLE0}": "aircraft", "{AGG0}": "min", "{AGG1}": "avg", "{AGG2}": "max"}, "SELECT avg(Enrollment) FROM school": {"{COLUMN0}": "enrollment", "{COLUMN1}": "school", "{AGG0}": "avg"}, "SELECT count(DISTINCT POSITION) FROM player": {"{COLUMN0}": "position", "{TABLE0}": "player", "{AGG0}": "count"}, "SELECT Name FROM GENRE": {"{COLUMN0}": "name", "{TABLE0}": "genre"}, "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets": {"{COLUMN0}": "asset_id", "{COLUMN1}": "asset_details", "{COLUMN2}": "asset_make", "{COLUMN3}": "asset_model", "{TABLE0}": "assets"}, "SELECT min(age) ,  avg(age) ,  max(age) FROM Student": {"{COLUMN0}": "age", "{TABLE0}": "student", "{AGG0}": "min", "{AGG1}": "avg", "{AGG2}": "max"}, "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq": {"{COLUMN0}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite"}, "SELECT calendar_date ,  day_Number FROM Ref_calendar": {"{COLUMN0}": "calendar_date", "{COLUMN1}": "day_number", "{TABLE0}": "reference calendar"}, "SELECT avg(hours) FROM projects": {"{COLUMN0}": "hours", "{TABLE0}": "projects", "{AGG0}": "avg"}, "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student": {"{COLUMN0}": "facid", "{COLUMN1}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student"}, "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate": {"{COLUMN0}": "eid", "{TABLE0}": "employee", "{TABLE1}": "certificate"}, "SELECT DISTINCT Theme FROM journal": {"{COLUMN0}": "theme", "{TABLE0}": "journal"}, "SELECT avg(price) FROM products": {"{COLUMN0}": "price", "{TABLE0}": "products", "{AGG0}": "avg"}, "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID": {"{COLUMN0}": "delegate", "{COLUMN1}": "party", "{COLUMN2}": "party_id", "{TABLE0}": "election"}, "SELECT DISTINCT TYPE FROM vocals": {"{COLUMN0}": "type", "{TABLE0}": "vocals"}, "SELECT sum(share_count) FROM TRANSACTIONS": {"{COLUMN0}": "share_count", "{TABLE0}": "transactions", "{AGG0}": "sum"}, "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID": {"{COLUMN0}": "white", "{COLUMN1}": "crime_rate", "{COLUMN2}": "county_id", "{TABLE0}": "city", "{TABLE1}": "county public safety"}, "SELECT Party_Theme ,  LOCATION FROM party": {"{COLUMN0}": "party_theme", "{COLUMN1}": "location", "{TABLE0}": "party"}, "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id": {"{COLUMN0}": "personal_name", "{COLUMN1}": "student_id", "{TABLE0}": "students", "{TABLE1}": "student course enrolment"}, "SELECT DISTINCT Venue FROM debate": {"{COLUMN0}": "venue", "{TABLE0}": "debate"}, "SELECT max(OMIM) FROM enzyme": {"{COLUMN0}": "omim", "{TABLE0}": "enzyme", "{AGG0}": "max"}, "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID": {"{COLUMN0}": "player_name", "{COLUMN1}": "coach_name", "{COLUMN2}": "coach_id", "{COLUMN3}": "player_id", "{TABLE0}": "player coach", "{TABLE1}": "coach", "{TABLE2}": "player"}, "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport": {"{COLUMN0}": "transit_passengers", "{TABLE0}": "airport", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id": {"{COLUMN0}": "fault_short_name", "{COLUMN1}": "skill_description", "{COLUMN2}": "part_fault_id", "{COLUMN3}": "skill_id", "{TABLE0}": "part faults", "{TABLE1}": "skills required to fix", "{TABLE2}": "skills"}, "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id": {"{COLUMN0}": "premises_type", "{COLUMN1}": "address_type_code", "{COLUMN2}": "premise_id", "{TABLE0}": "customer addresses", "{TABLE1}": "premises"}, "SELECT DISTINCT LOCATION FROM cinema": {"{COLUMN0}": "location", "{TABLE0}": "cinema"}, "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE": {"{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "class_senator_vote", "{TABLE0}": "student", "{TABLE1}": "voting record"}, "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID": {"{COLUMN0}": "name", "{COLUMN1}": "county_id", "{TABLE0}": "city", "{TABLE1}": "county public safety"}, "SELECT DISTINCT building FROM Faculty": {"{COLUMN0}": "building", "{TABLE0}": "faculty"}, "SELECT name ,  distance FROM Aircraft": {"{COLUMN0}": "name", "{COLUMN1}": "distance", "{TABLE0}": "aircraft"}, "SELECT title ,  directed_by FROM film": {"{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{TABLE0}": "film"}, "SELECT sum(amount) FROM payment": {"{COLUMN0}": "amount", "{TABLE0}": "payment", "{AGG0}": "sum"}, "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id": {"{COLUMN0}": "customer_details", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "policies"}, "SELECT DISTINCT TYPE FROM institution": {"{COLUMN0}": "type", "{COLUMN1}": "institution"}, "SELECT count(DISTINCT services) FROM station": {"{COLUMN0}": "services", "{TABLE0}": "station", "{AGG0}": "count"}, "SELECT avg(Age) FROM artist": {"{COLUMN0}": "age", "{COLUMN1}": "artist", "{AGG0}": "avg"}, "SELECT DISTINCT District FROM election": {"{COLUMN0}": "district", "{TABLE0}": "election"}, "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS": {"{COLUMN0}": "planned_delivery_date", "{COLUMN1}": "actual_delivery_date", "{TABLE0}": "bookings"}, "SELECT Phone FROM EMPLOYEE": {"{COLUMN0}": "phone", "{TABLE0}": "employee"}, "SELECT LENGTH ,  Height FROM roller_coaster": {"{COLUMN0}": "length", "{COLUMN1}": "height", "{TABLE0}": "roller coaster"}, "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD": {"{COLUMN0}": "registration_date", "{COLUMN1}": "election_cycle", "{TABLE0}": "voting record"}, "SELECT count(*) ,  account_id FROM Financial_transactions": {"{COLUMN0}": "account_id", "{TABLE0}": "financial transactions", "{AGG0}": "count"}, "SELECT DISTINCT CLASS FROM race": {"{COLUMN0}": "class", "{TABLE0}": "race"}, "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID": {"{COLUMN0}": "name", "{COLUMN1}": "gymnast_id", "{COLUMN2}": "people_id", "{TABLE0}": "gymnast", "{TABLE1}": "people"}, "SELECT avg(Profits_billion) FROM Companies": {"{COLUMN0}": "profits_billion", "{TABLE0}": "companies", "{AGG0}": "avg"}, "SELECT max(Number_cities) ,  min(Number_cities) FROM market": {"{COLUMN0}": "number_cities", "{TABLE0}": "market", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code": {"{COLUMN0}": "manufacturer", "{COLUMN1}": "code", "{TABLE0}": "products", "{TABLE1}": "manufacturers"}, "SELECT Store_Name FROM Drama_Workshop_Groups": {"{COLUMN0}": "store_name", "{TABLE0}": "drama workshop groups"}, "SELECT count(DISTINCT advisor) FROM Student": {"{COLUMN0}": "advisor", "{TABLE0}": "student", "{AGG0}": "count"}, "SELECT DISTINCT product_details FROM products": {"{COLUMN0}": "product_details", "{TABLE0}": "products"}, "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event": {"{COLUMN0}": "event_attendance", "{TABLE0}": "event", "{AGG0}": "avg", "{AGG1}": "max"}, "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety": {"{COLUMN0}": "crime_rate", "{TABLE0}": "county public safety", "{AGG0}": "min", "{AGG1}": "max"}, "SELECT count(*) FROM Projects": {"{TABLE0}": "projects", "{AGG0}": "count"}, "SELECT count(*) FROM club": {"{TABLE0}": "club", "{AGG0}": "count"}, "SELECT count(*) FROM device": {"{COLUMN0}": "device", "{AGG0}": "count"}, "SELECT count(*) FROM train": {"{TABLE0}": "train", "{AGG0}": "count"}, "SELECT count(*) FROM actor": {"{TABLE0}": "actor", "{AGG0}": "count"}, "SELECT count(*) FROM Documents": {"{TABLE0}": "documents", "{AGG0}": "count"}, "SELECT count(*) FROM Reviewer": {"{TABLE0}": "reviewer", "{AGG0}": "count"}, "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "client_id", "{TABLE0}": "clients", "{TABLE1}": "bookings"}, "SELECT count(*) FROM aircraft": {"{COLUMN0}": "aircraft", "{AGG0}": "count"}, "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "body builder", "{TABLE1}": "people"}, "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups": {"{COLUMN0}": "currency_code", "{TABLE0}": "drama workshop groups", "{AGG0}": "count"}, "SELECT count(DISTINCT card_type_code) FROM Customers_Cards": {"{COLUMN0}": "card_type_code", "{TABLE0}": "customers cards", "{AGG0}": "count"}, "SELECT DISTINCT payment_method FROM customers": {"{COLUMN0}": "payment_method", "{TABLE0}": "customers"}, "SELECT project_id ,  project_details FROM Projects": {"{COLUMN0}": "project_id", "{COLUMN1}": "project_details", "{TABLE0}": "projects"}, "SELECT count(*) FROM student": {"{TABLE0}": "student", "{AGG0}": "count"}, "SELECT count(*) FROM Statements": {"{TABLE0}": "statements", "{AGG0}": "count"}, "SELECT max(group_equity_shareholding) FROM operate_company": {"{COLUMN0}": "group_equity_shareholding", "{TABLE0}": "operate company", "{AGG0}": "max"}, "SELECT count(*) FROM region": {"{TABLE0}": "region", "{AGG0}": "count"}, "SELECT avg(Attendance) FROM performance": {"{COLUMN0}": "attendance", "{TABLE0}": "performance", "{AGG0}": "avg"}, "SELECT count(*) FROM phone": {"{TABLE0}": "phone", "{AGG0}": "count"}, "SELECT shipping_agent_name FROM Ref_Shipping_Agents;": {"{COLUMN0}": "shipping_agent_name", "{TABLE0}": "reference shipping agents"}, "SELECT distinct(UnitPrice) FROM TRACK": {"{COLUMN0}": "unitprice", "{TABLE0}": "track"}, "SELECT count(*) FROM employee": {"{TABLE0}": "employee", "{AGG0}": "count"}, "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions": {"{COLUMN0}": "transaction_amount", "{TABLE0}": "financial transactions", "{AGG0}": "avg", "{AGG1}": "sum"}, "SELECT count(DISTINCT pPos) FROM tryout": {"{COLUMN0}": "ppos", "{TABLE0}": "tryout", "{AGG0}": "count"}, "SELECT max(Silver) ,  min(Silver) FROM club_rank": {"{COLUMN0}": "silver", "{TABLE0}": "club rank", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT DISTINCT Major FROM Student": {"{COLUMN0}": "major", "{TABLE0}": "student"}, "SELECT count(*) FROM authors": {"{TABLE0}": "authors", "{AGG0}": "count"}, "SELECT count(*) FROM Staff;": {"{TABLE0}": "staff", "{AGG0}": "count"}, "SELECT subject_name FROM SUBJECTS": {"{COLUMN0}": "subject_name", "{TABLE0}": "subjects"}, "SELECT count(*) FROM race": {"{TABLE0}": "race", "{AGG0}": "count"}, "SELECT Fname ,  Lname FROM Student": {"{COLUMN0}": "fname", "{COLUMN1}": "lname", "{TABLE0}": "student"}, "SELECT count(DISTINCT participant_id) FROM participants_in_Events": {"{COLUMN0}": "participant_id", "{TABLE0}": "participants in events", "{AGG0}": "count"}, "SELECT role_code FROM ROLES;": {"{COLUMN0}": "role_code", "{TABLE0}": "roles"}, "SELECT DISTINCT Location_Name FROM LOCATIONS": {"{COLUMN0}": "location_name", "{TABLE0}": "locations"}, "SELECT count(*) FROM school": {"{COLUMN0}": "school", "{AGG0}": "count"}, "SELECT count(DISTINCT language_id) FROM film": {"{COLUMN0}": "language_id", "{TABLE0}": "film", "{AGG0}": "count"}, "SELECT count(DISTINCT Governor) FROM party": {"{COLUMN0}": "governor", "{COLUMN1}": "party", "{AGG0}": "count"}, "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses": {"{COLUMN0}": "monthly_rental", "{TABLE0}": "student addresses", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT avg(pages_per_minute_color) FROM product": {"{COLUMN0}": "pages_per_minute_color", "{COLUMN1}": "product", "{AGG0}": "avg"}, "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS": {"{COLUMN0}": "characteristic_name", "{TABLE0}": "characteristics"}, "SELECT DISTINCT payment_method_code FROM INVOICES": {"{COLUMN0}": "payment_method_code", "{TABLE0}": "invoices"}, "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products": {"{COLUMN0}": "product_price", "{TABLE0}": "products", "{AGG0}": "min", "{AGG1}": "max", "{AGG2}": "avg"}, "SELECT count(DISTINCT Software_Platform) FROM device": {"{COLUMN0}": "software_platform", "{COLUMN1}": "device", "{AGG0}": "count"}, "SELECT DISTINCT form_type_code FROM forms": {"{COLUMN0}": "form_type_code", "{TABLE0}": "forms"}, "SELECT DISTINCT city_code FROM Student": {"{COLUMN0}": "city_code", "{TABLE0}": "student"}, "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "order items"}, "SELECT ResName FROM Restaurant;": {"{COLUMN0}": "resname", "{TABLE0}": "restaurant"}, "SELECT count(*) FROM bank": {"{TABLE0}": "bank", "{AGG0}": "count"}, "SELECT count(*) FROM farm": {"{TABLE0}": "farm", "{AGG0}": "count"}, "SELECT detention_summary FROM Detention": {"{COLUMN0}": "detention_summary", "{TABLE0}": "detention"}, "SELECT avg(Speed) FROM roller_coaster": {"{COLUMN0}": "speed", "{TABLE0}": "roller coaster", "{AGG0}": "avg"}, "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments": {"{COLUMN0}": "bathroom_count", "{TABLE0}": "apartments", "{AGG0}": "min", "{AGG1}": "max"}, "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend": {"{COLUMN0}": "name", "{TABLE0}": "person", "{TABLE1}": "person friend"}, "SELECT max(Enrollment) FROM university": {"{COLUMN0}": "enrollment", "{TABLE0}": "university", "{AGG0}": "max"}, "SELECT avg(Snatch) FROM body_builder": {"{COLUMN0}": "snatch", "{TABLE0}": "body builder", "{AGG0}": "avg"}, "SELECT COUNT (DISTINCT Publication_Date) FROM publication": {"{COLUMN0}": "publication_date", "{TABLE0}": "publication", "{AGG0}": "count"}, "SELECT count(*) FROM services": {"{TABLE0}": "services", "{AGG0}": "count"}, "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName": {"{COLUMN0}": "state", "{COLUMN1}": "cname", "{TABLE0}": "college", "{TABLE1}": "tryout"}, "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things": {"{COLUMN0}": "status_of_thing_code", "{TABLE0}": "timed status of things", "{AGG0}": "count"}, "SELECT count(*) FROM artist": {"{COLUMN0}": "artist", "{AGG0}": "count"}, "SELECT DISTINCT transaction_type FROM Financial_Transactions": {"{COLUMN0}": "transaction_type", "{TABLE0}": "financial transactions"}, "SELECT count(*) FROM company": {"{COLUMN0}": "company", "{AGG0}": "count"}, "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed": {"{COLUMN0}": "destruction_authorised_by_employee_id", "{TABLE0}": "documents to be destroyed"}, "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "company_id", "{TABLE0}": "employment", "{TABLE1}": "people", "{TABLE2}": "company"}, "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents": {"{COLUMN0}": "price_in_euros", "{TABLE0}": "catalog contents", "{AGG0}": "avg", "{AGG1}": "min"}, "SELECT DISTINCT product_size FROM Products": {"{COLUMN0}": "product_size", "{TABLE0}": "products"}, "SELECT count(*) FROM cinema": {"{TABLE0}": "cinema", "{AGG0}": "count"}, "SELECT count(DISTINCT name) FROM projects": {"{COLUMN0}": "name", "{TABLE0}": "projects", "{AGG0}": "count"}, "SELECT count(DISTINCT Status) FROM city": {"{COLUMN0}": "status", "{TABLE0}": "city", "{AGG0}": "count"}, "SELECT max(weight) ,  min(weight) FROM Player": {"{COLUMN0}": "weight", "{TABLE0}": "player", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT count(*) FROM ALBUM": {"{TABLE0}": "album", "{AGG0}": "count"}, "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing": {"{COLUMN0}": "claim_outcome_code", "{TABLE0}": "claims processing", "{AGG0}": "count"}, "SELECT count(*) FROM ship": {"{TABLE0}": "ship", "{AGG0}": "count"}, "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID": {"{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "gradepoint", "{COLUMN3}": "grade", "{COLUMN4}": "lettergrade", "{COLUMN5}": "stuid", "{TABLE0}": "enrolled in", "{TABLE1}": "grade conversion", "{TABLE2}": "student"}, "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id": {"{COLUMN0}": "apt_number", "{COLUMN1}": "booking_start_date", "{COLUMN2}": "apt_id", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments"}, "SELECT count(*) FROM COURSES": {"{TABLE0}": "courses", "{AGG0}": "count"}, "SELECT count(DISTINCT Team) FROM match_season": {"{COLUMN0}": "team", "{TABLE0}": "match season", "{AGG0}": "count"}, "SELECT max(Population) ,  min(Population) FROM county": {"{COLUMN0}": "population", "{TABLE0}": "county", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT count(*) FROM player": {"{TABLE0}": "player", "{AGG0}": "count"}, "SELECT DISTINCT card_type_code FROM Customers_Cards": {"{COLUMN0}": "card_type_code", "{TABLE0}": "customers cards"}, "SELECT DISTINCT Visit_Date FROM VISITS": {"{COLUMN0}": "visit_date", "{TABLE0}": "visits"}, "SELECT count(*) FROM ROLES": {"{TABLE0}": "roles", "{AGG0}": "count"}, "SELECT count(*) FROM CUSTOMERS": {"{TABLE0}": "customers", "{AGG0}": "count"}, "SELECT DISTINCT firstname ,  lastname FROM teachers": {"{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{TABLE0}": "teachers"}, "SELECT count(DISTINCT s_id) FROM advisor": {"{COLUMN0}": "s_id", "{TABLE0}": "advisor", "{AGG0}": "count"}, "SELECT count(DISTINCT brand) FROM camera_lens": {"{COLUMN0}": "brand", "{TABLE0}": "camera lens", "{AGG0}": "count"}, "SELECT count(*) FROM scientists": {"{TABLE0}": "scientists", "{AGG0}": "count"}, "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements": {"{COLUMN0}": "settlement_amount", "{TABLE0}": "settlements", "{AGG0}": "sum", "{AGG1}": "avg"}, "SELECT count(*) FROM technician": {"{TABLE0}": "technician", "{AGG0}": "count"}, "SELECT DISTINCT city FROM addresses": {"{COLUMN0}": "city", "{TABLE0}": "addresses"}, "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed": {"{COLUMN0}": "destroyed_by_employee_id", "{TABLE0}": "documents to be destroyed"}, "SELECT sum(num_of_component) FROM furniture": {"{COLUMN0}": "num_of_component", "{TABLE0}": "furniture", "{AGG0}": "sum"}, "SELECT count(*) FROM building": {"{TABLE0}": "building", "{AGG0}": "count"}, "SELECT count(*) FROM Ref_calendar": {"{TABLE0}": "reference calendar", "{AGG0}": "count"}, "SELECT name FROM media_types;": {"{COLUMN0}": "name", "{TABLE0}": "media types"}, "SELECT DISTINCT allergytype FROM Allergy_type": {"{COLUMN0}": "allergytype", "{TABLE0}": "allergy type"}, "SELECT DISTINCT donator_name FROM endowment": {"{COLUMN0}": "donator_name", "{TABLE0}": "endowment"}, "SELECT count(*) FROM Apartment_Bookings": {"{TABLE0}": "apartment bookings", "{AGG0}": "count"}, "SELECT count(*) FROM useracct": {"{TABLE0}": "useracct", "{AGG0}": "count"}, "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code": {"{COLUMN0}": "outcome_description", "{COLUMN1}": "outcome_code", "{TABLE0}": "research outcomes", "{TABLE1}": "project outcomes"}, "SELECT * FROM basketball_match": {"{TABLE0}": "basketball match"}, "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance": {"{COLUMN0}": "student_id", "{TABLE0}": "student course registrations", "{TABLE1}": "student course attendance"}, "SELECT count(DISTINCT acc_type) FROM customer": {"{COLUMN0}": "acc_type", "{TABLE0}": "customer", "{AGG0}": "count"}, "SELECT count(DISTINCT school_id) FROM basketball_match": {"{COLUMN0}": "school_id", "{TABLE0}": "basketball match", "{AGG0}": "count"}, "SELECT count(DISTINCT rating) FROM film": {"{COLUMN0}": "rating", "{TABLE0}": "film", "{AGG0}": "count"}, "SELECT count(DISTINCT dormid) FROM has_amenity": {"{COLUMN0}": "dormid", "{TABLE0}": "has amenity", "{AGG0}": "count"}, "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games": {"{COLUMN0}": "stuid", "{TABLE0}": "sports info", "{TABLE1}": "plays games"}, "SELECT count(*) FROM Ref_locations": {"{TABLE0}": "reference locations", "{AGG0}": "count"}, "SELECT count(DISTINCT sportname) FROM Sportsinfo": {"{COLUMN0}": "sportname", "{TABLE0}": "sports info", "{AGG0}": "count"}, "SELECT count(DISTINCT student_id) FROM Students_in_Detention": {"{COLUMN0}": "student_id", "{TABLE0}": "students in detention", "{AGG0}": "count"}, "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "first notification of loss"}, "SELECT max(date_moved_in) FROM Residents": {"{COLUMN0}": "date_moved_in", "{TABLE0}": "residents", "{AGG0}": "max"}, "SELECT COUNT (DISTINCT id) FROM teaches": {"{COLUMN0}": "id", "{TABLE0}": "teaches", "{AGG0}": "count"}, "SELECT count(*) FROM VOTING_RECORD": {"{TABLE0}": "voting record", "{AGG0}": "count"}, "SELECT count(*) FROM book_club": {"{TABLE0}": "book club", "{AGG0}": "count"}, "SELECT count(DISTINCT school_code) FROM department": {"{COLUMN0}": "school_code", "{TABLE0}": "department", "{AGG0}": "count"}, "SELECT count(*) FROM party_events": {"{TABLE0}": "party events", "{AGG0}": "count"}, "SELECT DISTINCT gtype FROM Video_games": {"{COLUMN0}": "gtype", "{TABLE0}": "video games"}, "SELECT count(DISTINCT crs_code) FROM CLASS": {"{COLUMN0}": "crs_code", "{TABLE0}": "class", "{AGG0}": "count"}, "SELECT count(*) FROM county_public_safety": {"{TABLE0}": "county public safety", "{AGG0}": "count"}, "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank": {"{COLUMN0}": "rank", "{COLUMN1}": "facid", "{COLUMN2}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student", "{AGG0}": "count"}, "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION": {"{COLUMN0}": "position", "{COLUMN1}": "points", "{TABLE0}": "player", "{AGG0}": "avg"}, "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality": {"{COLUMN0}": "nationality", "{TABLE0}": "pilot", "{AGG0}": "count"}, "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade": {"{COLUMN0}": "grade", "{COLUMN1}": "classroom", "{TABLE0}": "list", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director": {"{COLUMN0}": "title", "{COLUMN1}": "stars", "{COLUMN2}": "director", "{COLUMN3}": "mid", "{TABLE0}": "rating", "{TABLE1}": "movie", "{AGG0}": "min"}, "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id": {"{COLUMN0}": "name", "{COLUMN1}": "lat", "{COLUMN2}": "duration", "{COLUMN3}": "id", "{COLUMN4}": "end_station_id", "{TABLE0}": "station", "{TABLE1}": "trip", "{AGG0}": "min"}, "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id": {"{COLUMN0}": "name", "{COLUMN1}": "long", "{COLUMN2}": "duration", "{COLUMN3}": "id", "{COLUMN4}": "start_station_id", "{TABLE0}": "station", "{TABLE1}": "trip", "{AGG0}": "avg"}, "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname": {"{COLUMN0}": "amount", "{COLUMN1}": "bname", "{COLUMN2}": "branch_id", "{TABLE0}": "bank", "{TABLE1}": "loan", "{AGG0}": "sum"}, "SELECT count(*) ,  flag FROM ship GROUP BY flag": {"{COLUMN0}": "flag", "{TABLE0}": "ship", "{AGG0}": "count"}, "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;": {"{COLUMN0}": "role_description", "{COLUMN1}": "role_code", "{TABLE0}": "roles", "{TABLE1}": "employees", "{AGG0}": "count"}, "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name": {"{COLUMN0}": "balance", "{COLUMN1}": "name", "{COLUMN2}": "custid", "{TABLE0}": "accounts", "{TABLE1}": "savings", "{AGG0}": "sum"}, "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id": {"{COLUMN0}": "product_id", "{TABLE0}": "problems", "{TABLE1}": "product", "{AGG0}": "count"}, "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier": {"{COLUMN0}": "carrier", "{TABLE0}": "phone", "{AGG0}": "count"}, "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation": {"{COLUMN0}": "price", "{COLUMN1}": "score", "{COLUMN2}": "appelation", "{TABLE0}": "wine", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer": {"{COLUMN0}": "price", "{COLUMN1}": "manufacturer", "{TABLE0}": "products", "{AGG0}": "avg"}, "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name": {"{COLUMN0}": "department_name", "{COLUMN1}": "department_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{AGG0}": "count"}, "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name": {"{COLUMN0}": "name", "{COLUMN1}": "event_id", "{COLUMN2}": "journalist_id", "{TABLE0}": "news report", "{TABLE1}": "event", "{TABLE2}": "journalist", "{AGG0}": "count"}, "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party": {"{COLUMN0}": "party", "{COLUMN1}": "party_id", "{TABLE0}": "election", "{AGG0}": "count"}, "SELECT Status ,  avg(Population) FROM city GROUP BY Status": {"{COLUMN0}": "status", "{COLUMN1}": "population", "{TABLE0}": "city", "{AGG0}": "avg"}, "SELECT building ,  count(*) FROM Faculty GROUP BY building": {"{COLUMN0}": "building", "{TABLE0}": "faculty", "{AGG0}": "count"}, "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters": {"{COLUMN0}": "headquarters", "{COLUMN1}": "company", "{AGG0}": "count"}, "SELECT destination ,  count(*) FROM Flight GROUP BY destination": {"{COLUMN0}": "destination", "{TABLE0}": "flight", "{AGG0}": "count"}, "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex": {"{COLUMN0}": "age", "{COLUMN1}": "sex", "{TABLE0}": "student", "{AGG0}": "avg", "{AGG1}": "max"}, "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type": {"{COLUMN0}": "type", "{COLUMN1}": "school", "{COLUMN2}": "school_id", "{TABLE0}": "school bus", "{AGG0}": "count"}, "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid": {"{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "patient", "{COLUMN3}": "employeeid", "{COLUMN4}": "pcp", "{AGG0}": "count"}, "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID": {"{COLUMN0}": "statement_id", "{TABLE0}": "accounts", "{AGG0}": "count"}, "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID": {"{COLUMN0}": "facid", "{COLUMN1}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student", "{AGG0}": "count"}, "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id": {"{COLUMN0}": "name", "{COLUMN1}": "trust", "{COLUMN2}": "u_id", "{COLUMN3}": "target_u_id", "{TABLE0}": "useracct", "{AGG0}": "avg"}, "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID": {"{COLUMN0}": "name", "{COLUMN1}": "tourist_attraction_id", "{TABLE0}": "tourist attractions", "{TABLE1}": "visits", "{AGG0}": "count"}, "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id": {"{COLUMN0}": "product_name", "{COLUMN1}": "order_quantity", "{COLUMN2}": "product_id", "{TABLE0}": "products", "{TABLE1}": "order items", "{AGG0}": "sum"}, "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id": {"{COLUMN0}": "name", "{COLUMN1}": "storm_id", "{TABLE0}": "storm", "{TABLE1}": "affected region", "{AGG0}": "count"}, "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID": {"{COLUMN0}": "title", "{COLUMN1}": "albumid", "{TABLE0}": "album", "{TABLE1}": "track", "{AGG0}": "count"}, "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION": {"{COLUMN0}": "location", "{TABLE0}": "cinema", "{AGG0}": "count"}, "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter": {"{COLUMN0}": "name", "{COLUMN1}": "headquarter", "{COLUMN2}": "manufacturer", "{COLUMN3}": "code", "{TABLE0}": "products", "{TABLE1}": "manufacturers", "{AGG0}": "count"}, "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor": {"{COLUMN0}": "advisor", "{TABLE0}": "student", "{AGG0}": "count"}, "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id": {"{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{TABLE0}": "projects", "{TABLE1}": "tasks", "{AGG0}": "count"}, "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code": {"{COLUMN0}": "payment_method_code", "{TABLE0}": "customers", "{AGG0}": "count"}, "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id": {"{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{AGG0}": "count"}, "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name": {"{COLUMN0}": "credits", "{COLUMN1}": "dept_name", "{TABLE0}": "course", "{AGG0}": "sum"}, "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code": {"{COLUMN0}": "school_code", "{COLUMN1}": "crs_code", "{COLUMN2}": "dept_code", "{TABLE0}": "class", "{TABLE1}": "course", "{TABLE2}": "department", "{AGG0}": "count"}, "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name": {"{COLUMN0}": "name", "{COLUMN1}": "ssn", "{COLUMN2}": "scientist", "{TABLE0}": "scientists", "{TABLE1}": "assigned to", "{AGG0}": "count"}, "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee": {"{COLUMN0}": "nominee", "{TABLE0}": "musical", "{AGG0}": "count"}, "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number": {"{COLUMN0}": "invoice_number", "{TABLE0}": "financial transactions", "{AGG0}": "count"}, "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID": {"{COLUMN0}": "activity_name", "{COLUMN1}": "actid", "{TABLE0}": "activity", "{TABLE1}": "faculty participates in", "{AGG0}": "count"}, "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition": {"{COLUMN0}": "competition", "{TABLE0}": "match", "{AGG0}": "count"}, "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code": {"{COLUMN0}": "budget_type_code", "{TABLE0}": "documents with expenses", "{AGG0}": "count"}, "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type": {"{COLUMN0}": "competition_type", "{TABLE0}": "competition", "{AGG0}": "count"}, "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id": {"{COLUMN0}": "name", "{COLUMN1}": "artist_id", "{TABLE0}": "exhibition", "{TABLE1}": "artist", "{AGG0}": "count"}, "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id": {"{COLUMN0}": "customer_id", "{TABLE0}": "accounts", "{AGG0}": "count"}, "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code": {"{COLUMN0}": "transaction_type_code", "{COLUMN1}": "share_count", "{TABLE0}": "transactions", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category": {"{COLUMN0}": "category", "{COLUMN1}": "music_festival", "{AGG0}": "count"}, "SELECT count(*) ,  rank FROM captain GROUP BY rank": {"{COLUMN0}": "rank", "{TABLE0}": "captain", "{AGG0}": "count"}, "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major": {"{COLUMN0}": "major", "{COLUMN1}": "age", "{TABLE0}": "student", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id": {"{COLUMN0}": "product_id", "{COLUMN1}": "order_id", "{TABLE0}": "orders", "{TABLE1}": "order items", "{TABLE2}": "products", "{AGG0}": "count"}, "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_quantity", "{COLUMN2}": "product_id", "{TABLE0}": "order items", "{TABLE1}": "products", "{AGG0}": "sum"}, "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name": {"{COLUMN0}": "trade_name", "{TABLE0}": "medicine", "{AGG0}": "count"}, "SELECT city ,  max(lat) FROM station GROUP BY city": {"{COLUMN0}": "city", "{COLUMN1}": "lat", "{TABLE0}": "station", "{AGG0}": "max"}, "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status": {"{COLUMN0}": "status", "{TABLE0}": "roller coaster", "{AGG0}": "count"}, "SELECT avg(rating) ,  languages FROM song GROUP BY languages": {"{COLUMN0}": "rating", "{COLUMN1}": "languages", "{TABLE0}": "song", "{AGG0}": "avg"}, "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code": {"{COLUMN0}": "location_code", "{TABLE0}": "document locations", "{AGG0}": "count"}, "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn": {"{COLUMN0}": "pets_allowed_yn", "{COLUMN1}": "price_range", "{TABLE0}": "hotels", "{AGG0}": "avg"}, "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape": {"{COLUMN0}": "grape", "{TABLE0}": "wine", "{AGG0}": "count"}, "SELECT count(*) ,  gender FROM artist GROUP BY gender": {"{COLUMN0}": "gender", "{TABLE0}": "artist", "{AGG0}": "count"}, "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code": {"{COLUMN0}": "stu_gpa", "{COLUMN1}": "dept_code", "{TABLE0}": "student", "{AGG0}": "max", "{AGG1}": "avg", "{AGG2}": "min"}, "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry": {"{COLUMN0}": "industry", "{TABLE0}": "companies", "{AGG0}": "count"}, "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code": {"{COLUMN0}": "booking_status_code", "{TABLE0}": "apartment bookings", "{AGG0}": "count"}, "SELECT count(*) ,  classroom FROM list GROUP BY classroom": {"{COLUMN0}": "classroom", "{TABLE0}": "list", "{AGG0}": "count"}, "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name": {"{COLUMN0}": "dept_name", "{TABLE0}": "student", "{AGG0}": "count"}, "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code": {"{COLUMN0}": "product_type_code", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{AGG0}": "avg"}, "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code": {"{COLUMN0}": "dept_code", "{TABLE0}": "student", "{AGG0}": "count"}, "SELECT count(*) ,  formats FROM files GROUP BY formats": {"{COLUMN0}": "formats", "{TABLE0}": "files", "{AGG0}": "count"}, "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code": {"{COLUMN0}": "policy_type_code", "{TABLE0}": "policies", "{AGG0}": "count"}, "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code": {"{COLUMN0}": "stu_hrs", "{COLUMN1}": "dept_code", "{TABLE0}": "student", "{AGG0}": "sum"}, "SELECT code ,  name ,  min(price) FROM products GROUP BY name": {"{COLUMN0}": "code", "{COLUMN1}": "name", "{COLUMN2}": "price", "{TABLE0}": "products", "{AGG0}": "min"}, "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "products in events", "{AGG0}": "count"}, "SELECT party ,  count(*) FROM driver GROUP BY party": {"{COLUMN0}": "party", "{TABLE0}": "driver", "{AGG0}": "count"}, "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID": {"{COLUMN0}": "destruction_authorised_by_employee_id", "{TABLE0}": "documents to be destroyed", "{AGG0}": "count"}, "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country": {"{COLUMN0}": "country", "{TABLE0}": "climber", "{AGG0}": "count"}, "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name": {"{COLUMN0}": "revenue", "{COLUMN1}": "name", "{TABLE0}": "manufacturers", "{AGG0}": "sum"}, "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director": {"{COLUMN0}": "director", "{COLUMN1}": "mid", "{TABLE0}": "movie", "{TABLE1}": "rating", "{AGG0}": "count"}, "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code": {"{COLUMN0}": "card_type_code", "{COLUMN1}": "customer_id", "{TABLE0}": "customers cards", "{AGG0}": "count"}, "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos": {"{COLUMN0}": "hs", "{COLUMN1}": "ppos", "{COLUMN2}": "pid", "{TABLE0}": "tryout", "{TABLE1}": "player", "{AGG0}": "min"}, "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id": {"{COLUMN0}": "student_id", "{TABLE0}": "students", "{TABLE1}": "student course registrations", "{AGG0}": "count"}, "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot": {"{COLUMN0}": "preferred_foot", "{COLUMN1}": "overall_rating", "{TABLE0}": "player attributes", "{AGG0}": "avg"}, "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname": {"{COLUMN0}": "sportname", "{TABLE0}": "sports info", "{AGG0}": "count"}, "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID": {"{COLUMN0}": "stuid", "{COLUMN1}": "gamesplayed", "{TABLE0}": "sports info", "{AGG0}": "count", "{AGG1}": "sum"}, "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code": {"{COLUMN0}": "crs_credit", "{COLUMN1}": "dept_code", "{TABLE0}": "course", "{AGG0}": "sum"}, "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype": {"{COLUMN0}": "allergytype", "{COLUMN1}": "allergy", "{TABLE0}": "has allergy", "{TABLE1}": "allergy type", "{AGG0}": "count"}, "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "player_id", "{TABLE0}": "player", "{TABLE1}": "all star", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "inventory_id", "{COLUMN2}": "film_id", "{TABLE0}": "film", "{TABLE1}": "inventory", "{TABLE2}": "rental", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;": {"{VALUE8}": "3", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "player_id", "{TABLE0}": "player", "{TABLE1}": "player award", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "artistid", "{TABLE0}": "album", "{TABLE1}": "artist", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "film_id", "{TABLE0}": "film", "{TABLE1}": "inventory", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "orders", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "nurse", "{COLUMN2}": "appointment", "{COLUMN3}": "employeeid", "{COLUMN4}": "prepnurse", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "customer_last_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "phone_number", "{TABLE0}": "orders", "{TABLE1}": "customers", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "winning_aircraft", "{TABLE0}": "match", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "access_count", "{COLUMN1}": "document_type_code", "{TABLE0}": "documents", "{AGG0}": "sum", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{TABLE0}": "projects", "{TABLE1}": "project outcomes", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "hours", "{COLUMN2}": "code", "{COLUMN3}": "project", "{TABLE0}": "projects", "{TABLE1}": "assigned to", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "city_code", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "city_code", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "customer_status_code", "{TABLE0}": "customers", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "organisation_id", "{COLUMN1}": "organisation_type", "{COLUMN2}": "organisation_details", "{COLUMN3}": "employer_organisation_id", "{TABLE0}": "organisations", "{TABLE1}": "research staff", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "aid", "{TABLE0}": "certificate", "{TABLE1}": "aircraft", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "status", "{COLUMN1}": "city_id", "{COLUMN2}": "host_city_id", "{TABLE0}": "city", "{TABLE1}": "farm competition", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "reign", "{TABLE0}": "wrestler", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "home_city", "{TABLE0}": "driver", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;": {"{VALUE1}": "1", "{COLUMN0}": "roomname", "{COLUMN1}": "room", "{COLUMN2}": "roomid", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "city", "{COLUMN2}": "dst_apid", "{COLUMN3}": "apid", "{TABLE0}": "airports", "{TABLE1}": "routes", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "built_year", "{TABLE0}": "ship", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "color_description", "{COLUMN1}": "color_code", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "activity_name", "{COLUMN1}": "actid", "{TABLE0}": "activity", "{TABLE1}": "faculty participates in", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "shop_name", "{COLUMN1}": "shop_id", "{TABLE0}": "stock", "{TABLE1}": "shop", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1": {"{VALUE2}": "1", "{COLUMN0}": "customer_first_name", "{COLUMN1}": "customer_last_name", "{COLUMN2}": "customer_id", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "orders", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "document_type_code", "{TABLE0}": "documents", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "status_code", "{TABLE0}": "bookings", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "stuid", "{TABLE0}": "student", "{TABLE1}": "visits restaurant", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "alid", "{TABLE0}": "airlines", "{TABLE1}": "routes", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "type", "{TABLE0}": "ship", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "class", "{TABLE0}": "race", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "part_id", "{COLUMN1}": "part_name", "{COLUMN2}": "part_fault_id", "{TABLE0}": "parts", "{TABLE1}": "part faults", "{TABLE2}": "skills required to fix", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3": {"{VALUE6}": "3", "{COLUMN0}": "artist_name", "{TABLE0}": "artist", "{TABLE1}": "song", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "pilot", "{TABLE0}": "flight", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "location", "{TABLE0}": "performance", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "major", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "facid", "{COLUMN3}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "rank", "{TABLE0}": "captain", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "class_code", "{COLUMN2}": "crs_code", "{COLUMN3}": "dept_code", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "course", "{TABLE3}": "department", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "student_id", "{COLUMN1}": "last_name", "{TABLE0}": "behavior incident", "{TABLE1}": "students", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "characteristic_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "role_description", "{COLUMN1}": "staff_id", "{COLUMN2}": "role_code", "{COLUMN3}": "project_id", "{TABLE0}": "staff roles", "{TABLE1}": "project staff", "{TABLE2}": "project outcomes", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "dept_name", "{TABLE0}": "course", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{TABLE0}": "rating", "{TABLE1}": "movie", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "party", "{COLUMN1}": "party_id", "{TABLE0}": "election", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_phone", "{COLUMN2}": "customer_email", "{COLUMN3}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "account_id", "{TABLE0}": "financial transactions", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "governor", "{COLUMN1}": "party", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "headquartered_city", "{COLUMN1}": "store_id", "{COLUMN2}": "district_id", "{TABLE0}": "store", "{TABLE1}": "store district", "{TABLE2}": "district", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;": {"{VALUE1}": "1", "{COLUMN0}": "city", "{COLUMN1}": "customer_address_id", "{COLUMN2}": "address_id", "{TABLE0}": "customers", "{TABLE1}": "addresses", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "major", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "songid", "{TABLE0}": "vocals", "{TABLE1}": "songs", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "classroom", "{TABLE0}": "list", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1": {"{VALUE2}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "stuid", "{TABLE0}": "sports info", "{TABLE1}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "dept_name", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "product_details", "{COLUMN1}": "product_id", "{TABLE0}": "order items", "{TABLE1}": "products", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "type", "{TABLE0}": "operate company", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "store_id", "{TABLE0}": "inventory", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "location_code", "{TABLE0}": "document locations", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "amenity_name", "{COLUMN1}": "amenid", "{TABLE0}": "dorm amenity", "{TABLE1}": "has amenity", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "card_type_code", "{TABLE0}": "customers cards", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "year", "{TABLE0}": "section", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "party", "{TABLE0}": "people", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "transaction_type_code", "{TABLE0}": "transactions", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "party", "{TABLE0}": "representative", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "camera_lens_id", "{COLUMN2}": "id", "{TABLE0}": "photos", "{TABLE1}": "camera lens", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "fault_log_entry_id", "{TABLE0}": "fault log", "{TABLE1}": "engineer visits", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "customers policies", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "detention_type_code", "{COLUMN1}": "detention_type_description", "{TABLE0}": "detention", "{TABLE1}": "reference detention type", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "payment_method_code", "{TABLE0}": "payments", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "instrument", "{TABLE0}": "instruments", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "claim_status_name", "{COLUMN1}": "claim_stage_id", "{TABLE0}": "claims processing", "{TABLE1}": "claims processing stages", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "dname", "{COLUMN1}": "dno", "{TABLE0}": "department", "{TABLE1}": "minor in", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "gtype", "{TABLE0}": "video games", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "yearid", "{TABLE0}": "hall of fame", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "allergytype", "{TABLE0}": "allergy type", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90": {"{VALUE0}": "white", "{VALUE9}": "90", "{COLUMN0}": "grape", "{COLUMN1}": "color", "{COLUMN2}": "score", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{OP0}": "=", "{OP1}": ">"}, "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"": {"{VALUE0}": "meaghan", "{VALUE1}": "keeling", "{COLUMN0}": "account_name", "{COLUMN1}": "other_account_details", "{COLUMN2}": "customer_id", "{COLUMN3}": "customer_first_name", "{COLUMN4}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "="}, "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"": {"{VALUE0}": "f", "{VALUE1}": "spring", "{COLUMN0}": "age", "{COLUMN1}": "stuid", "{COLUMN2}": "secretary_vote", "{COLUMN3}": "sex", "{COLUMN4}": "election_cycle", "{TABLE0}": "student", "{TABLE1}": "voting record", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"Zinfandel\"": {"{VALUE0}": "zinfandel", "{VALUE1}": "2009", "{COLUMN0}": "price", "{COLUMN1}": "cases", "{COLUMN2}": "year", "{COLUMN3}": "grape", "{TABLE0}": "wine", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  'APRIL' AND T3.last_name  =  'BURNS'": {"{VALUE0}": "april", "{VALUE1}": "burns", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "staff_id", "{COLUMN3}": "customer_id", "{TABLE0}": "staff", "{TABLE1}": "rental", "{TABLE2}": "customer", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998": {"{VALUE0}": "cproxy", "{VALUE12}": "1998", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "browser_id", "{COLUMN3}": "accelerator_id", "{COLUMN4}": "compatible_since_year", "{TABLE0}": "browser", "{TABLE1}": "accelerator compatible browser", "{TABLE2}": "web client accelerator", "{OP0}": "=", "{OP1}": ">"}, "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "lesson_time", "{COLUMN1}": "staff_id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "lessons", "{TABLE1}": "staff", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"": {"{VALUE0}": "nyc", "{VALUE1}": "spring", "{COLUMN0}": "stuid", "{COLUMN1}": "class_senator_vote", "{COLUMN2}": "city_code", "{COLUMN3}": "election_cycle", "{TABLE0}": "student", "{TABLE1}": "voting record", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT nickname FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "nickname", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "staff", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50": {"{VALUE0}": "red", "{VALUE9}": "50", "{COLUMN0}": "name", "{COLUMN1}": "grape", "{COLUMN2}": "color", "{COLUMN3}": "price", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{OP0}": "=", "{OP1}": ">"}, "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "zip_postcode", "{COLUMN1}": "address_id", "{COLUMN2}": "staff_address_id", "{COLUMN3}": "first_name", "{COLUMN4}": "last_name", "{TABLE0}": "addresses", "{TABLE1}": "staff", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"": {"{VALUE0}": "carole", "{VALUE1}": "bernhard", "{COLUMN0}": "zip_postcode", "{COLUMN1}": "customer_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "first_name", "{COLUMN4}": "last_name", "{TABLE0}": "customers", "{TABLE1}": "addresses", "{OP0}": "=", "{OP1}": "="}, "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "date_of_birth", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "staff", "{OP0}": "=", "{OP1}": "="}, "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5": {"{VALUE0}": "a4", "{VALUE2}": "5", "{COLUMN0}": "product", "{COLUMN1}": "max_page_size", "{COLUMN2}": "pages_per_minute_color", "{OP0}": "=", "{OP1}": "<"}, "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211' AND T2.enroll_grade  =  'C'": {"{VALUE0}": "acct-211", "{VALUE1}": "c", "{COLUMN0}": "stu_fname", "{COLUMN1}": "class_code", "{COLUMN2}": "stu_num", "{COLUMN3}": "crs_code", "{COLUMN4}": "enroll_grade", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "="}, "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"": {"{VALUE0}": "white", "{VALUE1}": "handful", "{COLUMN0}": "product_name", "{COLUMN1}": "product_category_code", "{COLUMN2}": "color_code", "{COLUMN3}": "color_description", "{COLUMN4}": "unit_of_measure", "{TABLE0}": "products", "{TABLE1}": "reference product categories", "{TABLE2}": "reference colors", "{OP0}": "=", "{OP1}": "!="}, "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25": {"{VALUE0}": "f", "{VALUE2}": "25", "{COLUMN0}": "sex", "{COLUMN1}": "age", "{TABLE0}": "student", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "count"}, "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"": {"{VALUE0}": "red", "{VALUE1}": "fast", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{COLUMN3}": "color_code", "{COLUMN4}": "color_description", "{COLUMN5}": "characteristic_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{TABLE3}": "reference colors", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'": {"{VALUE0}": "italy", "{VALUE1}": "american airlines", "{COLUMN0}": "dst_apid", "{COLUMN1}": "apid", "{COLUMN2}": "alid", "{COLUMN3}": "country", "{COLUMN4}": "name", "{TABLE0}": "routes", "{TABLE1}": "airports", "{TABLE2}": "airlines", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8": {"{VALUE0}": "50", "{VALUE1}": "8", "{COLUMN0}": "mean_humidity", "{COLUMN1}": "mean_visibility_miles", "{TABLE0}": "weather", "{OP0}": ">", "{OP1}": ">", "{AGG0}": "count"}, "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"": {"{VALUE0}": "evelina", "{VALUE1}": "bromley", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "="}, "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"": {"{VALUE0}": "1975-01-01", "{VALUE1}": "1976-01-01", "{COLUMN0}": "product_id", "{COLUMN1}": "order_id", "{COLUMN2}": "date_order_placed", "{TABLE0}": "orders", "{TABLE1}": "order items", "{OP0}": ">=", "{OP1}": "<="}, "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"": {"{VALUE0}": "carole", "{VALUE1}": "bernhard", "{COLUMN0}": "amount_payment", "{COLUMN1}": "customer_id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "customer payments", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"Heilo\" AND T2.title  =  \"Der Kapitan\"": {"{VALUE0}": "heilo", "{VALUE1}": "der kapitan", "{COLUMN0}": "type", "{COLUMN1}": "songid", "{COLUMN2}": "bandmate", "{COLUMN3}": "id", "{COLUMN4}": "lastname", "{COLUMN5}": "title", "{TABLE0}": "vocals", "{TABLE1}": "songs", "{TABLE2}": "band", "{OP0}": "=", "{OP1}": "="}, "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"": {"{VALUE0}": "best song", "{VALUE1}": "awarded", "{COLUMN0}": "date_of_ceremony", "{COLUMN1}": "music_festival", "{COLUMN2}": "category", "{COLUMN3}": "result", "{OP0}": "=", "{OP1}": "="}, "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"": {"{VALUE0}": "m", "{VALUE1}": "neb", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "sex", "{COLUMN3}": "building", "{TABLE0}": "faculty", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'": {"{VALUE0}": "yes", "{VALUE1}": "striker", "{COLUMN0}": "pname", "{COLUMN1}": "pid", "{COLUMN2}": "decision", "{COLUMN3}": "ppos", "{TABLE0}": "player", "{TABLE1}": "tryout", "{OP0}": "=", "{OP1}": "="}, "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"": {"{VALUE0}": "katsuhiro", "{VALUE1}": "ueno", "{COLUMN0}": "name", "{COLUMN1}": "authid", "{COLUMN2}": "instid", "{COLUMN3}": "fname", "{COLUMN4}": "lname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "=", "{OP1}": "="}, "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"Solveig\" AND T2.title  =  \"A Bar In Amsterdam\"": {"{VALUE0}": "solveig", "{VALUE1}": "a bar in amsterdam", "{COLUMN0}": "type", "{COLUMN1}": "songid", "{COLUMN2}": "bandmate", "{COLUMN3}": "id", "{COLUMN4}": "firstname", "{COLUMN5}": "title", "{TABLE0}": "vocals", "{TABLE1}": "songs", "{TABLE2}": "band", "{OP0}": "=", "{OP1}": "="}, "SELECT train_number ,  TIME FROM train WHERE origin  =  'Chennai' AND destination  =  'Guruvayur'": {"{VALUE0}": "chennai", "{VALUE1}": "guruvayur", "{COLUMN0}": "train_number", "{COLUMN1}": "time", "{COLUMN2}": "origin", "{COLUMN3}": "destination", "{TABLE0}": "train", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"": {"{VALUE0}": "art", "{VALUE1}": "turcotte", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";": {"{VALUE0}": "steve", "{VALUE1}": "johnson", "{COLUMN0}": "support_rep_id", "{COLUMN1}": "id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "employees", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";": {"{VALUE0}": "astrid", "{VALUE1}": "gruber", "{COLUMN0}": "email", "{COLUMN1}": "phone", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "customers", "{OP0}": "=", "{OP1}": "="}, "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'": {"{VALUE0}": "doctor", "{VALUE1}": "zach", "{COLUMN0}": "age", "{COLUMN1}": "job", "{COLUMN2}": "name", "{TABLE0}": "person", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"": {"{VALUE0}": "voluptatem", "{VALUE1}": "1995", "{COLUMN0}": "problem_id", "{COLUMN1}": "product_id", "{COLUMN2}": "product_name", "{COLUMN3}": "date_problem_reported", "{TABLE0}": "problems", "{TABLE1}": "product", "{OP0}": "=", "{OP1}": ">"}, "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";": {"{VALUE0}": "carole", "{VALUE1}": "bernhard", "{COLUMN0}": "date_became_customer", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "customers", "{OP0}": "=", "{OP1}": "="}, "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";": {"{VALUE0}": "linda", "{VALUE1}": "smith", "{COLUMN0}": "spent", "{COLUMN1}": "stuid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "student", "{TABLE1}": "visits restaurant", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'": {"{VALUE0}": "history", "{VALUE1}": "ph.d.", "{COLUMN0}": "emp_fname", "{COLUMN1}": "prof_office", "{COLUMN2}": "emp_num", "{COLUMN3}": "dept_code", "{COLUMN4}": "dept_name", "{COLUMN5}": "prof_high_degree", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Tracy\" AND t3.lname  =  \"Kim\"": {"{VALUE0}": "tracy", "{VALUE1}": "kim", "{COLUMN0}": "clubid", "{COLUMN1}": "stuid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"": {"{VALUE0}": "bootup baltimore", "{VALUE1}": "president", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "clubid", "{COLUMN3}": "stuid", "{COLUMN4}": "clubname", "{COLUMN5}": "position", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "="}, "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";": {"{VALUE0}": "chicago", "{VALUE1}": "il", "{COLUMN0}": "billing_city", "{COLUMN1}": "billing_state", "{TABLE0}": "invoices", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"": {"{VALUE0}": "art", "{VALUE1}": "turcotte", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "customers cards", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"": {"{VALUE0}": "gell", "{VALUE1}": "tami", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{COLUMN2}": "firstname", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "="}, "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"": {"{VALUE0}": "wy", "{VALUE1}": "credit card", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_name", "{COLUMN2}": "customer_address", "{COLUMN3}": "payment_method_code", "{TABLE0}": "customers", "{OP0}": "like", "{OP1}": "!="}, "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Atsushi\" AND t1.lname  =  \"Ohori\"": {"{VALUE0}": "atsushi", "{VALUE1}": "ohori", "{COLUMN0}": "authid", "{COLUMN1}": "paperid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT Sex FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";": {"{VALUE0}": "linda", "{VALUE1}": "smith", "{COLUMN0}": "sex", "{COLUMN1}": "fname", "{COLUMN2}": "lname", "{TABLE0}": "student", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Linda\" AND t3.lname  =  \"Smith\"": {"{VALUE0}": "linda", "{VALUE1}": "smith", "{COLUMN0}": "clubid", "{COLUMN1}": "stuid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010": {"{VALUE0}": "boston red stockings", "{VALUE9}": "2010", "{COLUMN0}": "salary", "{COLUMN1}": "team_id", "{COLUMN2}": "team_id_br", "{COLUMN3}": "name", "{COLUMN4}": "year", "{TABLE0}": "team", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000": {"{VALUE0}": "san jose state university", "{VALUE8}": "2000", "{COLUMN0}": "degrees", "{COLUMN1}": "id", "{COLUMN2}": "campus", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{OP1}": "="}, "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'": {"{VALUE0}": "alice", "{VALUE1}": "alice", "{COLUMN0}": "name", "{COLUMN1}": "friend", "{TABLE0}": "person friend", "{TABLE1}": "person", "{OP0}": "=", "{OP1}": "!="}, "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';": {"{VALUE0}": "columbia park", "{VALUE6}": "1907", "{COLUMN0}": "park", "{COLUMN1}": "park_id", "{COLUMN2}": "year", "{COLUMN3}": "park_name", "{TABLE0}": "home game", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "date_left_staff", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "staff", "{OP0}": "=", "{OP1}": "="}, "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"": {"{VALUE0}": "david", "{VALUE1}": "shieber", "{COLUMN0}": "hoursperweek", "{COLUMN1}": "gamesplayed", "{COLUMN2}": "stuid", "{COLUMN3}": "fname", "{COLUMN4}": "lname", "{TABLE0}": "sports info", "{TABLE1}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum", "{AGG1}": "sum"}, "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"": {"{VALUE0}": "monaco grand prix", "{VALUE7}": "2008", "{COLUMN0}": "fastestlapspeed", "{COLUMN1}": "raceid", "{COLUMN2}": "year", "{COLUMN3}": "name", "{TABLE0}": "drivers", "{TABLE1}": "driver standings", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "max"}, "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"": {"{VALUE0}": "mark", "{VALUE1}": "giuliano", "{COLUMN0}": "activity_name", "{COLUMN1}": "facid", "{COLUMN2}": "actid", "{COLUMN3}": "fname", "{COLUMN4}": "lname", "{TABLE0}": "faculty", "{TABLE1}": "faculty participates in", "{TABLE2}": "activity", "{OP0}": "=", "{OP1}": "="}, "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";": {"{VALUE0}": "roberto", "{VALUE1}": "almeida", "{COLUMN0}": "country", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "customers", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'": {"{VALUE0}": "smith hall", "{VALUE1}": "f", "{COLUMN0}": "stuid", "{COLUMN1}": "dormid", "{COLUMN2}": "dorm_name", "{COLUMN3}": "sex", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"": {"{VALUE0}": "professor", "{VALUE1}": "neb", "{COLUMN0}": "rank", "{COLUMN1}": "building", "{TABLE0}": "faculty", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"": {"{VALUE0}": "smith", "{VALUE1}": "linda", "{COLUMN0}": "gname", "{COLUMN1}": "gameid", "{COLUMN2}": "stuid", "{COLUMN3}": "lname", "{COLUMN4}": "fname", "{TABLE0}": "plays games", "{TABLE1}": "video games", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"": {"{VALUE0}": "marrotte", "{VALUE1}": "kirk", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";": {"{VALUE0}": "daan", "{VALUE1}": "peeters", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "invoice_id", "{COLUMN4}": "customer_id", "{COLUMN5}": "first_name", "{COLUMN6}": "last_name", "{TABLE0}": "tracks", "{TABLE1}": "invoice lines", "{TABLE2}": "invoices", "{TABLE3}": "customers", "{OP0}": "=", "{OP1}": "="}, "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950": {"{VALUE0}": "los angeles", "{VALUE2}": "1950", "{COLUMN0}": "campus", "{COLUMN1}": "county", "{COLUMN2}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{OP1}": ">"}, "SELECT cName FROM  tryout WHERE decision  =  'yes' AND pPos  =  'goalie'": {"{VALUE0}": "yes", "{VALUE1}": "goalie", "{COLUMN0}": "cname", "{COLUMN1}": "decision", "{COLUMN2}": "ppos", "{TABLE0}": "tryout", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM Faculty WHERE Sex  =  'F' AND Rank  =  \"Professor\"": {"{VALUE0}": "professor", "{VALUE1}": "f", "{COLUMN0}": "sex", "{COLUMN1}": "rank", "{TABLE0}": "faculty", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "amount_settled", "{COLUMN1}": "amount_claimed", "{TABLE0}": "claims", "{SC0}": "desc"}, "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2": {"{VALUE0}": "2", "{COLUMN0}": "venue", "{COLUMN1}": "name", "{COLUMN2}": "event_attendance", "{TABLE0}": "event", "{SC0}": "desc"}, "SELECT name FROM program ORDER BY launch DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "launch", "{TABLE0}": "program", "{SC0}": "desc"}, "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "range", "{COLUMN1}": "prominence", "{TABLE0}": "mountain", "{SC0}": "desc"}, "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "building", "{COLUMN2}": "budget", "{TABLE0}": "department", "{SC0}": "desc"}, "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "i_id", "{COLUMN2}": "id", "{COLUMN3}": "s_id", "{COLUMN4}": "tot_cred", "{TABLE0}": "advisor", "{TABLE1}": "instructor", "{TABLE2}": "student", "{SC0}": "desc"}, "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "membership_amount", "{TABLE0}": "branch", "{SC0}": "desc"}, "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "duration", "{COLUMN1}": "age", "{TABLE0}": "actor", "{SC0}": "desc"}, "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "famous_release_date", "{COLUMN1}": "artist", "{COLUMN2}": "age", "{SC0}": "desc"}, "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "furniture_id", "{COLUMN2}": "market_rate", "{TABLE0}": "furniture", "{SC0}": "desc"}, "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "flno", "{COLUMN1}": "distance", "{TABLE0}": "flight", "{SC0}": "asc"}, "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "cell_mobile_number", "{COLUMN1}": "student_id", "{COLUMN2}": "monthly_rental", "{TABLE0}": "student addresses", "{TABLE1}": "students", "{SC0}": "asc"}, "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "song", "{COLUMN1}": "volume", "{COLUMN2}": "weeks_on_top", "{SC0}": "desc"}, "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "address_id", "{COLUMN1}": "zip_postcode", "{COLUMN2}": "monthly_rental", "{TABLE0}": "addresses", "{TABLE1}": "student addresses", "{SC0}": "desc"}, "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "county_name", "{COLUMN1}": "population", "{TABLE0}": "county", "{SC0}": "desc"}, "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "mountain", "{SC0}": "desc"}, "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "days_held", "{TABLE0}": "wrestler", "{SC0}": "asc"}, "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "country_id", "{COLUMN3}": "height", "{TABLE0}": "country", "{TABLE1}": "roller coaster", "{SC0}": "desc"}, "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "headquarters", "{COLUMN1}": "sales_in_billion", "{TABLE0}": "company", "{SC0}": "desc"}, "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "part_id", "{COLUMN1}": "chargeable_amount", "{TABLE0}": "parts", "{SC0}": "asc"}, "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "publisher", "{COLUMN1}": "price", "{TABLE0}": "publication", "{SC0}": "desc"}, "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5": {"{VALUE6}": "5", "{COLUMN0}": "player_name", "{COLUMN1}": "birthday", "{COLUMN2}": "player_api_id", "{COLUMN3}": "potential", "{TABLE0}": "player", "{TABLE1}": "player attributes", "{SC0}": "desc"}, "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "location", "{COLUMN1}": "killed", "{TABLE0}": "perpetrator", "{SC0}": "desc"}, "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "employeeid", "{COLUMN3}": "dose", "{TABLE0}": "prescribes", "{SC0}": "desc"}, "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "year_join", "{TABLE0}": "artist", "{SC0}": "desc"}, "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "problem_log_id", "{COLUMN1}": "log_entry_date", "{TABLE0}": "problem log", "{SC0}": "desc"}, "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "weight", "{TABLE0}": "people", "{TABLE1}": "perpetrator", "{SC0}": "desc"}, "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "location", "{COLUMN1}": "number_of_hosts", "{TABLE0}": "party", "{SC0}": "desc"}, "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "support_rate", "{TABLE0}": "candidate", "{SC0}": "desc"}, "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "shop_name", "{COLUMN1}": "open_year", "{TABLE0}": "shop", "{SC0}": "desc"}, "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "international_passengers", "{TABLE0}": "airport", "{SC0}": "desc"}, "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "salary", "{TABLE0}": "instructor", "{SC0}": "desc"}, "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "amount", "{TABLE0}": "payment", "{SC0}": "desc"}, "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "date", "{COLUMN1}": "attendance", "{TABLE0}": "performance", "{SC0}": "desc"}, "SELECT Team FROM player ORDER BY Age DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "team", "{COLUMN1}": "player", "{COLUMN2}": "age", "{SC0}": "desc"}, "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "resname", "{COLUMN1}": "rating", "{TABLE0}": "restaurant", "{SC0}": "desc"}, "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "price", "{TABLE0}": "products", "{SC0}": "asc"}, "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "park", "{COLUMN1}": "speed", "{TABLE0}": "roller coaster", "{SC0}": "desc"}, "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "weight", "{TABLE0}": "entrepreneur", "{TABLE1}": "people", "{SC0}": "desc"}, "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "founded", "{COLUMN1}": "enrollment", "{TABLE0}": "university", "{SC0}": "desc"}, "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "starting_year", "{COLUMN1}": "age", "{TABLE0}": "technician", "{SC0}": "desc"}, "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "player_name", "{COLUMN1}": "votes", "{TABLE0}": "player", "{SC0}": "desc"}, "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "cust_name", "{COLUMN1}": "acc_type", "{COLUMN2}": "acc_bal", "{COLUMN3}": "credit_score", "{TABLE0}": "customer", "{SC0}": "desc"}, "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_date", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{SC0}": "desc"}, "SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "open_year", "{COLUMN1}": "name", "{COLUMN2}": "num_of_shops", "{TABLE0}": "manufacturer", "{SC0}": "desc"}, "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "date_claim_made", "{TABLE0}": "claims", "{SC0}": "asc"}, "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "date_to", "{TABLE0}": "project staff", "{SC0}": "desc"}, "SELECT Party FROM people ORDER BY Age ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "party", "{COLUMN1}": "age", "{TABLE0}": "people", "{SC0}": "asc"}, "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "song_name", "{COLUMN1}": "releasedate", "{TABLE0}": "song", "{SC0}": "desc"}, "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "weight", "{COLUMN1}": "height", "{TABLE0}": "people", "{SC0}": "asc"}, "SELECT name FROM races ORDER BY date DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "date", "{TABLE0}": "drivers", "{SC0}": "desc"}, "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "district_name", "{COLUMN1}": "city_population", "{TABLE0}": "district", "{SC0}": "desc"}, "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "payment_date", "{TABLE0}": "payment", "{SC0}": "asc"}, "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "document_name", "{COLUMN1}": "access_count", "{TABLE0}": "documents", "{SC0}": "desc"}, "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "host_city", "{COLUMN1}": "year", "{TABLE0}": "hosting city", "{SC0}": "desc"}, "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "catalog_entry_name", "{COLUMN1}": "capacity", "{TABLE0}": "catalog contents", "{SC0}": "asc"}, "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "speed", "{COLUMN1}": "length", "{TABLE0}": "roller coaster", "{SC0}": "desc"}, "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "gdp", "{COLUMN1}": "city", "{COLUMN2}": "regional_population", "{SC0}": "desc"}, "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "apt_number", "{COLUMN1}": "bedroom_count", "{TABLE0}": "apartments", "{SC0}": "desc"}, "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "roomid", "{COLUMN1}": "roomname", "{COLUMN2}": "baseprice", "{TABLE0}": "rooms", "{SC0}": "desc"}, "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "f_id", "{COLUMN1}": "duration", "{TABLE0}": "files", "{SC0}": "desc"}, "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "manufacturer_id", "{COLUMN1}": "num_of_shops", "{COLUMN2}": "price_in_dollar", "{TABLE0}": "manufacturer", "{TABLE1}": "furniture manufacte", "{SC0}": "desc"}, "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms", "{SC0}": "asc"}, "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30": {"{VALUE7}": "30", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "actor_id", "{TABLE0}": "film actor", "{TABLE1}": "actor", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "credits", "{COLUMN2}": "dept_name", "{COLUMN3}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1": {"{VALUE1}": "1", "{COLUMN0}": "location", "{COLUMN1}": "player", "{COLUMN2}": "school", "{COLUMN3}": "school_id", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5": {"{VALUE0}": "5", "{COLUMN0}": "competition_type", "{TABLE0}": "competition", "{OP0}": "<=", "{AGG0}": "count"}, "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2": {"{VALUE1}": "2", "{COLUMN0}": "product_id", "{COLUMN1}": "color_description", "{COLUMN2}": "color_code", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{TABLE2}": "product characteristics", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1": {"{VALUE1}": "1", "{COLUMN0}": "carrier", "{COLUMN1}": "device", "{COLUMN2}": "device_id", "{TABLE0}": "stock", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5": {"{VALUE0}": "5", "{COLUMN0}": "membership_card", "{TABLE0}": "member", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2": {"{VALUE2}": "2", "{COLUMN0}": "title", "{COLUMN1}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{OP0}": "=", "{AGG0}": "count"}, "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3": {"{VALUE0}": "3", "{COLUMN0}": "team", "{TABLE0}": "elimination", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "email", "{COLUMN2}": "uid", "{COLUMN3}": "f1", "{TABLE0}": "user profiles", "{TABLE1}": "follows", "{OP0}": ">", "{AGG0}": "count"}, "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2": {"{VALUE2}": "2", "{COLUMN0}": "characteristic_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;": {"{VALUE0}": "1", "{COLUMN0}": "document_id", "{TABLE0}": "draft copies", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1": {"{VALUE0}": "1", "{COLUMN0}": "director", "{TABLE0}": "movie", "{OP0}": "=", "{AGG0}": "count"}, "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2": {"{VALUE0}": "2", "{COLUMN0}": "city", "{TABLE0}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "customer_first_name", "{COLUMN1}": "customer_id", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "writer", "{TABLE0}": "book", "{OP0}": ">", "{AGG0}": "count"}, "SELECT title FROM course GROUP BY title HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "title", "{TABLE0}": "course", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "product_type_code", "{TABLE0}": "products", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{TABLE0}": "customer", "{TABLE1}": "loan", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2": {"{VALUE0}": "2", "{COLUMN0}": "nationality", "{TABLE0}": "ship", "{OP0}": ">", "{AGG0}": "count"}, "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3": {"{VALUE0}": "3", "{COLUMN0}": "location_code", "{TABLE0}": "document locations", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "location", "{TABLE0}": "performance", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2": {"{VALUE0}": "2", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "orders", "{TABLE1}": "customers", "{OP0}": "<=", "{AGG0}": "count"}, "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "project_id", "{TABLE0}": "documents", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2": {"{VALUE3}": "2", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "accelerator_id", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2": {"{VALUE0}": "2", "{COLUMN0}": "country", "{TABLE0}": "member", "{OP0}": ">", "{AGG0}": "count"}, "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "department_id", "{COLUMN1}": "salary", "{TABLE0}": "employees", "{OP0}": ">=", "{AGG0}": "sum", "{AGG1}": "count"}, "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2": {"{VALUE3}": "2", "{COLUMN0}": "course_description", "{COLUMN1}": "course_name", "{COLUMN2}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "student course enrolment", "{OP0}": ">", "{AGG0}": "count"}, "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2": {"{VALUE0}": "2", "{COLUMN0}": "event_name", "{TABLE0}": "party events", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "investor", "{TABLE0}": "entrepreneur", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2": {"{VALUE2}": "2", "{COLUMN0}": "name", "{COLUMN1}": "storm_id", "{TABLE0}": "storm", "{TABLE1}": "affected region", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2": {"{VALUE2}": "2", "{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "winning_aircraft", "{TABLE0}": "match", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1": {"{VALUE1}": "1", "{COLUMN0}": "pilot_name", "{COLUMN1}": "pilot_id", "{TABLE0}": "pilot record", "{TABLE1}": "pilot", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "headquarters", "{TABLE0}": "company", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2": {"{VALUE1}": "2", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "customers cards", "{TABLE1}": "customers", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "advisor", "{TABLE0}": "student", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "country_id", "{TABLE0}": "country", "{TABLE1}": "roller coaster", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2": {"{VALUE2}": "2", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "products in events", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30": {"{VALUE9}": "30", "{COLUMN0}": "driverid", "{COLUMN1}": "raceid", "{TABLE0}": "status", "{TABLE1}": "driver standings", "{TABLE2}": "drivers", "{OP0}": "<=", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2": {"{VALUE2}": "2", "{COLUMN0}": "county_name", "{COLUMN1}": "county_id", "{COLUMN2}": "district", "{TABLE0}": "county", "{TABLE1}": "election", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1": {"{VALUE0}": "1", "{COLUMN0}": "date_of_latest_revision", "{TABLE0}": "catalogs", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1": {"{VALUE1}": "1", "{COLUMN0}": "emp_fname", "{COLUMN1}": "prof_num", "{COLUMN2}": "emp_num", "{TABLE0}": "class", "{TABLE1}": "employee", "{OP0}": ">", "{AGG0}": "count"}, "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2": {"{VALUE0}": "2", "{COLUMN0}": "stuid", "{TABLE0}": "has allergy", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT Industry FROM Companies WHERE Headquarters  =  \"USA\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"China\"": {"{VALUE0}": "usa", "{VALUE1}": "china", "{COLUMN0}": "industry", "{COLUMN1}": "headquarters", "{TABLE0}": "companies", "{OP0}": "=", "{OP1}": "="}, "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'": {"{VALUE0}": "panama", "{VALUE1}": "malta", "{COLUMN0}": "type", "{COLUMN1}": "flag", "{TABLE0}": "ship", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'": {"{VALUE0}": "reggae", "{VALUE1}": "rock", "{COLUMN0}": "title", "{COLUMN1}": "albumid", "{COLUMN2}": "genreid", "{COLUMN3}": "name", "{TABLE0}": "album", "{TABLE1}": "track", "{TABLE2}": "genre", "{OP0}": "=", "{OP1}": "="}, "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008": {"{VALUE0}": "2012", "{VALUE1}": "2008", "{COLUMN0}": "location", "{COLUMN1}": "open_year", "{TABLE0}": "shop", "{OP0}": ">", "{OP1}": "<"}, "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35": {"{VALUE0}": "45", "{VALUE1}": "35", "{COLUMN0}": "nationality", "{COLUMN1}": "age", "{TABLE0}": "host", "{OP0}": ">", "{OP1}": "<"}, "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80": {"{VALUE0}": "90", "{VALUE1}": "80", "{COLUMN0}": "college", "{COLUMN1}": "scores", "{TABLE0}": "submission", "{OP0}": ">", "{OP1}": "<"}, "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'": {"{VALUE0}": "1986-08-26 20:49:27", "{VALUE1}": "1989-03-16 18:27:16", "{COLUMN0}": "grant_amount", "{COLUMN1}": "grant_id", "{COLUMN2}": "sent_date", "{COLUMN3}": "grant_end_date", "{TABLE0}": "grants", "{TABLE1}": "documents", "{OP0}": "<", "{OP1}": ">"}, "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"": {"{VALUE0}": "australian grand prix", "{VALUE1}": "chinese grand prix", "{COLUMN0}": "driverid", "{COLUMN1}": "forename", "{COLUMN2}": "raceid", "{COLUMN3}": "name", "{TABLE0}": "drivers", "{TABLE1}": "driver standings", "{TABLE2}": "status", "{OP0}": "=", "{OP1}": "="}, "SELECT rank FROM captain WHERE CLASS  =  'Cutter' INTERSECT SELECT rank FROM captain WHERE CLASS  =  'Armed schooner'": {"{VALUE0}": "cutter", "{VALUE1}": "armed schooner", "{COLUMN0}": "rank", "{COLUMN1}": "class", "{TABLE0}": "captain", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'": {"{VALUE0}": "inhibitor", "{VALUE1}": "activitor", "{COLUMN0}": "name", "{COLUMN1}": "trade_name", "{COLUMN2}": "medicine_id", "{COLUMN3}": "id", "{COLUMN4}": "interaction_type", "{TABLE0}": "medicine", "{TABLE1}": "medicine enzyme interaction", "{OP0}": "=", "{OP1}": "="}, "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\"": {"{VALUE0}": "morning", "{VALUE1}": "night", "{COLUMN0}": "owner", "{COLUMN1}": "program_id", "{COLUMN2}": "time_of_day", "{TABLE0}": "program", "{TABLE1}": "broadcast", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4": {"{VALUE6}": "3", "{VALUE13}": "4", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{COLUMN2}": "stars", "{TABLE0}": "rating", "{TABLE1}": "movie", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500": {"{VALUE6}": "100", "{VALUE13}": "500", "{COLUMN0}": "theme", "{COLUMN1}": "exhibition_id", "{COLUMN2}": "attendance", "{TABLE0}": "exhibition record", "{TABLE1}": "exhibition", "{OP0}": "<", "{OP1}": ">"}, "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000": {"{VALUE0}": "4500", "{VALUE1}": "3000", "{COLUMN0}": "product_type_code", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{OP0}": ">", "{OP1}": "<"}, "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"": {"{VALUE0}": "john wen", "{VALUE1}": "5000", "{COLUMN0}": "name", "{COLUMN1}": "procedures", "{COLUMN2}": "cost", "{COLUMN3}": "physician", "{COLUMN4}": "employeeid", "{COLUMN5}": "code", "{COLUMN6}": "treatment", "{TABLE0}": "trained in", "{OP0}": "<", "{OP1}": "="}, "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"": {"{VALUE0}": "midfielder", "{VALUE1}": "defender", "{COLUMN0}": "college", "{COLUMN1}": "position", "{TABLE0}": "match season", "{OP0}": "=", "{OP1}": "="}, "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"": {"{VALUE0}": "nicholas meyer", "{VALUE1}": "walter hill", "{COLUMN0}": "studio", "{COLUMN1}": "director", "{TABLE0}": "film", "{OP0}": "=", "{OP1}": "="}, "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'": {"{VALUE0}": "afghanistan", "{VALUE1}": "albania", "{COLUMN0}": "name", "{COLUMN1}": "region_id", "{COLUMN2}": "storm_id", "{COLUMN3}": "region_name", "{TABLE0}": "affected region", "{TABLE1}": "region", "{TABLE2}": "storm", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'": {"{VALUE0}": "movies", "{VALUE1}": "music", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "playlist_id", "{TABLE0}": "tracks", "{TABLE1}": "playlist tracks", "{TABLE2}": "playlists", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"": {"{VALUE0}": "london heathrow", "{VALUE1}": "london gatwick", "{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "airport_id", "{COLUMN3}": "airport_name", "{TABLE0}": "airport aircraft", "{TABLE1}": "airport", "{OP0}": "=", "{OP1}": "="}, "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000": {"{VALUE0}": "mp4", "{VALUE2}": "1000", "{COLUMN0}": "f_id", "{COLUMN1}": "formats", "{COLUMN2}": "resolution", "{TABLE0}": "files", "{TABLE1}": "song", "{OP0}": "=", "{OP1}": "<"}, "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"New policy application\"": {"{VALUE0}": "close a policy", "{VALUE1}": "new policy application", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "service_id", "{COLUMN3}": "service_name", "{TABLE0}": "customers", "{TABLE1}": "first notification of loss", "{TABLE2}": "services", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Completed' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  'Part'": {"{VALUE0}": "completed", "{VALUE1}": "part", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_status_code", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{OP0}": "=", "{OP1}": "="}, "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000": {"{VALUE0}": "140000", "{VALUE1}": "120000", "{COLUMN0}": "investor", "{COLUMN1}": "money_requested", "{TABLE0}": "entrepreneur", "{OP0}": ">", "{OP1}": "<"}, "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'": {"{VALUE0}": "louisville ,  kentucky", "{VALUE1}": "hiram ,  georgia", "{COLUMN0}": "name", "{COLUMN1}": "branch_id", "{COLUMN2}": "member_id", "{COLUMN3}": "hometown", "{TABLE0}": "membership register branch", "{TABLE1}": "branch", "{TABLE2}": "member", "{OP0}": "=", "{OP1}": "="}, "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990": {"{VALUE0}": "1989", "{VALUE1}": "1990", "{COLUMN0}": "publisher", "{COLUMN1}": "year", "{TABLE0}": "book club", "{OP0}": "=", "{OP1}": "="}, "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500": {"{VALUE0}": "1500", "{VALUE1}": "500", "{COLUMN0}": "status", "{COLUMN1}": "population", "{TABLE0}": "city", "{OP0}": ">", "{OP1}": "<"}, "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'GV' INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  'SF'": {"{VALUE0}": "gv", "{VALUE1}": "sf", "{COLUMN0}": "document_date", "{COLUMN1}": "document_id", "{COLUMN2}": "budget_type_code", "{TABLE0}": "documents", "{TABLE1}": "documents with expenses", "{OP0}": "=", "{OP1}": "="}, "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'": {"{VALUE0}": "friendly", "{VALUE1}": "tournament", "{COLUMN0}": "country", "{COLUMN1}": "competition_type", "{TABLE0}": "competition", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'": {"{VALUE0}": "mortgages", "{VALUE1}": "auto", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "loan_type", "{TABLE0}": "customer", "{TABLE1}": "loan", "{OP0}": "=", "{OP1}": "="}, "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Latte' INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  'Americano'": {"{VALUE0}": "latte", "{VALUE1}": "americano", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_id", "{COLUMN3}": "product_id", "{COLUMN4}": "product_details", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{TABLE2}": "order items", "{TABLE3}": "products", "{OP0}": "=", "{OP1}": "="}, "SELECT YEAR FROM festival_detail WHERE LOCATION  =  'United States' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != 'United States'": {"{VALUE0}": "united states", "{VALUE1}": "united states", "{COLUMN0}": "year", "{COLUMN1}": "location", "{TABLE0}": "festival detail", "{OP0}": "=", "{OP1}": "!="}, "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  'Y'": {"{VALUE0}": "y", "{VALUE1}": "600", "{COLUMN0}": "stuid", "{COLUMN1}": "major", "{COLUMN2}": "onscholarship", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"": {"{VALUE0}": "confirmed", "{VALUE1}": "provisional", "{COLUMN0}": "apt_number", "{COLUMN1}": "apt_id", "{COLUMN2}": "booking_status_code", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments", "{OP0}": "=", "{OP1}": "="}, "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"": {"{VALUE0}": "tony award", "{VALUE1}": "drama desk award", "{COLUMN0}": "nominee", "{COLUMN1}": "award", "{TABLE0}": "musical", "{OP0}": "=", "{OP1}": "="}, "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"": {"{VALUE0}": "football", "{VALUE1}": "f", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{COLUMN2}": "sportname", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Paper' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  'Patent'": {"{VALUE0}": "paper", "{VALUE1}": "patent", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{COLUMN2}": "outcome_code", "{TABLE0}": "projects", "{TABLE1}": "project outcomes", "{OP0}": "=", "{OP1}": "="}, "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC": {"{COLUMN0}": "vehicle_flight_number", "{COLUMN1}": "date", "{COLUMN2}": "pilot", "{COLUMN3}": "altitude", "{TABLE0}": "flight", "{SC0}": "asc"}, "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC": {"{COLUMN0}": "name", "{COLUMN1}": "musical_id", "{COLUMN2}": "year", "{TABLE0}": "actor", "{TABLE1}": "musical", "{SC0}": "desc"}, "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC": {"{COLUMN0}": "age", "{COLUMN1}": "gymnast_id", "{COLUMN2}": "people_id", "{COLUMN3}": "total_points", "{TABLE0}": "gymnast", "{TABLE1}": "people", "{SC0}": "desc"}, "SELECT name FROM captain ORDER BY age DESC": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "captain", "{SC0}": "desc"}, "SELECT Name FROM journalist ORDER BY Years_working ASC": {"{COLUMN0}": "name", "{COLUMN1}": "years_working", "{TABLE0}": "journalist", "{SC0}": "asc"}, "SELECT Author FROM submission ORDER BY Scores ASC": {"{COLUMN0}": "author", "{COLUMN1}": "scores", "{TABLE0}": "submission", "{SC0}": "asc"}, "SELECT name FROM browser ORDER BY market_share DESC": {"{COLUMN0}": "name", "{COLUMN1}": "market_share", "{TABLE0}": "browser", "{SC0}": "desc"}, "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC": {"{COLUMN0}": "company", "{COLUMN1}": "money_requested", "{TABLE0}": "entrepreneur", "{SC0}": "desc"}, "SELECT Name FROM wrestler ORDER BY Days_held DESC": {"{COLUMN0}": "name", "{COLUMN1}": "days_held", "{TABLE0}": "wrestler", "{SC0}": "desc"}, "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC": {"{COLUMN0}": "company", "{COLUMN1}": "rank", "{COLUMN2}": "sales_billion", "{SC0}": "desc"}, "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC": {"{COLUMN0}": "year", "{COLUMN1}": "book_title", "{COLUMN2}": "publisher", "{TABLE0}": "book club", "{SC0}": "desc"}, "SELECT Name FROM People ORDER BY Height ASC": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "people", "{SC0}": "asc"}, "SELECT name FROM buildings ORDER BY Height DESC": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "buildings", "{SC0}": "desc"}, "SELECT Date FROM game ORDER BY home_team DESC": {"{COLUMN0}": "date", "{COLUMN1}": "home_team", "{TABLE0}": "game", "{SC0}": "desc"}, "SELECT Name FROM People ORDER BY Weight ASC": {"{COLUMN0}": "name", "{COLUMN1}": "weight", "{TABLE0}": "people", "{SC0}": "asc"}, "SELECT Name FROM company ORDER BY Sales_in_Billion ASC": {"{COLUMN0}": "name", "{COLUMN1}": "sales_in_billion", "{TABLE0}": "company", "{SC0}": "asc"}, "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "total", "{TABLE0}": "body builder", "{TABLE1}": "people", "{SC0}": "desc"}, "SELECT Name FROM pilot ORDER BY Name ASC": {"{COLUMN0}": "name", "{TABLE0}": "pilot", "{SC0}": "asc"}, "SELECT team_name FROM basketball_match ORDER BY All_Home DESC": {"{COLUMN0}": "team_name", "{COLUMN1}": "all_home", "{TABLE0}": "basketball match", "{SC0}": "desc"}, "SELECT Theme FROM farm_competition ORDER BY YEAR ASC": {"{COLUMN0}": "theme", "{COLUMN1}": "year", "{TABLE0}": "farm competition", "{SC0}": "asc"}, "SELECT company ,  headquarters FROM company ORDER BY market_value DESC": {"{COLUMN0}": "company", "{COLUMN1}": "headquarters", "{COLUMN2}": "market_value", "{SC0}": "desc"}, "SELECT Builder FROM railway ORDER BY Builder ASC": {"{COLUMN0}": "builder", "{COLUMN1}": "railway", "{SC0}": "asc"}, "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC": {"{COLUMN0}": "case_burden", "{COLUMN1}": "population", "{TABLE0}": "county public safety", "{SC0}": "desc"}, "SELECT Name FROM actor ORDER BY Name ASC": {"{COLUMN0}": "name", "{TABLE0}": "actor", "{SC0}": "asc"}, "SELECT Name FROM county_public_safety ORDER BY Population DESC": {"{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "county public safety", "{SC0}": "desc"}, "SELECT name FROM Companies ORDER BY Market_Value_billion DESC": {"{COLUMN0}": "name", "{COLUMN1}": "market_value_billion", "{TABLE0}": "companies", "{SC0}": "desc"}, "SELECT apt_number FROM Apartments ORDER BY room_count ASC": {"{COLUMN0}": "apt_number", "{COLUMN1}": "room_count", "{TABLE0}": "apartments", "{SC0}": "asc"}, "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC": {"{COLUMN0}": "forename", "{TABLE0}": "status", "{SC0}": "asc"}, "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC": {"{COLUMN0}": "staff_details", "{TABLE0}": "research staff", "{SC0}": "asc"}, "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC": {"{COLUMN0}": "crime_rate", "{COLUMN1}": "police_officers", "{TABLE0}": "county public safety", "{SC0}": "asc"}, "SELECT County_name FROM county ORDER BY Population ASC": {"{COLUMN0}": "county_name", "{COLUMN1}": "population", "{TABLE0}": "county", "{SC0}": "asc"}, "SELECT Name FROM city ORDER BY Name ASC": {"{COLUMN0}": "name", "{TABLE0}": "city", "{SC0}": "asc"}, "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC": {"{COLUMN0}": "chair_name", "{COLUMN1}": "year", "{TABLE0}": "festival detail", "{SC0}": "asc"}, "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC": {"{COLUMN0}": "party_theme", "{COLUMN1}": "number_of_hosts", "{TABLE0}": "party", "{SC0}": "asc"}, "SELECT Product_Name FROM Products ORDER BY Product_Price ASC": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{SC0}": "asc"}, "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking": {"{COLUMN0}": "name", "{COLUMN1}": "district", "{COLUMN2}": "market_id", "{COLUMN3}": "phone_id", "{COLUMN4}": "ranking", "{TABLE0}": "phone market", "{TABLE1}": "market", "{TABLE2}": "phone"}, "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase": {"{COLUMN0}": "time_of_purchase", "{COLUMN1}": "age", "{COLUMN2}": "address", "{TABLE0}": "member"}, "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year": {"{COLUMN0}": "name", "{COLUMN1}": "address_road", "{COLUMN2}": "city", "{COLUMN3}": "open_year", "{TABLE0}": "branch"}, "SELECT personal_name ,  family_name FROM Students ORDER BY family_name": {"{COLUMN0}": "personal_name", "{COLUMN1}": "family_name", "{TABLE0}": "students"}, "SELECT name ,  service FROM train ORDER BY TIME": {"{COLUMN0}": "name", "{COLUMN1}": "service", "{COLUMN2}": "time", "{TABLE0}": "train"}, "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin": {"{COLUMN0}": "flno", "{COLUMN1}": "origin", "{COLUMN2}": "destination", "{TABLE0}": "flight"}, "SELECT name ,  job FROM Person ORDER BY name": {"{COLUMN0}": "name", "{COLUMN1}": "job", "{TABLE0}": "person"}, "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank": {"{COLUMN0}": "name", "{COLUMN1}": "machine_id", "{COLUMN2}": "technician_id", "{COLUMN3}": "quality_rank", "{TABLE0}": "repair assignment", "{TABLE1}": "machine", "{TABLE2}": "technician"}, "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year": {"{COLUMN0}": "station_id", "{COLUMN1}": "location", "{COLUMN2}": "manager_name", "{COLUMN3}": "open_year", "{TABLE0}": "gas station"}, "SELECT DISTINCT name FROM  instructor ORDER BY name": {"{COLUMN0}": "name", "{TABLE0}": "instructor"}, "SELECT name FROM people ORDER BY date_of_birth": {"{COLUMN0}": "name", "{COLUMN1}": "date_of_birth", "{TABLE0}": "people"}, "SELECT document_name ,  access_count FROM documents ORDER BY document_name": {"{COLUMN0}": "document_name", "{COLUMN1}": "access_count", "{TABLE0}": "documents"}, "SELECT name ,  dept_name FROM student ORDER BY tot_cred": {"{COLUMN0}": "name", "{COLUMN1}": "dept_name", "{COLUMN2}": "tot_cred", "{TABLE0}": "student"}, "SELECT DISTINCT region_name FROM region ORDER BY Label": {"{COLUMN0}": "region_name", "{COLUMN1}": "label", "{TABLE0}": "region"}, "SELECT name FROM scientists ORDER BY name": {"{COLUMN0}": "name", "{TABLE0}": "scientists"}, "SELECT first_name FROM people ORDER BY first_name": {"{COLUMN0}": "first_name", "{TABLE0}": "people"}, "SELECT DISTINCT product_name FROM product ORDER BY product_id": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "product"}, "SELECT CName FROM COURSE ORDER BY Credits": {"{COLUMN0}": "cname", "{COLUMN1}": "credits", "{TABLE0}": "course"}, "SELECT city FROM Addresses ORDER BY city": {"{COLUMN0}": "city", "{TABLE0}": "addresses"}, "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_phone", "{COLUMN2}": "customer_email", "{COLUMN3}": "date_became_customer", "{TABLE0}": "customers"}, "SELECT * FROM College ORDER BY enr": {"{COLUMN0}": "enr", "{TABLE0}": "college"}, "SELECT service_name FROM services ORDER BY service_name": {"{COLUMN0}": "service_name", "{TABLE0}": "services"}, "SELECT dname FROM department ORDER BY mgr_start_date": {"{COLUMN0}": "dname", "{COLUMN1}": "mgr_start_date", "{TABLE0}": "department"}, "SELECT name FROM accounts ORDER BY name": {"{COLUMN0}": "name", "{TABLE0}": "accounts"}, "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name": {"{COLUMN0}": "personal_name", "{TABLE0}": "course authors and tutors"}, "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id": {"{COLUMN0}": "source_system_code", "{COLUMN1}": "council_tax_id", "{COLUMN2}": "cmi_cross_ref_id", "{TABLE0}": "cmi cross references", "{TABLE1}": "benefits overpayments"}, "SELECT * FROM instructor ORDER BY salary": {"{COLUMN0}": "salary", "{TABLE0}": "instructor"}, "SELECT course_name FROM courses ORDER BY course_name": {"{COLUMN0}": "course_name", "{TABLE0}": "courses"}, "SELECT region_name FROM region ORDER BY region_name": {"{COLUMN0}": "region_name", "{TABLE0}": "region"}, "SELECT DISTINCT product_name FROM product ORDER BY product_name": {"{COLUMN0}": "product_name", "{TABLE0}": "product"}, "SELECT roomName FROM Rooms ORDER BY basePrice;": {"{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms"}, "SELECT gname ,  gtype FROM Video_games ORDER BY gname": {"{COLUMN0}": "gname", "{COLUMN1}": "gtype", "{TABLE0}": "video games"}, "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)": {"{COLUMN0}": "name", "{COLUMN1}": "city", "{COLUMN2}": "branch_id", "{TABLE0}": "branch", "{TABLE1}": "membership register branch"}, "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)": {"{COLUMN0}": "famous_title", "{COLUMN1}": "artist", "{COLUMN2}": "artist_id", "{COLUMN3}": "volume"}, "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)": {"{COLUMN0}": "name", "{COLUMN1}": "club_id", "{TABLE0}": "club", "{TABLE1}": "player"}, "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "people", "{TABLE1}": "perpetrator"}, "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "engineer_id", "{TABLE0}": "maintenance engineers", "{TABLE1}": "engineer visits"}, "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)": {"{COLUMN0}": "name", "{COLUMN1}": "musical_id", "{TABLE0}": "musical", "{TABLE1}": "actor"}, "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)": {"{COLUMN0}": "title", "{COLUMN1}": "book_id", "{TABLE0}": "book", "{TABLE1}": "publication"}, "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)": {"{COLUMN0}": "city", "{COLUMN1}": "customer_id", "{COLUMN2}": "address_id", "{TABLE0}": "addresses", "{TABLE1}": "customers", "{TABLE2}": "customer addresses"}, "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)": {"{COLUMN0}": "name", "{COLUMN1}": "team", "{COLUMN2}": "team_id", "{TABLE0}": "match season"}, "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )": {"{COLUMN0}": "id", "{COLUMN1}": "camera_lens_id", "{TABLE0}": "camera lens", "{TABLE1}": "photos", "{AGG0}": "count"}, "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)": {"{COLUMN0}": "name", "{COLUMN1}": "driver_id", "{TABLE0}": "driver", "{TABLE1}": "school bus"}, "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)": {"{COLUMN0}": "artistid", "{TABLE0}": "artist", "{TABLE1}": "album", "{AGG0}": "count"}, "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)": {"{COLUMN0}": "author", "{COLUMN1}": "submission_id", "{TABLE0}": "submission", "{TABLE1}": "acceptance"}, "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)": {"{COLUMN0}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{AGG0}": "count"}, "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)": {"{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "project", "{TABLE0}": "projects", "{TABLE1}": "assigned to"}, "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)": {"{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "winning_aircraft", "{TABLE0}": "match"}, "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)": {"{COLUMN0}": "title", "{COLUMN1}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite"}, "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_phone", "{COLUMN2}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "mailshot customers"}, "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )": {"{COLUMN0}": "product_id", "{TABLE0}": "products", "{TABLE1}": "order items", "{AGG0}": "count"}, "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)": {"{COLUMN0}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "accounts", "{AGG0}": "count"}, "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)": {"{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{TABLE0}": "student", "{TABLE1}": "enrolled in"}, "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)": {"{COLUMN0}": "official_name", "{COLUMN1}": "city_id", "{COLUMN2}": "host_city_id", "{TABLE0}": "city", "{TABLE1}": "farm competition"}, "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)": {"{COLUMN0}": "product_price", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "complaints"}, "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)": {"{COLUMN0}": "name", "{COLUMN1}": "county_id", "{TABLE0}": "county public safety", "{TABLE1}": "city"}, "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)": {"{COLUMN0}": "employee_id", "{TABLE0}": "employees", "{TABLE1}": "job history"}, "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)": {"{COLUMN0}": "pilot_name", "{COLUMN1}": "pilot_id", "{TABLE0}": "pilot", "{TABLE1}": "pilot record"}, "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)": {"{COLUMN0}": "document_name", "{COLUMN1}": "document_code", "{TABLE0}": "documents", "{TABLE1}": "document sections"}, "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)": {"{COLUMN0}": "roomid", "{COLUMN1}": "room", "{TABLE0}": "rooms", "{TABLE1}": "reservations", "{AGG0}": "count"}, "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)": {"{COLUMN0}": "party_name", "{COLUMN1}": "party_id", "{TABLE0}": "party", "{TABLE1}": "member"}, "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)": {"{COLUMN0}": "ssn", "{COLUMN1}": "scientist", "{TABLE0}": "scientists", "{TABLE1}": "assigned to", "{AGG0}": "count"}, "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );": {"{COLUMN0}": "id", "{COLUMN1}": "enzyme_id", "{TABLE0}": "enzyme", "{TABLE1}": "medicine enzyme interaction", "{AGG0}": "count"}, "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );": {"{COLUMN0}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "customer payments", "{AGG0}": "count"}, "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )": {"{COLUMN0}": "tourist_id", "{TABLE0}": "visitors", "{TABLE1}": "visits", "{AGG0}": "count"}, "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );": {"{COLUMN0}": "id", "{COLUMN1}": "accelerator_id", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{AGG0}": "count"}, "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)": {"{COLUMN0}": "name", "{COLUMN1}": "custid", "{COLUMN2}": "balance", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)": {"{COLUMN0}": "title", "{COLUMN1}": "credits", "{COLUMN2}": "building", "{COLUMN3}": "room_number", "{COLUMN4}": "course_id", "{COLUMN5}": "capacity", "{TABLE0}": "classroom", "{TABLE1}": "section", "{TABLE2}": "course", "{OP0}": "=", "{AGG0}": "max"}, "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)": {"{COLUMN0}": "dept_name", "{COLUMN1}": "building", "{COLUMN2}": "budget", "{TABLE0}": "department", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)": {"{COLUMN0}": "state", "{COLUMN1}": "enr", "{TABLE0}": "college", "{OP0}": "<", "{AGG0}": "max"}, "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)": {"{COLUMN0}": "balance", "{TABLE0}": "savings", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "avg"}, "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "year_opened", "{COLUMN3}": "seating", "{TABLE0}": "track", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)": {"{COLUMN0}": "dept_name", "{COLUMN1}": "budget", "{TABLE0}": "department", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)": {"{COLUMN0}": "number_deaths", "{COLUMN1}": "damage_millions_usd", "{COLUMN2}": "max_speed", "{TABLE0}": "storm", "{OP0}": ">", "{AGG0}": "sum", "{AGG1}": "sum", "{AGG2}": "avg"}, "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)": {"{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "age", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)": {"{COLUMN0}": "shop_id", "{COLUMN1}": "address", "{COLUMN2}": "score", "{TABLE0}": "shop", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )": {"{COLUMN0}": "date_claim_made", "{COLUMN1}": "amount_settled", "{TABLE0}": "claims", "{OP0}": "<=", "{AGG0}": "avg"}, "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)": {"{COLUMN0}": "name", "{COLUMN1}": "points", "{TABLE0}": "player", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)": {"{COLUMN0}": "customer_details", "{COLUMN1}": "policy_id", "{COLUMN2}": "customer_id", "{COLUMN3}": "amount_piad", "{TABLE0}": "claim headers", "{TABLE1}": "policies", "{TABLE2}": "customers", "{OP0}": "=", "{AGG0}": "min"}, "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)": {"{COLUMN0}": "name", "{COLUMN1}": "country", "{COLUMN2}": "age", "{TABLE0}": "people", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "people", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)": {"{COLUMN0}": "name", "{COLUMN1}": "furniture_id", "{COLUMN2}": "price_in_dollar", "{TABLE0}": "furniture", "{TABLE1}": "furniture manufacte", "{OP0}": "<", "{AGG0}": "max"}, "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "person", "{OP0}": "=", "{AGG0}": "max"}, "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)": {"{COLUMN0}": "salary", "{TABLE0}": "instructor", "{OP0}": "<", "{AGG0}": "max"}, "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)": {"{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "age", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )": {"{COLUMN0}": "player_name", "{COLUMN1}": "player_api_id", "{COLUMN2}": "overall_rating", "{TABLE0}": "player", "{TABLE1}": "player attributes", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)": {"{COLUMN0}": "state", "{COLUMN1}": "enr", "{TABLE0}": "college", "{OP0}": "<", "{AGG0}": "count", "{AGG1}": "avg"}, "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)": {"{COLUMN0}": "customer_details", "{COLUMN1}": "policy_id", "{COLUMN2}": "customer_id", "{COLUMN3}": "amount_claimed", "{TABLE0}": "claim headers", "{TABLE1}": "policies", "{TABLE2}": "customers", "{OP0}": "=", "{AGG0}": "max"}, "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)": {"{COLUMN0}": "team_name", "{COLUMN1}": "school_id", "{COLUMN2}": "enrollment", "{TABLE0}": "university", "{TABLE1}": "basketball match", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)": {"{COLUMN0}": "customer_details", "{COLUMN1}": "customer_id", "{COLUMN2}": "start_date", "{TABLE0}": "policies", "{TABLE1}": "customers", "{OP0}": "=", "{AGG0}": "max"}, "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );": {"{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)": {"{COLUMN0}": "campusfee", "{TABLE0}": "csu fees", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "avg"}, "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'": {"{VALUE0}": "united states", "{VALUE1}": "billund airport", "{COLUMN0}": "pilot", "{COLUMN1}": "id", "{COLUMN2}": "airport_id", "{COLUMN3}": "country", "{COLUMN4}": "name", "{TABLE0}": "airport", "{TABLE1}": "flight", "{OP0}": "=", "{OP1}": "="}, "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000": {"{VALUE0}": "5000", "{VALUE1}": "1000", "{COLUMN0}": "name", "{COLUMN1}": "height", "{COLUMN2}": "prominence", "{TABLE0}": "mountain", "{OP0}": ">", "{OP1}": ">"}, "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'": {"{VALUE0}": "dan", "{VALUE1}": "alice", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "friend", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "=", "{OP1}": "="}, "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36": {"{VALUE0}": "35", "{VALUE1}": "36", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "people", "{OP0}": "=", "{OP1}": "="}, "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100": {"{VALUE0}": "100", "{COLUMN0}": "date_of_transaction", "{COLUMN1}": "share_count", "{COLUMN2}": "amount_of_transaction", "{TABLE0}": "transactions", "{OP0}": ">=", "{OP1}": ">="}, "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10": {"{VALUE5}": "100", "{VALUE7}": "10", "{COLUMN0}": "exhibition_id", "{COLUMN1}": "attendance", "{COLUMN2}": "ticket_price", "{TABLE0}": "exhibition record", "{TABLE1}": "exhibition", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "count"}, "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000": {"{VALUE0}": "100", "{VALUE1}": "1000", "{COLUMN0}": "date_of_transaction", "{COLUMN1}": "share_count", "{COLUMN2}": "amount_of_transaction", "{TABLE0}": "transactions", "{OP0}": ">", "{OP1}": ">"}, "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30": {"{VALUE12}": "30", "{COLUMN0}": "name", "{COLUMN1}": "male_id", "{COLUMN2}": "people_id", "{COLUMN3}": "female_id", "{COLUMN4}": "church_id", "{COLUMN5}": "age", "{TABLE0}": "wedding", "{TABLE1}": "people", "{TABLE2}": "church", "{OP0}": ">", "{OP1}": ">"}, "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"": {"{VALUE0}": "human resource", "{VALUE1}": "manager", "{COLUMN0}": "employee_id", "{COLUMN1}": "role_code", "{COLUMN2}": "role_name", "{TABLE0}": "employees", "{TABLE1}": "roles", "{OP0}": "=", "{OP1}": "="}, "SELECT name FROM member WHERE address  =  'Harford' OR address  =  'Waterbury'": {"{VALUE0}": "harford", "{VALUE1}": "waterbury", "{COLUMN0}": "name", "{COLUMN1}": "address", "{TABLE0}": "member", "{OP0}": "=", "{OP1}": "="}, "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"": {"{VALUE0}": "england", "{VALUE1}": "wales", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "journalist", "{OP0}": "=", "{OP1}": "="}, "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500": {"{VALUE0}": "1500", "{VALUE1}": "500", "{COLUMN0}": "official_name", "{COLUMN1}": "population", "{TABLE0}": "city", "{OP0}": ">", "{OP1}": "<"}, "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10": {"{VALUE0}": "10", "{COLUMN0}": "name", "{COLUMN1}": "open_year", "{COLUMN2}": "num_of_shops", "{COLUMN3}": "num_of_factories", "{TABLE0}": "manufacturer", "{OP0}": ">", "{OP1}": "<"}, "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  'Electoral' OR T2.source_system_code  =  'Tax'": {"{VALUE0}": "electoral", "{VALUE1}": "tax", "{COLUMN0}": "electoral_register_id", "{COLUMN1}": "cmi_cross_ref_id", "{COLUMN2}": "source_system_code", "{TABLE0}": "electoral register", "{TABLE1}": "cmi cross references", "{OP0}": "=", "{OP1}": "="}, "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'": {"{VALUE0}": "tokyo", "{VALUE1}": "taiwan", "{COLUMN0}": "revenue", "{COLUMN1}": "headquarter", "{TABLE0}": "manufacturers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"": {"{VALUE0}": "jaskolski", "{VALUE1}": "langosh", "{COLUMN0}": "date_of_latest_logon", "{COLUMN1}": "family_name", "{TABLE0}": "students", "{OP0}": "=", "{OP1}": "="}, "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"": {"{VALUE0}": "hkg", "{VALUE1}": "chi", "{COLUMN0}": "city_code", "{TABLE0}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"": {"{VALUE0}": "france", "{VALUE1}": "belgium", "{COLUMN0}": "circuitid", "{COLUMN1}": "location", "{COLUMN2}": "country", "{TABLE0}": "races", "{OP0}": "=", "{OP1}": "="}, "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'": {"{VALUE0}": "london", "{VALUE1}": "2011", "{COLUMN0}": "membership_amount", "{COLUMN1}": "open_year", "{COLUMN2}": "city", "{TABLE0}": "branch", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "min", "{AGG1}": "max"}, "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"": {"{VALUE0}": "dining", "{VALUE1}": "trading policy", "{COLUMN0}": "product_price", "{COLUMN1}": "product_name", "{TABLE0}": "products", "{OP0}": "=", "{OP1}": "="}, "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"": {"{VALUE0}": "12:00:00", "{VALUE1}": "09:00:00", "{COLUMN0}": "name", "{COLUMN1}": "time", "{TABLE0}": "drivers", "{OP0}": ">", "{OP1}": "<"}, "SELECT name FROM circuits WHERE country = \"UK\" OR country = \"Malaysia\"": {"{VALUE0}": "uk", "{VALUE1}": "malaysia", "{COLUMN0}": "name", "{COLUMN1}": "country", "{TABLE0}": "races", "{OP0}": "=", "{OP1}": "="}, "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"": {"{VALUE0}": "1989-09-03", "{VALUE1}": "2007-12-25", "{COLUMN0}": "invoice_details", "{COLUMN1}": "invoice_date", "{TABLE0}": "invoices", "{OP0}": "<", "{OP1}": ">"}, "SELECT roomName FROM Rooms WHERE bedType  =  \"King\" OR bedType  =  \"Queen\";": {"{VALUE0}": "king", "{VALUE1}": "queen", "{COLUMN0}": "roomname", "{COLUMN1}": "bedtype", "{TABLE0}": "rooms", "{OP0}": "=", "{OP1}": "="}, "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "friend", "{TABLE0}": "person", "{TABLE1}": "person friend", "{AGG0}": "avg", "{AGG1}": "avg", "{SC0}": "desc"}, "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "color", "{COLUMN1}": "grape", "{COLUMN2}": "price", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{AGG0}": "avg", "{SC0}": "desc"}, "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "title", "{COLUMN1}": "stars", "{COLUMN2}": "mid", "{TABLE0}": "rating", "{TABLE1}": "movie", "{AGG0}": "avg", "{AGG1}": "avg", "{SC0}": "desc"}, "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "customer_id", "{COLUMN1}": "amount_paid", "{TABLE0}": "payments", "{AGG0}": "sum", "{AGG1}": "sum", "{SC0}": "desc"}, "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "major", "{TABLE0}": "student", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "asc"}, "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "bname", "{COLUMN1}": "branch_id", "{COLUMN2}": "amount", "{TABLE0}": "bank", "{TABLE1}": "loan", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "amount", "{TABLE0}": "customer", "{TABLE1}": "loan", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "effective_date", "{COLUMN1}": "claim_id", "{COLUMN2}": "settlement_amount", "{TABLE0}": "claims", "{TABLE1}": "settlements", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "customer_id", "{COLUMN3}": "amount", "{TABLE0}": "customer", "{TABLE1}": "payment", "{AGG0}": "sum", "{SC0}": "asc"}, "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "crs_code", "{COLUMN2}": "dept_code", "{COLUMN3}": "crs_credit", "{TABLE0}": "course", "{TABLE1}": "class", "{TABLE2}": "department", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "year", "{COLUMN1}": "degrees", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;": {"{VALUE0}": "8", "{COLUMN0}": "billing_country", "{COLUMN1}": "total", "{TABLE0}": "invoices", "{AGG0}": "sum", "{AGG1}": "sum", "{SC0}": "desc"}, "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "campus", "{COLUMN1}": "degrees", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "team_id", "{COLUMN2}": "salary", "{TABLE0}": "team", "{AGG0}": "avg", "{SC0}": "asc"}, "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "i_id", "{COLUMN2}": "rank", "{TABLE0}": "item", "{TABLE1}": "review", "{AGG0}": "avg", "{SC0}": "desc"}, "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "state", "{COLUMN1}": "no_of_customers", "{TABLE0}": "bank", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "credits", "{TABLE0}": "course", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;": {"{VALUE1}": "1", "{COLUMN0}": "decor", "{COLUMN1}": "room", "{COLUMN2}": "roomid", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{AGG0}": "count", "{SC0}": "asc"}, "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "apt_type_code", "{COLUMN1}": "bathroom_count", "{COLUMN2}": "bedroom_count", "{COLUMN3}": "room_count", "{TABLE0}": "apartments", "{AGG0}": "sum", "{SC0}": "desc"}, "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;": {"{VALUE0}": "10", "{COLUMN0}": "billing_country", "{COLUMN1}": "total", "{TABLE0}": "invoices", "{AGG0}": "avg", "{AGG1}": "avg", "{SC0}": "desc"}, "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\" GROUP BY investor_id": {"{VALUE0}": "sale", "{COLUMN0}": "investor_id", "{COLUMN1}": "transaction_type_code", "{TABLE0}": "transactions", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex": {"{VALUE0}": "85", "{COLUMN0}": "sex", "{COLUMN1}": "weight", "{TABLE0}": "people", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id": {"{VALUE6}": "2015", "{COLUMN0}": "name", "{COLUMN1}": "branch_id", "{COLUMN2}": "register_year", "{TABLE0}": "membership register branch", "{TABLE1}": "branch", "{OP0}": ">", "{AGG0}": "count"}, "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom": {"{VALUE0}": "0", "{VALUE1}": "0", "{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list", "{OP0}": "=", "{AGG0}": "count"}, "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation": {"{VALUE0}": "20000", "{COLUMN0}": "affiliation", "{COLUMN1}": "enrollment", "{TABLE0}": "university", "{OP0}": ">", "{AGG0}": "count"}, "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type": {"{VALUE0}": "50", "{COLUMN0}": "acc_bal", "{COLUMN1}": "acc_type", "{COLUMN2}": "credit_score", "{TABLE0}": "customer", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name": {"{VALUE9}": "20", "{COLUMN0}": "dorm_name", "{COLUMN1}": "stuid", "{COLUMN2}": "dormid", "{COLUMN3}": "age", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{OP0}": ">", "{AGG0}": "count"}, "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;": {"{VALUE0}": "120", "{COLUMN0}": "decor", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms", "{OP0}": ">", "{AGG0}": "count"}, "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job": {"{VALUE0}": "male", "{COLUMN0}": "age", "{COLUMN1}": "job", "{COLUMN2}": "gender", "{TABLE0}": "person", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;": {"{VALUE0}": "king", "{COLUMN0}": "decor", "{COLUMN1}": "bedtype", "{TABLE0}": "rooms", "{OP0}": "=", "{AGG0}": "count"}, "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos": {"{VALUE6}": "1000", "{COLUMN0}": "hs", "{COLUMN1}": "ppos", "{COLUMN2}": "pid", "{TABLE0}": "player", "{TABLE1}": "tryout", "{OP0}": ">", "{AGG0}": "max"}, "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code": {"{VALUE0}": "25", "{COLUMN0}": "zip_code", "{COLUMN1}": "max_wind_speed_mph", "{TABLE0}": "weather", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex": {"{VALUE0}": "50000", "{COLUMN0}": "sex", "{COLUMN1}": "salary", "{TABLE0}": "employee", "{OP0}": "<", "{AGG0}": "count"}, "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid": {"{VALUE6}": "100", "{COLUMN0}": "dormid", "{COLUMN1}": "student_capacity", "{TABLE0}": "dorm", "{TABLE1}": "has amenity", "{OP0}": ">", "{AGG0}": "count"}, "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;": {"{VALUE0}": "usa", "{COLUMN0}": "billing_state", "{COLUMN1}": "billing_country", "{TABLE0}": "invoices", "{OP0}": "=", "{AGG0}": "count"}, "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "gender", "{COLUMN1}": "artist_name", "{COLUMN2}": "resolution", "{TABLE0}": "artist", "{TABLE1}": "song"}, "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "lat", "{COLUMN1}": "long", "{COLUMN2}": "city", "{COLUMN3}": "id", "{COLUMN4}": "start_station_id", "{COLUMN5}": "duration", "{TABLE0}": "station", "{TABLE1}": "trip"}, "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1": {"{VALUE2}": "1", "{COLUMN0}": "team_name", "{COLUMN1}": "acc_regular_season", "{COLUMN2}": "school_id", "{COLUMN3}": "founded", "{TABLE0}": "university", "{TABLE1}": "basketball match"}, "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "lat", "{COLUMN2}": "city", "{TABLE0}": "station"}, "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "product_id", "{COLUMN1}": "product_type_code", "{COLUMN2}": "product_price", "{TABLE0}": "products"}, "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "ship_id", "{COLUMN2}": "age", "{TABLE0}": "ship", "{TABLE1}": "captain"}, "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "winery", "{COLUMN1}": "score", "{TABLE0}": "wine"}, "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "pilot_id", "{COLUMN3}": "winning_pilot", "{TABLE0}": "pilot", "{TABLE1}": "match"}, "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "order_id", "{COLUMN1}": "customer_id", "{COLUMN2}": "date_order_placed", "{TABLE0}": "orders"}, "SELECT Name FROM WINE ORDER BY Score LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "score", "{TABLE0}": "wine"}, "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "dept_code", "{COLUMN2}": "stu_gpa", "{TABLE0}": "student", "{TABLE1}": "department"}, "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "num_of_component", "{COLUMN2}": "market_rate", "{TABLE0}": "furniture"}, "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "last_name", "{COLUMN1}": "staff_id", "{COLUMN2}": "date_complaint_raised", "{TABLE0}": "staff", "{TABLE1}": "complaints"}, "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "problem_log_id", "{COLUMN1}": "problem_id", "{COLUMN2}": "log_entry_date", "{TABLE0}": "problem log"}, "SELECT name FROM procedures ORDER BY cost LIMIT 3": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "procedures", "{COLUMN2}": "cost"}, "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_lname", "{COLUMN2}": "emp_dob", "{TABLE0}": "employee"}, "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR": {"{VALUE0}": "100", "{COLUMN0}": "grape", "{COLUMN1}": "winery", "{COLUMN2}": "year", "{COLUMN3}": "price", "{TABLE0}": "wine", "{OP0}": ">"}, "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title": {"{VALUE9}": "2008", "{COLUMN0}": "title", "{COLUMN1}": "name", "{COLUMN2}": "course_id", "{COLUMN3}": "id", "{COLUMN4}": "year", "{TABLE0}": "course", "{TABLE1}": "teaches", "{TABLE2}": "instructor", "{OP0}": "="}, "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name": {"{VALUE0}": "pop", "{COLUMN0}": "duration", "{COLUMN1}": "file_size", "{COLUMN2}": "formats", "{COLUMN3}": "f_id", "{COLUMN4}": "genre_is", "{COLUMN5}": "song_name", "{TABLE0}": "files", "{TABLE1}": "song", "{OP0}": "="}, "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  'good' ORDER BY last_name": {"{VALUE0}": "good", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "gender_mf", "{COLUMN3}": "good_or_bad_customer", "{TABLE0}": "customers", "{OP0}": "="}, "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred": {"{VALUE0}": "math", "{COLUMN0}": "name", "{COLUMN1}": "i_id", "{COLUMN2}": "id", "{COLUMN3}": "s_id", "{COLUMN4}": "dept_name", "{COLUMN5}": "tot_cred", "{TABLE0}": "advisor", "{TABLE1}": "instructor", "{TABLE2}": "student", "{OP0}": "="}, "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"Cancelled\" ORDER BY order_date": {"{VALUE0}": "cancelled", "{COLUMN0}": "order_id", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_status_code", "{COLUMN3}": "order_date", "{TABLE0}": "customer orders", "{OP0}": "="}, "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating": {"{VALUE0}": "english", "{COLUMN0}": "f_id", "{COLUMN1}": "genre_is", "{COLUMN2}": "artist_name", "{COLUMN3}": "languages", "{COLUMN4}": "rating", "{TABLE0}": "song", "{OP0}": "="}, "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age": {"{VALUE0}": "male", "{COLUMN0}": "name", "{COLUMN1}": "gender", "{COLUMN2}": "age", "{TABLE0}": "person", "{OP0}": "="}, "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.registration_date": {"{VALUE0}": "statistics", "{COLUMN0}": "student_id", "{COLUMN1}": "course_id", "{COLUMN2}": "course_name", "{COLUMN3}": "registration_date", "{TABLE0}": "courses", "{TABLE1}": "student course registrations", "{OP0}": "="}, "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' ORDER BY emp_dob": {"{VALUE0}": "prof", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_jobcode", "{COLUMN2}": "emp_dob", "{TABLE0}": "employee", "{OP0}": "="}, "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname": {"{VALUE0}": "professor", "{COLUMN0}": "fname", "{COLUMN1}": "rank", "{TABLE0}": "faculty", "{OP0}": "="}, "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)": {"{VALUE0}": "94103", "{COLUMN0}": "id", "{COLUMN1}": "duration", "{COLUMN2}": "zip_code", "{TABLE0}": "trip", "{OP0}": ">=", "{OP1}": "=", "{AGG0}": "avg"}, "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)": {"{VALUE0}": "841", "{COLUMN0}": "driverid", "{COLUMN1}": "stop", "{COLUMN2}": "duration", "{COLUMN3}": "raceid", "{TABLE0}": "pitstops", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  'Biology')": {"{VALUE0}": "biology", "{COLUMN0}": "name", "{COLUMN1}": "salary", "{COLUMN2}": "dept_name", "{TABLE0}": "instructor", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')": {"{VALUE0}": "austin", "{COLUMN0}": "revenue", "{COLUMN1}": "headquarter", "{TABLE0}": "manufacturers", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "sum", "{AGG1}": "min"}, "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)": {"{VALUE0}": "8", "{COLUMN0}": "f_id", "{COLUMN1}": "resolution", "{COLUMN2}": "rating", "{TABLE0}": "song", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "max"}, "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )": {"{VALUE0}": "payam", "{COLUMN0}": "employee_id", "{COLUMN1}": "salary", "{COLUMN2}": "manager_id", "{COLUMN3}": "first_name", "{TABLE0}": "employees", "{OP0}": "=", "{OP1}": "="}, "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")": {"{VALUE0}": "steven spielberg", "{COLUMN0}": "title", "{COLUMN1}": "year", "{COLUMN2}": "director", "{TABLE0}": "movie", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "max"}, "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')": {"{VALUE0}": "clerical staff", "{COLUMN0}": "staff_id", "{COLUMN1}": "date_assigned_to", "{COLUMN2}": "job_title_code", "{TABLE0}": "staff department assignments", "{OP0}": "<", "{OP1}": "=", "{AGG0}": "max"}, "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')": {"{VALUE0}": "fl", "{COLUMN0}": "cname", "{COLUMN1}": "enr", "{COLUMN2}": "state", "{TABLE0}": "college", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")": {"{VALUE0}": "cancelled", "{COLUMN0}": "customer_id", "{COLUMN1}": "order_date", "{COLUMN2}": "order_status_code", "{TABLE0}": "customer orders", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60": {"{VALUE7}": "60", "{COLUMN0}": "id", "{COLUMN1}": "zip_code", "{COLUMN2}": "mean_temperature_f", "{TABLE0}": "trip", "{TABLE1}": "weather", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200": {"{VALUE10}": "200", "{COLUMN0}": "name", "{COLUMN1}": "exhibition_id", "{COLUMN2}": "artist_id", "{COLUMN3}": "attendance", "{TABLE0}": "exhibition record", "{TABLE1}": "exhibition", "{TABLE2}": "artist", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;": {"{VALUE7}": "10", "{COLUMN0}": "title", "{COLUMN1}": "id", "{COLUMN2}": "album_id", "{TABLE0}": "albums", "{TABLE1}": "tracks", "{OP0}": ">", "{AGG0}": "count"}, "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5": {"{VALUE0}": "5", "{COLUMN0}": "dept_name", "{COLUMN1}": "school_code", "{TABLE0}": "department", "{OP0}": "<", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;": {"{VALUE7}": "100", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "playlist_id", "{COLUMN3}": "track_id", "{TABLE0}": "playlist tracks", "{TABLE1}": "playlists", "{OP0}": ">", "{AGG0}": "count"}, "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000": {"{VALUE0}": "1000000", "{COLUMN0}": "product_name", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{OP0}": "<", "{AGG0}": "avg"}, "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5": {"{VALUE0}": "5", "{COLUMN0}": "channel_code", "{COLUMN1}": "customer_id", "{TABLE0}": "customer contact channels", "{OP0}": "<", "{AGG0}": "count"}, "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000": {"{VALUE5}": "1000", "{COLUMN0}": "gname", "{COLUMN1}": "gameid", "{COLUMN2}": "hours_played", "{TABLE0}": "plays games", "{TABLE1}": "video games", "{OP0}": ">=", "{AGG0}": "sum"}, "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000": {"{VALUE0}": "8000", "{COLUMN0}": "job_id", "{COLUMN1}": "salary", "{TABLE0}": "employees", "{OP0}": ">", "{AGG0}": "avg"}, "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')": {"{VALUE0}": "midshipman", "{COLUMN0}": "name", "{COLUMN1}": "flag", "{COLUMN2}": "ship_id", "{COLUMN3}": "rank", "{TABLE0}": "ship", "{TABLE1}": "captain", "{OP0}": "="}, "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"London\")": {"{VALUE0}": "london", "{COLUMN0}": "name", "{COLUMN1}": "train_id", "{COLUMN2}": "station_id", "{COLUMN3}": "location", "{TABLE0}": "train station", "{TABLE1}": "train", "{TABLE2}": "station", "{OP0}": "="}, "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')": {"{VALUE0}": "tv lounge", "{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "dormid", "{COLUMN4}": "amenid", "{COLUMN5}": "amenity_name", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "has amenity", "{TABLE3}": "dorm amenity", "{OP0}": "="}, "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  'Australia')": {"{VALUE0}": "australia", "{COLUMN0}": "name", "{COLUMN1}": "pilot_id", "{COLUMN2}": "winning_pilot", "{COLUMN3}": "country", "{TABLE0}": "pilot", "{TABLE1}": "match", "{OP0}": "="}, "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )": {"{VALUE0}": "researcher", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{COLUMN2}": "role_code", "{TABLE0}": "projects", "{TABLE1}": "project staff", "{OP0}": "="}, "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')": {"{VALUE0}": "sonoma", "{COLUMN0}": "price", "{COLUMN1}": "appelation", "{COLUMN2}": "county", "{TABLE0}": "wine", "{TABLE1}": "appellations", "{OP0}": "=", "{AGG0}": "avg"}, "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')": {"{VALUE0}": "austin", "{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "city", "{TABLE0}": "person friend", "{TABLE1}": "person", "{OP0}": "=", "{AGG0}": "count"}, "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")": {"{VALUE0}": "food", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "stuid", "{COLUMN3}": "allergy", "{COLUMN4}": "allergytype", "{TABLE0}": "student", "{TABLE1}": "has allergy", "{TABLE2}": "allergy type", "{OP0}": "="}, "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )": {"{VALUE0}": "3000", "{COLUMN0}": "country_id", "{COLUMN1}": "length", "{TABLE0}": "country", "{TABLE1}": "roller coaster", "{OP0}": ">", "{AGG0}": "count"}, "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;": {"{VALUE1}": "1", "{VALUE7}": "2008", "{COLUMN0}": "name", "{COLUMN1}": "team_id_winner", "{COLUMN2}": "team_id_br", "{COLUMN3}": "year", "{TABLE0}": "postseason", "{TABLE1}": "team", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3": {"{VALUE0}": "94107", "{VALUE1}": "3", "{COLUMN0}": "cloud_cover", "{COLUMN1}": "zip_code", "{TABLE0}": "weather", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "apt_type_code", "{COLUMN1}": "bathroom_count", "{TABLE0}": "apartments", "{OP0}": ">", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "f", "{VALUE1}": "1", "{COLUMN0}": "clubname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "sex", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1": {"{VALUE0}": "8/", "{VALUE2}": "1", "{COLUMN0}": "start_station_name", "{COLUMN1}": "start_station_id", "{COLUMN2}": "start_date", "{TABLE0}": "trip", "{OP0}": "like", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "ph.d.", "{VALUE2}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "dept_code", "{COLUMN2}": "prof_high_degree", "{TABLE0}": "professor", "{TABLE1}": "department", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;": {"{VALUE0}": "usa", "{VALUE2}": "1", "{COLUMN0}": "billing_state", "{COLUMN1}": "billing_country", "{TABLE0}": "invoices", "{OP0}": "=", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"back\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "back", "{VALUE2}": "1", "{COLUMN0}": "lastname", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "stageposition", "{TABLE0}": "performance", "{TABLE1}": "band", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2": {"{VALUE0}": "300", "{VALUE1}": "2", "{COLUMN0}": "location", "{COLUMN1}": "capacity", "{TABLE0}": "cinema", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1": {"{VALUE0}": "1", "{VALUE7}": "900", "{COLUMN0}": "artist_name", "{COLUMN1}": "country", "{COLUMN2}": "resolution", "{TABLE0}": "artist", "{TABLE1}": "song", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2": {"{VALUE0}": "credit card", "{VALUE3}": "2", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "payment_method_code", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "count"}, "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2": {"{VALUE0}": "order", "{VALUE1}": "2", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "outcome_code", "{TABLE0}": "mailshot customers", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1": {"{VALUE0}": "null", "{VALUE2}": "1", "{COLUMN0}": "director", "{TABLE0}": "movie", "{OP0}": "!=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2": {"{VALUE0}": "sale", "{VALUE1}": "2", "{COLUMN0}": "investor_id", "{COLUMN1}": "investor_details", "{COLUMN2}": "transaction_type_code", "{TABLE0}": "investors", "{TABLE1}": "transactions", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2": {"{VALUE0}": "banking", "{VALUE2}": "2", "{COLUMN0}": "headquarters", "{COLUMN1}": "company", "{COLUMN2}": "main_industry", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2": {"{VALUE0}": "1", "{VALUE1}": "1", "{VALUE5}": "2", "{COLUMN0}": "driverid", "{COLUMN1}": "forename", "{COLUMN2}": "surname", "{COLUMN3}": "position", "{TABLE0}": "status", "{TABLE1}": "laptimes", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010": {"{VALUE0}": "chandler", "{VALUE1}": "fall", "{VALUE9}": "2010", "{COLUMN0}": "title", "{COLUMN1}": "course_id", "{COLUMN2}": "building", "{COLUMN3}": "semester", "{COLUMN4}": "year", "{TABLE0}": "course", "{TABLE1}": "section", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{VALUE2}": "s", "{COLUMN0}": "lesson_id", "{COLUMN1}": "staff_id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{COLUMN4}": "nickname", "{TABLE0}": "lessons", "{TABLE1}": "staff", "{OP0}": "=", "{OP1}": "=", "{OP2}": "like"}, "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200": {"{VALUE6}": "1956", "{VALUE7}": "400", "{VALUE8}": "200", "{COLUMN0}": "campus", "{COLUMN1}": "id", "{COLUMN2}": "year", "{COLUMN3}": "totalenrollment_ay", "{COLUMN4}": "fte_ay", "{TABLE0}": "campuses", "{TABLE1}": "enrollments", "{OP0}": "=", "{OP1}": ">", "{OP2}": ">"}, "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"": {"{VALUE0}": "japan", "{VALUE1}": "ohori", "{VALUE3}": "1", "{COLUMN0}": "title", "{COLUMN1}": "authid", "{COLUMN2}": "paperid", "{COLUMN3}": "instid", "{COLUMN4}": "country", "{COLUMN5}": "authorder", "{COLUMN6}": "lname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{TABLE3}": "institution", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"Fog\" AND EVENTS != \"Rain\"": {"{VALUE0}": "fog", "{VALUE1}": "rain", "{VALUE2}": "94107", "{COLUMN0}": "date", "{COLUMN1}": "zip_code", "{COLUMN2}": "events", "{TABLE0}": "weather", "{OP0}": "=", "{OP1}": "!=", "{OP2}": "!="}, "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004": {"{VALUE6}": "600", "{VALUE8}": "1000", "{VALUE10}": "2004", "{COLUMN0}": "campus", "{COLUMN1}": "faculty", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": ">=", "{OP1}": "<=", "{OP2}": "="}, "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"COVIN\" AND T2.lastname != \"JEROME\"": {"{VALUE0}": "covin", "{VALUE1}": "jerome", "{VALUE8}": "3", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{COLUMN2}": "grade", "{COLUMN3}": "firstname", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "!=", "{OP2}": "!="}, "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  'Elsa'": {"{VALUE0}": "elsa", "{VALUE1}": "10", "{COLUMN0}": "payment_date", "{COLUMN1}": "amount", "{COLUMN2}": "staff_id", "{COLUMN3}": "first_name", "{TABLE0}": "payment", "{TABLE1}": "staff", "{OP0}": ">", "{OP1}": "="}, "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'park' UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  'shopping'": {"{VALUE0}": "park", "{VALUE1}": "shopping", "{COLUMN0}": "name", "{COLUMN1}": "tourist_attraction_id", "{COLUMN2}": "feature_id", "{COLUMN3}": "feature_details", "{TABLE0}": "tourist attractions", "{TABLE1}": "tourist attraction features", "{TABLE2}": "features", "{OP0}": "=", "{OP1}": "="}, "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121": {"{VALUE0}": "121", "{COLUMN0}": "course_id", "{COLUMN1}": "student_id", "{TABLE0}": "student course registrations", "{TABLE1}": "student course attendance", "{OP0}": "=", "{OP1}": "="}, "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001": {"{VALUE0}": "2010", "{VALUE1}": "2001", "{COLUMN0}": "salary", "{COLUMN1}": "year", "{OP0}": "=", "{OP1}": "="}, "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;": {"{VALUE0}": "1000", "{VALUE1}": "3000", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "amount_outstanding", "{TABLE0}": "customers"}, "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5": {"{VALUE6}": "3", "{VALUE7}": "5", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{COLUMN2}": "stars", "{TABLE0}": "rating", "{TABLE1}": "movie"}, "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20": {"{VALUE0}": "10", "{VALUE1}": "20", "{COLUMN0}": "date_became_customer", "{COLUMN1}": "customer_id", "{TABLE0}": "customers"}, "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000": {"{VALUE0}": "8000", "{VALUE1}": "12000", "{COLUMN0}": "phone_number", "{COLUMN1}": "salary", "{TABLE0}": "employees"}, "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840": {"{VALUE0}": "1830", "{VALUE1}": "1840", "{COLUMN0}": "organized_by", "{COLUMN1}": "name", "{COLUMN2}": "open_date", "{TABLE0}": "church"}, "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150": {"{VALUE0}": "120", "{VALUE1}": "150", "{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms"}, "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC": {"{COLUMN0}": "country", "{TABLE0}": "airports", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC": {"{COLUMN0}": "gender_code", "{TABLE0}": "guests", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC": {"{COLUMN0}": "country", "{TABLE0}": "airlines", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC": {"{COLUMN0}": "software_platform", "{COLUMN1}": "device", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC": {"{COLUMN0}": "resident_id", "{COLUMN1}": "other_details", "{TABLE0}": "residents", "{TABLE1}": "residents services", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC": {"{COLUMN0}": "project_id", "{TABLE0}": "project staff", "{TABLE1}": "projects", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "asc"}, "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1": {"{VALUE0}": "1", "{VALUE6}": "2003", "{COLUMN0}": "campus", "{COLUMN1}": "faculty", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{SC0}": "desc"}, "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1": {"{VALUE0}": "history", "{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "dept_name", "{COLUMN2}": "tot_cred", "{TABLE0}": "student", "{OP0}": "=", "{SC0}": "desc"}, "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;": {"{VALUE0}": "2001", "{VALUE1}": "3", "{COLUMN0}": "salary", "{COLUMN1}": "year", "{OP0}": "=", "{SC0}": "desc"}, "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1": {"{VALUE0}": "301", "{VALUE1}": "1", "{COLUMN0}": "student_id", "{COLUMN1}": "course_id", "{COLUMN2}": "date_of_attendance", "{TABLE0}": "student course attendance", "{OP0}": "=", "{SC0}": "desc"}, "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'": {"{VALUE0}": "movies", "{VALUE1}": "music", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "playlist_id", "{TABLE0}": "tracks", "{TABLE1}": "playlist tracks", "{TABLE2}": "playlists", "{OP0}": "=", "{OP1}": "="}, "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"": {"{VALUE0}": "john wen", "{VALUE1}": "1000", "{COLUMN0}": "name", "{COLUMN1}": "procedures", "{COLUMN2}": "cost", "{COLUMN3}": "physician", "{COLUMN4}": "employeeid", "{COLUMN5}": "code", "{COLUMN6}": "treatment", "{TABLE0}": "trained in", "{OP0}": ">", "{OP1}": "="}, "SELECT cName FROM  tryout WHERE pPos  =  'mid' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  'goalie'": {"{VALUE0}": "mid", "{VALUE1}": "goalie", "{COLUMN0}": "cname", "{COLUMN1}": "ppos", "{TABLE0}": "tryout", "{OP0}": "=", "{OP1}": "="}, "SELECT StuID FROM Student WHERE sex  =  'M' EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"": {"{VALUE0}": "football", "{VALUE1}": "m", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{COLUMN2}": "sportname", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")": {"{VALUE0}": "food", "{VALUE1}": "animal", "{COLUMN0}": "age", "{COLUMN1}": "stuid", "{COLUMN2}": "allergy", "{COLUMN3}": "allergytype", "{TABLE0}": "student", "{TABLE1}": "has allergy", "{TABLE2}": "allergy type", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")": {"{VALUE0}": "football", "{VALUE1}": "lacrosse", "{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "sportname", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")": {"{VALUE0}": "milk", "{VALUE1}": "cat", "{COLUMN0}": "lname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "allergy", "{TABLE0}": "student", "{TABLE1}": "has allergy", "{OP0}": "=", "{OP1}": "="}, "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")": {"{VALUE0}": "call of destiny", "{VALUE1}": "works of widenius", "{COLUMN0}": "lname", "{COLUMN1}": "sex", "{COLUMN2}": "stuid", "{COLUMN3}": "gameid", "{COLUMN4}": "gname", "{TABLE0}": "student", "{TABLE1}": "plays games", "{TABLE2}": "video games", "{OP0}": "=", "{OP1}": "="}, "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance": {"{COLUMN0}": "name", "{COLUMN1}": "balance", "{COLUMN2}": "custid", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{TABLE2}": "savings", "{OP0}": "<"}, "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title": {"{COLUMN0}": "title", "{COLUMN1}": "year", "{COLUMN2}": "director", "{TABLE0}": "movie", "{OP0}": "!="}, "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id": {"{COLUMN0}": "department_id", "{COLUMN1}": "employee_id", "{COLUMN2}": "manager_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{OP0}": "="}, "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)": {"{VALUE0}": "1", "{COLUMN0}": "total_amount_purchased", "{COLUMN1}": "total_value_purchased", "{COLUMN2}": "supplier_id", "{TABLE0}": "product suppliers", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg", "{AGG2}": "count", "{SC0}": "desc"}, "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)": {"{VALUE0}": "1", "{COLUMN0}": "product", "{COLUMN1}": "max_page_size", "{OP0}": "!=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "major", "{TABLE0}": "student", "{OP0}": "!=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "payment_method", "{TABLE0}": "customers", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num": {"{VALUE0}": "history", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_num", "{COLUMN2}": "dept_code", "{COLUMN3}": "dept_name", "{COLUMN4}": "prof_num", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{TABLE3}": "class", "{OP0}": "="}, "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses": {"{VALUE0}": "cv", "{COLUMN0}": "document_id", "{COLUMN1}": "document_type_code", "{TABLE0}": "documents", "{TABLE1}": "documents with expenses", "{OP0}": "="}, "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "school_code", "{COLUMN1}": "dept_code", "{TABLE0}": "department", "{TABLE1}": "professor", "{AGG0}": "count"}, "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "student_id", "{TABLE0}": "student course registrations", "{AGG0}": "count"}, "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "semester", "{COLUMN1}": "year", "{TABLE0}": "section", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "lname", "{COLUMN1}": "authid", "{COLUMN2}": "paperid", "{COLUMN3}": "fname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1": {"{VALUE2}": "1", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{TABLE0}": "list", "{TABLE1}": "teachers", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC": {"{VALUE0}": "london", "{COLUMN0}": "name", "{COLUMN1}": "time", "{COLUMN2}": "station_id", "{COLUMN3}": "train_id", "{COLUMN4}": "location", "{TABLE0}": "train station", "{TABLE1}": "station", "{TABLE2}": "train", "{OP0}": "=", "{SC0}": "desc"}, "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC": {"{VALUE0}": "30", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "pilot", "{OP0}": "<=", "{SC0}": "desc"}, "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')": {"{VALUE0}": "mid", "{VALUE1}": "goalie", "{COLUMN0}": "state", "{COLUMN1}": "cname", "{COLUMN2}": "ppos", "{TABLE0}": "college", "{TABLE1}": "tryout", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus": {"{VALUE0}": "orange", "{VALUE10}": "2000", "{COLUMN0}": "campus", "{COLUMN1}": "degrees", "{COLUMN2}": "id", "{COLUMN3}": "county", "{COLUMN4}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "sum"}, "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus": {"{VALUE7}": "1998", "{VALUE9}": "2002", "{COLUMN0}": "campus", "{COLUMN1}": "degrees", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": ">=", "{OP1}": "<=", "{AGG0}": "sum"}, "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city": {"{COLUMN0}": "city", "{COLUMN1}": "city_id", "{COLUMN2}": "feb", "{COLUMN3}": "jun", "{COLUMN4}": "host_city", "{TABLE0}": "temperature", "{TABLE1}": "hosting city", "{OP0}": ">"}, "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title": {"{COLUMN0}": "title", "{COLUMN1}": "director", "{TABLE0}": "movie", "{OP0}": "!="}, "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)": {"{VALUE1}": "1", "{COLUMN0}": "pname", "{COLUMN1}": "pid", "{COLUMN2}": "cname", "{COLUMN3}": "enr", "{TABLE0}": "tryout", "{TABLE1}": "player", "{TABLE2}": "college", "{OP0}": "=", "{SC0}": "desc"}, "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')": {"{VALUE0}": "j", "{COLUMN0}": "employee_id", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{COLUMN3}": "salary", "{COLUMN4}": "department_id", "{TABLE0}": "employees", "{OP0}": ">", "{OP1}": "like", "{AGG0}": "avg"}, "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')": {"{VALUE0}": "international finance", "{COLUMN0}": "title", "{COLUMN1}": "course_id", "{COLUMN2}": "prereq_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{OP0}": "="}, "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'leader'": {"{VALUE0}": "leader", "{VALUE1}": "1", "{COLUMN0}": "date_from", "{COLUMN1}": "date_to", "{COLUMN2}": "project_id", "{COLUMN3}": "role_code", "{TABLE0}": "project staff", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )": {"{VALUE0}": "1", "{COLUMN0}": "project_details", "{COLUMN1}": "organisation_id", "{TABLE0}": "projects", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "dormid", "{COLUMN3}": "amenid", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{TABLE3}": "has amenity", "{TABLE4}": "dorm amenity", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;": {"{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "position", "{COLUMN2}": "department", "{COLUMN3}": "physician", "{COLUMN4}": "head", "{COLUMN5}": "employeeid", "{COLUMN6}": "departmentid", "{AGG0}": "count"}, "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "head", "{COLUMN1}": "department", "{COLUMN2}": "departmentid", "{AGG0}": "count"}, "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)": {"{COLUMN0}": "investor_id", "{COLUMN1}": "share_count", "{TABLE0}": "transactions", "{AGG0}": "avg", "{AGG1}": "avg"}, "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)": {"{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "amount", "{TABLE0}": "customer", "{TABLE1}": "loan", "{AGG0}": "sum"}, "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10": {"{VALUE2}": "2", "{VALUE14}": "10", "{COLUMN0}": "name", "{COLUMN1}": "storm_id", "{COLUMN2}": "number_city_affected", "{TABLE0}": "storm", "{TABLE1}": "affected region", "{OP0}": ">=", "{OP1}": ">=", "{AGG0}": "count", "{AGG1}": "sum"}, "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC": {"{VALUE0}": "180", "{COLUMN0}": "name", "{COLUMN1}": "price", "{TABLE0}": "products", "{OP0}": ">=", "{SC0}": "desc", "{SC1}": "asc"}, "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC": {"{VALUE0}": "d", "{VALUE1}": "s", "{COLUMN0}": "first_name", "{COLUMN1}": "salary", "{TABLE0}": "employees", "{OP0}": "like", "{OP1}": "like", "{SC0}": "desc"}, "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200": {"{VALUE0}": "pg", "{VALUE1}": "100", "{VALUE3}": "200", "{COLUMN0}": "title", "{COLUMN1}": "length", "{COLUMN2}": "rating", "{COLUMN3}": "replacement_cost", "{TABLE0}": "film", "{OP0}": ">", "{OP1}": "=", "{OP2}": ">"}, "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3": {"{VALUE0}": "0.99", "{VALUE8}": "3", "{COLUMN0}": "title", "{COLUMN1}": "film_id", "{COLUMN2}": "rental_rate", "{TABLE0}": "film", "{TABLE1}": "inventory", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "count"}, "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;": {"{VALUE2}": "1", "{VALUE7}": "2014", "{COLUMN0}": "team_id", "{COLUMN1}": "rank", "{COLUMN2}": "year", "{COLUMN3}": "attendance", "{TABLE0}": "home game", "{TABLE1}": "team", "{OP0}": "=", "{AGG0}": "avg", "{SC0}": "desc"}, "SELECT town_city FROM customers WHERE customer_type_code  =  \"Good Credit Rating\" GROUP BY town_city ORDER BY count(*) LIMIT 1": {"{VALUE0}": "good credit rating", "{VALUE2}": "1", "{COLUMN0}": "town_city", "{COLUMN1}": "customer_type_code", "{TABLE0}": "customers", "{OP0}": "=", "{AGG0}": "count"}, "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'": {"{VALUE0}": "professor", "{VALUE1}": "canoeing", "{VALUE2}": "kayaking", "{COLUMN0}": "lname", "{COLUMN1}": "rank", "{COLUMN2}": "facid", "{COLUMN3}": "actid", "{COLUMN4}": "activity_name", "{TABLE0}": "faculty", "{TABLE1}": "faculty participates in", "{TABLE2}": "activity", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"": {"{VALUE0}": "otha", "{VALUE1}": "moyer", "{VALUE2}": "1", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{COLUMN3}": "grade", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7": {"{VALUE0}": "37.4", "{VALUE1}": "7", "{COLUMN0}": "id", "{COLUMN1}": "lat", "{COLUMN2}": "station_id", "{COLUMN3}": "bikes_available", "{TABLE0}": "station", "{TABLE1}": "status", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "min"}, "SELECT name FROM station WHERE city  =  \"Palo Alto\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100": {"{VALUE0}": "palo alto", "{VALUE2}": "100", "{COLUMN0}": "name", "{COLUMN1}": "city", "{COLUMN2}": "end_station_name", "{TABLE0}": "station", "{TABLE1}": "trip", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "count"}, "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\"": {"{VALUE0}": "f", "{VALUE1}": "milk", "{VALUE2}": "eggs", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{COLUMN2}": "allergy", "{TABLE0}": "has allergy", "{TABLE1}": "student", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{AGG0}": "count"}, "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city": {"{COLUMN0}": "city", "{COLUMN1}": "city_id", "{COLUMN2}": "mar", "{COLUMN3}": "jul", "{COLUMN4}": "host_city", "{TABLE0}": "temperature", "{TABLE1}": "hosting city", "{OP0}": "<"}, "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)": {"{VALUE0}": "1", "{COLUMN0}": "amount_claimed", "{COLUMN1}": "claim_header_id", "{COLUMN2}": "claim_id", "{COLUMN3}": "created_date", "{TABLE0}": "claim headers", "{TABLE1}": "claims documents", "{OP0}": "=", "{AGG0}": "sum"}, "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1": {"{VALUE1}": "1", "{COLUMN0}": "individual_last_name", "{COLUMN1}": "organization_id", "{COLUMN2}": "individual_id", "{COLUMN3}": "uk_vat_number", "{COLUMN4}": "date_contact_to", "{TABLE0}": "organizations", "{TABLE1}": "organization contact individuals", "{TABLE2}": "individuals", "{OP0}": "=", "{AGG0}": "max", "{SC0}": "asc"}, "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)": {"{COLUMN0}": "height_feet", "{COLUMN1}": "floors", "{TABLE0}": "building", "{OP0}": ">", "{OP1}": ">", "{AGG0}": "count", "{AGG1}": "avg", "{AGG2}": "avg"}, "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)": {"{VALUE0}": "10", "{COLUMN0}": "long", "{COLUMN1}": "id", "{COLUMN2}": "station_id", "{COLUMN3}": "bikes_available", "{TABLE0}": "station", "{TABLE1}": "status", "{OP0}": ">", "{AGG0}": "avg", "{AGG1}": "max"}, "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)": {"{VALUE0}": "fall", "{VALUE2}": "2003", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "semester", "{COLUMN3}": "year", "{TABLE0}": "student", "{TABLE1}": "takes classes", "{OP0}": "=", "{OP1}": "="}, "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')": {"{VALUE0}": "united states", "{VALUE1}": "united states", "{COLUMN0}": "rid", "{COLUMN1}": "dst_apid", "{COLUMN2}": "apid", "{COLUMN3}": "country", "{COLUMN4}": "src_apid", "{TABLE0}": "routes", "{TABLE1}": "airports", "{OP0}": "=", "{OP1}": "="}, "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500": {"{VALUE0}": "2500", "{COLUMN0}": "salary", "{TABLE0}": "employees", "{AGG0}": "min"}, "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2": {"{VALUE0}": "300", "{VALUE1}": "2", "{COLUMN0}": "job_id", "{COLUMN1}": "end_date", "{COLUMN2}": "start_date", "{TABLE0}": "job history", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC": {"{COLUMN0}": "balance", "{COLUMN1}": "name", "{COLUMN2}": "custid", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{TABLE2}": "savings", "{SC0}": "desc"}, "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;": {"{VALUE1}": "1", "{COLUMN0}": "roomname", "{COLUMN1}": "rate", "{COLUMN2}": "checkin", "{COLUMN3}": "checkout", "{COLUMN4}": "room", "{COLUMN5}": "roomid", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{SC0}": "desc"}, "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code": {"{COLUMN0}": "product_price", "{COLUMN1}": "product_type_code", "{TABLE0}": "products", "{AGG0}": "max", "{AGG1}": "min"}, "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1": {"{VALUE0}": "1", "{VALUE7}": "2010", "{COLUMN0}": "area", "{COLUMN1}": "appelation", "{COLUMN2}": "year", "{TABLE0}": "appellations", "{TABLE1}": "wine", "{OP0}": "<", "{AGG0}": "count", "{SC0}": "desc"}, "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'": {"{VALUE0}": "sandwich", "{COLUMN0}": "resid", "{COLUMN1}": "restypeid", "{COLUMN2}": "restypename", "{TABLE0}": "restaurant", "{TABLE1}": "type of restaurant", "{TABLE2}": "restaurant type", "{OP0}": "=", "{AGG0}": "count"}, "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)": {"{COLUMN0}": "salary", "{COLUMN1}": "dept_name", "{TABLE0}": "instructor", "{OP0}": ">", "{AGG0}": "min", "{AGG1}": "avg", "{AGG2}": "avg"}, "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )": {"{VALUE3}": "2", "{COLUMN0}": "date_claim_made", "{COLUMN1}": "claim_id", "{COLUMN2}": "amount_claimed", "{TABLE0}": "claims", "{TABLE1}": "settlements", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count", "{AGG1}": "max"}, "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2": {"{VALUE3}": "2", "{COLUMN0}": "asset_id", "{COLUMN1}": "asset_details", "{TABLE0}": "assets", "{TABLE1}": "asset parts", "{TABLE2}": "fault log", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id": {"{VALUE3}": "2", "{COLUMN0}": "customer_details", "{COLUMN1}": "customer_id", "{COLUMN2}": "policy_id", "{TABLE0}": "customers", "{TABLE1}": "customer policies", "{TABLE2}": "claims", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  'Tyler Swift')": {"{VALUE0}": "tyler swift", "{COLUMN0}": "name", "{COLUMN1}": "uid", "{COLUMN2}": "f1", "{TABLE0}": "user profiles", "{TABLE1}": "follows", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count", "{AGG1}": "count"}, "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;": {"{VALUE2}": "2", "{VALUE7}": "4", "{COLUMN0}": "state_province_county", "{COLUMN1}": "address_id", "{COLUMN2}": "staff_address_id", "{TABLE0}": "addresses", "{TABLE1}": "staff", "{AGG0}": "count"}, "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1": {"{VALUE0}": "1", "{COLUMN0}": "semester", "{COLUMN1}": "year", "{TABLE0}": "takes classes", "{AGG0}": "count"}, "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4": {"{VALUE0}": "4", "{COLUMN0}": "department_id", "{COLUMN1}": "manager_id", "{COLUMN2}": "employee_id", "{TABLE0}": "employees", "{OP0}": ">=", "{AGG0}": "count"}, "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;": {"{VALUE0}": "1", "{COLUMN0}": "employee_name", "{COLUMN1}": "employee_id", "{COLUMN2}": "document_id", "{COLUMN3}": "draft_number", "{COLUMN4}": "copy_number", "{TABLE0}": "employees", "{TABLE1}": "circulation history", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex": {"{COLUMN0}": "rank", "{COLUMN1}": "sex", "{TABLE0}": "faculty", "{AGG0}": "count"}}, {"( name first ) , ( name last ) that belongs to ( player ) , that have ( ( death year ) equal to ( '' ) )": {"{VALUE0}": "", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "death_year", "{TABLE0}": "player", "{OP0}": "="}, "( meter 200 ) , ( meter 300 ) that belongs to ( swimmer ) , that have ( ( nationality ) equal to ( 'australia' ) )": {"{VALUE0}": "australia", "{COLUMN0}": "meter_200", "{COLUMN1}": "meter_300", "{COLUMN2}": "nationality", "{TABLE0}": "swimmer", "{OP0}": "="}, "( name ) , ( operating system ) that belongs to ( web client accelerator ), and except that ( ( name of addresses ) , ( operating system of addresses ) that belongs to ( ( web client accelerator ) , and ( ( accelerator compatible browser ) satisfied that ( ( accelerator id of staff ) equal to ( id of addresses ) ) ) , and ( ( browser ) satisfied that ( ( browser id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'opera' ) ))": {"{VALUE0}": "opera", "{COLUMN0}": "name", "{COLUMN1}": "operating_system", "{COLUMN2}": "accelerator_id", "{COLUMN3}": "id", "{COLUMN4}": "browser_id", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{TABLE2}": "browser", "{OP0}": "="}, "( name ) , ( trade name ) that belongs to ( medicine ), and except that ( ( name of addresses ) , ( trade name of addresses ) that belongs to ( ( medicine ) , and ( ( medicine enzyme interaction ) satisfied that ( ( medicine id of staff ) equal to ( id of addresses ) ) ) , and ( ( enzyme ) satisfied that ( ( id of enzyme ) equal to ( enzyme id of staff ) ) ) ) , that have ( ( product of enzyme ) equal to ( 'protoporphyrinogen ix' ) ))": {"{VALUE0}": "protoporphyrinogen ix", "{COLUMN0}": "name", "{COLUMN1}": "trade_name", "{COLUMN2}": "medicine_id", "{COLUMN3}": "id", "{COLUMN4}": "enzyme_id", "{COLUMN5}": "product", "{TABLE0}": "medicine", "{TABLE1}": "medicine enzyme interaction", "{TABLE2}": "enzyme", "{OP0}": "="}, "( distinct ( name of addresses ) ) , ( position of addresses ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( medication ) satisfied that ( ( code of enzyme ) equal to ( medication of staff ) ) ) ) , that have ( ( brand of enzyme ) equal to ( x ) )": {"{VALUE0}": "x", "{COLUMN0}": "name", "{COLUMN1}": "position", "{COLUMN2}": "physician", "{COLUMN3}": "employeeid", "{COLUMN4}": "medication", "{COLUMN5}": "code", "{COLUMN6}": "brand", "{TABLE0}": "prescribes", "{OP0}": "="}, "( name of trip ) that belongs to ( ( stay ) , and ( ( patient ) satisfied that ( ( patient of addresses ) equal to ( ssn of staff ) ) ) , and ( ( prescribes ) satisfied that ( ( patient of enzyme ) equal to ( ssn of staff ) ) ) , and ( ( medication ) satisfied that ( ( medication of enzyme ) equal to ( code of trip ) ) ) ) , that have ( ( room ) equal to ( 111 ) )": {"{VALUE11}": "111", "{COLUMN0}": "name", "{COLUMN1}": "stay", "{COLUMN2}": "patient", "{COLUMN3}": "ssn", "{COLUMN4}": "medication", "{COLUMN5}": "code", "{COLUMN6}": "room", "{TABLE0}": "prescribes", "{OP0}": "="}, "( name of staff ) , ( score of staff ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( color of addresses ) equal to ( white ) )": {"{VALUE0}": "white", "{COLUMN0}": "name", "{COLUMN1}": "score", "{COLUMN2}": "grape", "{COLUMN3}": "color", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{OP0}": "="}, "( problem description of addresses ) that belongs to ( ( problems ) , and ( ( staff ) satisfied that ( ( reported by staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( staff first name of staff ) equal to ( christop ) )": {"{VALUE0}": "christop", "{COLUMN0}": "problem_description", "{COLUMN1}": "reported_by_staff_id", "{COLUMN2}": "staff_id", "{COLUMN3}": "staff_first_name", "{TABLE0}": "problems", "{TABLE1}": "staff", "{OP0}": "="}, "( the average of ( number cities of staff ) ) that belongs to ( ( film market estimation ) , and ( ( market ) satisfied that ( ( market id of addresses ) equal to ( market id of staff ) ) ) ) , that have ( ( low estimate of addresses ) greater than ( 10000 ) )": {"{VALUE6}": "10000", "{COLUMN0}": "number_cities", "{COLUMN1}": "market_id", "{COLUMN2}": "low_estimate", "{TABLE0}": "film market estimation", "{TABLE1}": "market", "{OP0}": ">", "{AGG0}": "avg"}, "( advisor ) that belongs to ( student ) , that have ( ( city code ) equal to ( bal ) )": {"{VALUE0}": "bal", "{COLUMN0}": "advisor", "{COLUMN1}": "city_code", "{TABLE0}": "student", "{OP0}": "="}, "( distinct ( file size of addresses ) ) , ( formats of addresses ) that belongs to ( ( files ) , and ( ( song ) satisfied that ( ( f id of addresses ) equal to ( f id of staff ) ) ) ) , that have ( ( resolution of staff ) less than ( 800 ) )": {"{VALUE7}": "800", "{COLUMN0}": "file_size", "{COLUMN1}": "formats", "{COLUMN2}": "f_id", "{COLUMN3}": "resolution", "{TABLE0}": "files", "{TABLE1}": "song", "{OP0}": "<"}, "( date of enzyme ) that belongs to ( ( member attendance ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of staff ) ) ) , and ( ( performance ) satisfied that ( ( performance id of addresses ) equal to ( performance id of enzyme ) ) ) ) , that have ( ( role of staff ) equal to ( violin ) )": {"{VALUE0}": "violin", "{COLUMN0}": "date", "{COLUMN1}": "member_id", "{COLUMN2}": "performance_id", "{COLUMN3}": "role", "{TABLE0}": "member attendance", "{TABLE1}": "member", "{TABLE2}": "performance", "{OP0}": "="}, "( chip model ) , ( screen mode ) that belongs to ( phone ) , that have ( ( hardware model name ) equal to ( lg-p760 ) )": {"{VALUE0}": "lg-p760", "{COLUMN0}": "chip_model", "{COLUMN1}": "screen_mode", "{COLUMN2}": "hardware_model_name", "{TABLE0}": "phone", "{OP0}": "="}, "( the sum of ( balance of staff ) ) that belongs to ( ( accounts ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , that have ( ( name of addresses ) not equal to ( 'brown' ) )": {"{VALUE0}": "brown", "{COLUMN0}": "balance", "{COLUMN1}": "custid", "{COLUMN2}": "name", "{TABLE0}": "accounts", "{TABLE1}": "savings", "{OP0}": "!=", "{AGG0}": "sum"}, "( attribute name of club ) , ( attribute id of club ) that belongs to ( ( attribute definitions ) , and ( ( catalog contents additional attributes ) satisfied that ( ( attribute id of club ) equal to ( attribute id of member of club ) ) ) ) , that have ( ( attribute value of member of club ) equal to ( 0 ) )": {"{VALUE7}": "0", "{COLUMN0}": "attribute_name", "{COLUMN1}": "attribute_id", "{COLUMN2}": "attribute_value", "{TABLE0}": "attribute definitions", "{TABLE1}": "catalog contents additional attributes", "{OP0}": "="}, "( all games of member of club ) , ( location of club ) that belongs to ( ( university ) , and ( ( basketball match ) satisfied that ( ( school id of club ) equal to ( school id of member of club ) ) ) ) , that have ( ( team name ) equal to ( 'clemson' ) )": {"{VALUE0}": "clemson", "{COLUMN0}": "all_games", "{COLUMN1}": "location", "{COLUMN2}": "school_id", "{COLUMN3}": "team_name", "{TABLE0}": "university", "{TABLE1}": "basketball match", "{OP0}": "="}, "( name of staff ) that belongs to ( ( election ) , and ( ( representative ) satisfied that ( ( representative id of addresses ) equal to ( representative id of staff ) ) ) ) , that have ( ( votes ) greater than ( 10000 ) )": {"{VALUE5}": "10000", "{COLUMN0}": "name", "{COLUMN1}": "representative_id", "{COLUMN2}": "votes", "{TABLE0}": "election", "{TABLE1}": "representative", "{OP0}": ">"}, "( address of staff ) , ( email of addresses ) that belongs to ( ( customer ) , and ( ( address ) satisfied that ( ( address id of staff ) equal to ( address id of addresses ) ) ) ) , that have ( ( first name of addresses ) equal to ( 'linda' ) )": {"{VALUE0}": "linda", "{COLUMN0}": "address", "{COLUMN1}": "email", "{COLUMN2}": "address_id", "{COLUMN3}": "first_name", "{TABLE0}": "customer", "{OP0}": "="}, "( origin ) , ( destination ) that belongs to ( flight ) , that have ( ( price ) greater than ( 300 ) )": {"{VALUE0}": "300", "{COLUMN0}": "origin", "{COLUMN1}": "destination", "{COLUMN2}": "price", "{TABLE0}": "flight", "{OP0}": ">"}, "( the sum of ( amount of staff ) ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , that have ( ( state of addresses ) equal to ( 'new york' ) )": {"{VALUE0}": "new york", "{COLUMN0}": "amount", "{COLUMN1}": "branch_id", "{COLUMN2}": "state", "{TABLE0}": "bank", "{TABLE1}": "loan", "{OP0}": "=", "{AGG0}": "sum"}, "( rank ) that belongs to ( captain ), and except that ( ( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'third-rate ship of the line' ) ))": {"{VALUE0}": "third-rate ship of the line", "{COLUMN0}": "rank", "{COLUMN1}": "class", "{TABLE0}": "captain", "{OP0}": "="}, "( distinct ( id of addresses ) ) , ( name of addresses ) that belongs to ( ( station ) , and ( ( status ) satisfied that ( ( id of addresses ) equal to ( station id of staff ) ) ) ) , that have ( ( bikes available of staff ) greater than ( 12 ) )": {"{VALUE7}": "12", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "station_id", "{COLUMN3}": "bikes_available", "{TABLE0}": "station", "{TABLE1}": "status", "{OP0}": ">"}, "( name ) that belongs to ( program ) , that have ( ( origin ) not equal to ( 'beijing' ) )": {"{VALUE0}": "beijing", "{COLUMN0}": "name", "{COLUMN1}": "origin", "{TABLE0}": "program", "{OP0}": "!="}, "( name ) , ( dates active ) , ( number deaths ) that belongs to ( storm ) , that have ( ( number deaths ) greater than or equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "dates_active", "{COLUMN2}": "number_deaths", "{TABLE0}": "storm", "{OP0}": ">="}, "( name ) that belongs to ( church ), and except that ( ( name of addresses ) that belongs to ( ( church ) , and ( ( wedding ) satisfied that ( ( church id of addresses ) equal to ( church id of staff ) ) ) ) , that have ( ( year of staff ) equal to ( 2015 ) ))": {"{VALUE6}": "2015", "{COLUMN0}": "name", "{COLUMN1}": "church_id", "{COLUMN2}": "year", "{TABLE0}": "church", "{TABLE1}": "wedding", "{OP0}": "="}, "( name of enzyme ) that belongs to ( ( repair assignment ) , and ( ( machine ) satisfied that ( ( machine id of addresses ) equal to ( machine id of staff ) ) ) , and ( ( technician ) satisfied that ( ( technician id of addresses ) equal to ( technician id of enzyme ) ) ) ) , that have ( ( value points of staff ) greater than ( 70 ) )": {"{VALUE9}": "70", "{COLUMN0}": "name", "{COLUMN1}": "machine_id", "{COLUMN2}": "technician_id", "{COLUMN3}": "value_points", "{TABLE0}": "repair assignment", "{TABLE1}": "machine", "{TABLE2}": "technician", "{OP0}": ">"}, "( hardware model name ) , ( company name ) that belongs to ( phone ) , that have ( ( accreditation_type ) like ( 'full' ) )": {"{VALUE0}": "full", "{COLUMN0}": "hardware_model_name", "{COLUMN1}": "company_name", "{COLUMN2}": "accreditation_type", "{TABLE0}": "phone", "{OP0}": "like"}, "( distinct ( fname of club ) ) , ( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( university of oxford ) )": {"{VALUE0}": "university of oxford", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "authid", "{COLUMN3}": "instid", "{COLUMN4}": "name", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "="}, "( title ) , ( studio ) that belongs to ( film ) , that have ( ( studio ) like ( %universal% ) )": {"{VALUE0}": "universal", "{COLUMN0}": "title", "{COLUMN1}": "studio", "{TABLE0}": "film", "{OP0}": "like"}, "( name ) that belongs to ( building ), and except that ( ( name of addresses ) that belongs to ( ( building ) , and ( ( institution ) satisfied that ( ( building id of addresses ) equal to ( building id of staff ) ) ) ) , that have ( ( founded of staff ) equal to ( 2003 ) ))": {"{VALUE6}": "2003", "{COLUMN0}": "name", "{COLUMN1}": "institution", "{COLUMN2}": "building_id", "{COLUMN3}": "founded", "{TABLE0}": "building", "{OP0}": "="}, "( aircraft of addresses ) , ( description of addresses ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( total passengers of enzyme ) greater than ( 10000000 ) )": {"{VALUE10}": "10000000", "{COLUMN0}": "aircraft", "{COLUMN1}": "description", "{COLUMN2}": "aircraft_id", "{COLUMN3}": "airport_id", "{COLUMN4}": "total_passengers", "{TABLE0}": "airport aircraft", "{TABLE1}": "airport", "{OP0}": ">"}, "( name of addresses ) that belongs to ( ( club ) , and ( ( player ) satisfied that ( ( club id of addresses ) equal to ( club id of staff ) ) ) ) , that have ( ( position of staff ) equal to ( right wing ) )": {"{VALUE0}": "right wing", "{COLUMN0}": "name", "{COLUMN1}": "club_id", "{COLUMN2}": "position", "{TABLE0}": "club", "{TABLE1}": "player", "{OP0}": "="}, "( distinct ( title of club ) ) that belongs to ( ( papers ) , and ( ( authorship ) satisfied that ( ( paperid of club ) equal to ( paperid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( indiana university ) )": {"{VALUE0}": "indiana university", "{COLUMN0}": "title", "{COLUMN1}": "paperid", "{COLUMN2}": "instid", "{COLUMN3}": "name", "{TABLE0}": "papers", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "="}, "( name of staff ) , ( year of staff ) that belongs to ( ( results ) , and ( ( races ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) , and ( ( drivers ) satisfied that ( ( driverid of addresses ) equal to ( driverid of enzyme ) ) ) ) , that have ( ( forename of enzyme ) equal to ( lewis ) )": {"{VALUE0}": "lewis", "{COLUMN0}": "name", "{COLUMN1}": "year", "{COLUMN2}": "raceid", "{COLUMN3}": "driverid", "{COLUMN4}": "forename", "{TABLE0}": "driver standings", "{TABLE1}": "drivers", "{TABLE2}": "status", "{OP0}": "="}, "( unit of measure of member of club ) , ( product category code of member of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( chervil ) )": {"{VALUE0}": "chervil", "{COLUMN0}": "unit_of_measure", "{COLUMN1}": "product_category_code", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference product categories", "{OP0}": "="}, "( product type code of staff ) , ( product name of staff ) , ( product price of staff ) that belongs to ( ( product suppliers ) , and ( ( products ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( supplier id of addresses ) equal to ( 3 ) )": {"{VALUE8}": "3", "{COLUMN0}": "product_type_code", "{COLUMN1}": "product_name", "{COLUMN2}": "product_price", "{COLUMN3}": "product_id", "{COLUMN4}": "supplier_id", "{TABLE0}": "product suppliers", "{TABLE1}": "products", "{OP0}": "="}, "( name ) that belongs to ( ship ) , that have ( ( nationality ) not equal to ( united states ) )": {"{VALUE0}": "united states", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "ship", "{OP0}": "!="}, "( the average of ( height ) ) , ( the average of ( weight ) ) that belongs to ( people ) , that have ( ( sex ) equal to ( 'm' ) )": {"{VALUE0}": "m", "{COLUMN0}": "height", "{COLUMN1}": "weight", "{COLUMN2}": "sex", "{TABLE0}": "people", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "( first name ) , ( last name ) , ( salary ) that belongs to ( employees ) , that have ( ( salary ) less than ( 6000 ) )": {"{VALUE0}": "6000", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "salary", "{TABLE0}": "employees", "{OP0}": "<"}, "( state county of addresses ) that belongs to ( ( addresses ) , and ( ( stores ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( marketing region code of staff ) equal to ( ca ) )": {"{VALUE0}": "ca", "{COLUMN0}": "state_county", "{COLUMN1}": "address_id", "{COLUMN2}": "marketing_region_code", "{TABLE0}": "addresses", "{TABLE1}": "stores", "{OP0}": "="}, "( store name of staff ) that belongs to ( ( bookings ) , and ( ( drama workshop groups ) satisfied that ( ( workshop group id of addresses ) equal to ( workshop group id of staff ) ) ) ) , that have ( ( status code of addresses ) equal to ( stop ) )": {"{VALUE0}": "stop", "{COLUMN0}": "store_name", "{COLUMN1}": "workshop_group_id", "{COLUMN2}": "status_code", "{TABLE0}": "bookings", "{TABLE1}": "drama workshop groups", "{OP0}": "="}, "( name of staff ) that belongs to ( ( assignedto ) , and ( ( projects ) satisfied that ( ( project of addresses ) equal to ( code of staff ) ) ) , and ( ( scientists ) satisfied that ( ( scientist of addresses ) equal to ( ssn of enzyme ) ) ) ) , that have ( ( t3.name ) like ( '%smith%' ) )": {"{VALUE0}": "smith", "{COLUMN0}": "name", "{COLUMN1}": "project", "{COLUMN2}": "code", "{COLUMN3}": "scientist", "{COLUMN4}": "ssn", "{TABLE0}": "assigned to", "{TABLE1}": "projects", "{TABLE2}": "scientists", "{OP0}": "like"}, "( forename ) , ( surname ) that belongs to ( drivers ) , that have ( ( nationality ) equal to ( german ) )": {"{VALUE0}": "german", "{COLUMN0}": "forename", "{COLUMN1}": "surname", "{COLUMN2}": "nationality", "{TABLE0}": "status", "{OP0}": "="}, "( name of enzyme ) that belongs to ( ( physician ) , and ( ( trained in ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( procedures ) satisfied that ( ( code of enzyme ) equal to ( treatment of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( john wen ) )": {"{VALUE0}": "john wen", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "employeeid", "{COLUMN3}": "procedures", "{COLUMN4}": "code", "{COLUMN5}": "treatment", "{TABLE0}": "trained in", "{OP0}": "="}, "( distinct ( product name of club ) ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , that have ( ( characteristic name of student ) equal to ( warm ) )": {"{VALUE0}": "warm", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{COLUMN3}": "characteristic_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": "="}, "( date order placed of addresses ) that belongs to ( ( orders ) , and ( ( shipments ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( invoice number of staff ) equal to ( 10 ) )": {"{VALUE6}": "10", "{COLUMN0}": "date_order_placed", "{COLUMN1}": "order_id", "{COLUMN2}": "invoice_number", "{TABLE0}": "orders", "{TABLE1}": "shipments", "{OP0}": "="}, "( distinct ( clubname of club ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( city code of student ) equal to ( bal ) )": {"{VALUE0}": "bal", "{COLUMN0}": "clubname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "city_code", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "="}, "( store email address of staff ) that belongs to ( ( addresses ) , and ( ( drama workshop groups ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( state county of addresses ) equal to ( alaska ) )": {"{VALUE0}": "alaska", "{COLUMN0}": "store_email_address", "{COLUMN1}": "address_id", "{COLUMN2}": "state_county", "{TABLE0}": "addresses", "{TABLE1}": "drama workshop groups", "{OP0}": "="}, "( address details of addresses ) that belongs to ( addresses , and ( documents mailed satisfied that ( ( mailed to address id of documents mailed ) equal to ( address id of addresses ) ) ) ) , that have ( ( document id ) equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "address_details", "{COLUMN1}": "mailed_to_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "document_id", "{TABLE0}": "addresses", "{TABLE1}": "documents mailed", "{OP0}": "="}, "( name ) that belongs to ( patient ), and except that ( ( name of addresses ) that belongs to ( ( patient ) , and ( ( prescribes ) satisfied that ( ( patient of staff ) equal to ( ssn of addresses ) ) ) , and ( ( medication ) satisfied that ( ( medication of staff ) equal to ( code of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'procrastin-x' ) ))": {"{VALUE0}": "procrastin-x", "{COLUMN0}": "name", "{COLUMN1}": "patient", "{COLUMN2}": "ssn", "{COLUMN3}": "medication", "{COLUMN4}": "code", "{TABLE0}": "prescribes", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( purchase ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of staff ) ) ) ) , that have ( ( level of staff ) equal to ( 6 ) )": {"{VALUE5}": "6", "{COLUMN0}": "member_id", "{COLUMN1}": "level", "{TABLE0}": "purchase", "{TABLE1}": "member", "{OP0}": "=", "{AGG0}": "count"}, "( lastname ) that belongs to ( customer ), and except that ( ( lastname of addresses ) that belongs to ( ( customer ) , and ( ( invoice ) satisfied that ( ( customerid of addresses ) equal to ( customerid of staff ) ) ) ) , that have ( ( total of staff ) greater than ( 20 ) ))": {"{VALUE6}": "20", "{COLUMN0}": "lastname", "{COLUMN1}": "customerid", "{COLUMN2}": "total", "{TABLE0}": "customer", "{TABLE1}": "invoice", "{OP0}": ">"}, "( city of addresses ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of addresses ) equal to ( host city of staff ) ) ) ) , that have ( ( year of staff ) greater than ( 2010 ) )": {"{VALUE6}": "2010", "{COLUMN0}": "city", "{COLUMN1}": "city_id", "{COLUMN2}": "host_city", "{COLUMN3}": "year", "{TABLE0}": "hosting city", "{OP0}": ">"}, "( login name ) that belongs to ( students ) , that have ( ( family name ) equal to ( ward ) )": {"{VALUE0}": "ward", "{COLUMN0}": "login_name", "{COLUMN1}": "family_name", "{TABLE0}": "students", "{OP0}": "="}, "( the average of ( ticket price ) ) , ( the minimum of ( ticket price ) ) , ( the maximum of ( ticket price ) ) that belongs to ( exhibition ) , that have ( ( year ) less than ( 2009 ) )": {"{VALUE0}": "2009", "{COLUMN0}": "ticket_price", "{COLUMN1}": "year", "{TABLE0}": "exhibition", "{OP0}": "<", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "( position of addresses ) that belongs to ( ( match season ) , and ( ( team ) satisfied that ( ( team of addresses ) equal to ( team id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( ryley goldner ) )": {"{VALUE0}": "ryley goldner", "{COLUMN0}": "position", "{COLUMN1}": "team", "{COLUMN2}": "team_id", "{COLUMN3}": "name", "{TABLE0}": "match season", "{OP0}": "="}, "( the average of ( total passengers of enzyme ) ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( aircraft of addresses ) equal to ( robinson r-22 ) )": {"{VALUE0}": "robinson r-22", "{COLUMN0}": "total_passengers", "{COLUMN1}": "aircraft", "{COLUMN2}": "aircraft_id", "{COLUMN3}": "airport_id", "{TABLE0}": "airport aircraft", "{TABLE1}": "airport", "{OP0}": "=", "{AGG0}": "avg"}, "( stu fname of enzyme ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( student ) satisfied that ( ( stu num of staff ) equal to ( stu num of enzyme ) ) ) ) , that have ( ( crs code of addresses ) equal to ( 'acct-211' ) )": {"{VALUE0}": "acct-211", "{COLUMN0}": "stu_fname", "{COLUMN1}": "class_code", "{COLUMN2}": "stu_num", "{COLUMN3}": "crs_code", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "student", "{OP0}": "="}, "( issue date of staff ) that belongs to ( ( artist ) , and ( ( volume ) satisfied that ( ( artist id of addresses ) equal to ( artist id of staff ) ) ) ) , that have ( ( artist of addresses ) equal to ( gorgoroth ) )": {"{VALUE0}": "gorgoroth", "{COLUMN0}": "issue_date", "{COLUMN1}": "artist", "{COLUMN2}": "volume", "{COLUMN3}": "artist_id", "{OP0}": "="}, "( name of staff ) that belongs to ( ( album ) , and ( ( artist ) satisfied that ( ( artistid of addresses ) equal to ( artistid of staff ) ) ) ) , that have ( ( title of addresses ) equal to ( balls to the wall ) )": {"{VALUE0}": "balls to the wall", "{COLUMN0}": "name", "{COLUMN1}": "artistid", "{COLUMN2}": "title", "{TABLE0}": "album", "{TABLE1}": "artist", "{OP0}": "="}, "( distinct ( nominee ) ) that belongs to ( musical ) , that have ( ( award ) not equal to ( tony award ) )": {"{VALUE0}": "tony award", "{COLUMN0}": "nominee", "{COLUMN1}": "award", "{TABLE0}": "musical", "{OP0}": "!="}, "( name ) , ( total passengers ) that belongs to ( station ) , that have ( ( location ) not equal to ( 'london' ) )": {"{VALUE0}": "london", "{COLUMN0}": "name", "{COLUMN1}": "total_passengers", "{COLUMN2}": "location", "{TABLE0}": "station", "{OP0}": "!="}, "( issue date ) that belongs to ( ( artist ) , and ( ( volume ) satisfied that ( ( artist id of addresses ) equal to ( artist id of staff ) ) ) ) , that have ( ( age of addresses ) less than or equal to ( 23 ) )": {"{VALUE5}": "23", "{COLUMN0}": "issue_date", "{COLUMN1}": "artist", "{COLUMN2}": "volume", "{COLUMN3}": "artist_id", "{COLUMN4}": "age", "{OP0}": "<="}, "( the average of ( price of staff ) ) that belongs to ( ( appellations ) , and ( ( wine ) satisfied that ( ( appelation of addresses ) equal to ( appelation of staff ) ) ) ) , that have ( ( county of addresses ) equal to ( sonoma ) )": {"{VALUE0}": "sonoma", "{COLUMN0}": "price", "{COLUMN1}": "appelation", "{COLUMN2}": "county", "{TABLE0}": "appellations", "{TABLE1}": "wine", "{OP0}": "=", "{AGG0}": "avg"}, "( customer name of club ) , ( active from date of member of club ) that belongs to ( ( customers ) , and ( ( customer contact channels ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( channel code of member of club ) equal to ( 'email' ) )": {"{VALUE0}": "email", "{COLUMN0}": "customer_name", "{COLUMN1}": "active_from_date", "{COLUMN2}": "customer_id", "{COLUMN3}": "channel_code", "{TABLE0}": "customers", "{TABLE1}": "customer contact channels", "{OP0}": "="}, "( name of staff ) that belongs to ( ( entrepreneur ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , that have ( ( investor of addresses ) not equal to ( rachel elnaugh ) )": {"{VALUE0}": "rachel elnaugh", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "investor", "{TABLE0}": "entrepreneur", "{TABLE1}": "people", "{OP0}": "!="}, "( name of addresses ) , ( num employees of addresses ) that belongs to ( ( department ) , and ( ( management ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , that have ( ( temporary acting of staff ) equal to ( 'yes' ) )": {"{VALUE0}": "yes", "{COLUMN0}": "name", "{COLUMN1}": "num_employees", "{COLUMN2}": "department_id", "{COLUMN3}": "temporary_acting", "{TABLE0}": "department", "{TABLE1}": "management", "{OP0}": "="}, "( the maximum of ( age ) ) , ( the minimum of ( age ) ) that belongs to ( student ) , that have ( ( major ) equal to ( 600 ) )": {"{VALUE0}": "600", "{COLUMN0}": "age", "{COLUMN1}": "major", "{TABLE0}": "student", "{OP0}": "=", "{AGG0}": "max", "{AGG1}": "min"}, "( distinct ( position of staff ) ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( capital of addresses ) equal to ( dublin ) )": {"{VALUE0}": "dublin", "{COLUMN0}": "position", "{COLUMN1}": "country", "{COLUMN2}": "country_id", "{COLUMN3}": "capital", "{TABLE0}": "match season", "{OP0}": "="}, "( the average of ( lat ) ) , ( the average of ( long ) ) that belongs to ( station ) , that have ( ( city ) equal to ( san jose ) )": {"{VALUE0}": "san jose", "{COLUMN0}": "lat", "{COLUMN1}": "long", "{COLUMN2}": "city", "{TABLE0}": "station", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "( name of addresses ) that belongs to ( ( actor ) , and ( ( musical ) satisfied that ( ( musical id of addresses ) equal to ( musical id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( the phantom of the opera ) )": {"{VALUE0}": "the phantom of the opera", "{COLUMN0}": "name", "{COLUMN1}": "musical_id", "{TABLE0}": "actor", "{TABLE1}": "musical", "{OP0}": "="}, "( store phone of addresses ) , ( store email address of addresses ) that belongs to ( ( drama workshop groups ) , and ( ( services ) satisfied that ( ( workshop group id of addresses ) equal to ( workshop group id of staff ) ) ) ) , that have ( ( product name of staff ) equal to ( film ) )": {"{VALUE0}": "film", "{COLUMN0}": "store_phone", "{COLUMN1}": "store_email_address", "{COLUMN2}": "workshop_group_id", "{COLUMN3}": "product_name", "{TABLE0}": "drama workshop groups", "{TABLE1}": "services", "{OP0}": "="}, "( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( id of enzyme ) equal to ( playlist id of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( movies ) )": {"{VALUE0}": "movies", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "playlist_id", "{TABLE0}": "tracks", "{TABLE1}": "playlist tracks", "{TABLE2}": "playlists", "{OP0}": "="}, "( distinct ( name of addresses ) ) that belongs to ( ( web client accelerator ) , and ( ( accelerator compatible browser ) satisfied that ( ( accelerator id of staff ) equal to ( id of addresses ) ) ) , and ( ( browser ) satisfied that ( ( browser id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( market share of enzyme ) greater than ( 15 ) )": {"{VALUE9}": "15", "{COLUMN0}": "name", "{COLUMN1}": "accelerator_id", "{COLUMN2}": "id", "{COLUMN3}": "browser_id", "{COLUMN4}": "market_share", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{TABLE2}": "browser", "{OP0}": ">"}, "( other account details ) that belongs to ( accounts ) , that have ( ( account name ) equal to ( 338 ) )": {"{VALUE0}": "338", "{COLUMN0}": "other_account_details", "{COLUMN1}": "account_name", "{TABLE0}": "accounts", "{OP0}": "="}, "( name ) , ( year join ) that belongs to ( artist ) , that have ( ( country ) not equal to ( 'united states' ) )": {"{VALUE0}": "united states", "{COLUMN0}": "name", "{COLUMN1}": "year_join", "{COLUMN2}": "country", "{TABLE0}": "artist", "{OP0}": "!="}, "( category ) that belongs to ( music festival ) , that have ( ( result ) equal to ( awarded ) )": {"{VALUE0}": "awarded", "{COLUMN0}": "category", "{COLUMN1}": "music_festival", "{COLUMN2}": "result", "{OP0}": "="}, "( model name ) that belongs to ( chip model ), and except that ( ( chip model ) that belongs to ( phone ) , that have ( ( accreditation type ) equal to ( 'full' ) ))": {"{VALUE0}": "full", "{COLUMN0}": "model_name", "{COLUMN1}": "chip_model", "{COLUMN2}": "accreditation_type", "{TABLE0}": "phone", "{OP0}": "="}, "( price ) that belongs to ( wine ) , that have ( ( year ) less than ( 2010 ) )": {"{VALUE0}": "2010", "{COLUMN0}": "price", "{COLUMN1}": "year", "{TABLE0}": "wine", "{OP0}": "<"}, "( city town of addresses ) that belongs to ( ( addresses ) , and ( ( stores ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( store name of staff ) equal to ( fja filming ) )": {"{VALUE0}": "fja filming", "{COLUMN0}": "city_town", "{COLUMN1}": "address_id", "{COLUMN2}": "store_name", "{TABLE0}": "addresses", "{TABLE1}": "stores", "{OP0}": "="}, "( studio ) that belongs to ( film ), and except that ( ( studio ) that belongs to ( film ) , that have ( ( director ) equal to ( walter hill ) ))": {"{VALUE0}": "walter hill", "{COLUMN0}": "studio", "{COLUMN1}": "director", "{TABLE0}": "film", "{OP0}": "="}, "( the sum of ( duration ) ) , ( the maximum of ( duration ) ) that belongs to ( trip ) , that have ( ( bike id ) equal to ( 636 ) )": {"{VALUE0}": "636", "{COLUMN0}": "duration", "{COLUMN1}": "bike_id", "{TABLE0}": "trip", "{OP0}": "=", "{AGG0}": "sum", "{AGG1}": "max"}, "( company ) , ( main industry ) that belongs to ( company ) , that have ( ( headquarters ) not equal to ( 'usa' ) )": {"{VALUE0}": "usa", "{COLUMN0}": "company", "{COLUMN1}": "main_industry", "{COLUMN2}": "headquarters", "{OP0}": "!="}, "( distinct ( name of addresses ) ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( medication ) satisfied that ( ( code of enzyme ) equal to ( medication of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( thesisin ) )": {"{VALUE0}": "thesisin", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "employeeid", "{COLUMN3}": "medication", "{COLUMN4}": "code", "{TABLE0}": "prescribes", "{OP0}": "="}, "( phone ) , ( postal code ) that belongs to ( address ) , that have ( ( address ) equal to ( '1031 daugavpils parkway' ) )": {"{VALUE0}": "1031 daugavpils parkway", "{COLUMN0}": "phone", "{COLUMN1}": "postal_code", "{COLUMN2}": "address", "{OP0}": "="}, "( the average of ( working horses ) ) that belongs to ( farm ) , that have ( ( total horses ) greater than ( 5000 ) )": {"{VALUE0}": "5000", "{COLUMN0}": "working_horses", "{COLUMN1}": "total_horses", "{TABLE0}": "farm", "{OP0}": ">", "{AGG0}": "avg"}, "( carrier ) that belongs to ( device ) , that have ( ( software platform ) not equal to ( 'android' ) )": {"{VALUE0}": "android", "{COLUMN0}": "carrier", "{COLUMN1}": "device", "{COLUMN2}": "software_platform", "{OP0}": "!="}, "( title of addresses ) that belongs to ( ( albums ) , and ( ( artists ) satisfied that ( ( artist id of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( aerosmith ) )": {"{VALUE0}": "aerosmith", "{COLUMN0}": "title", "{COLUMN1}": "artist_id", "{COLUMN2}": "id", "{COLUMN3}": "name", "{TABLE0}": "albums", "{TABLE1}": "sqlite sequence", "{OP0}": "="}, "( document type code ) that belongs to ( documents ) , that have ( ( document id ) equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "document_type_code", "{COLUMN1}": "document_id", "{TABLE0}": "documents", "{OP0}": "="}, "( the maximum of ( gradepoint of staff ) ) , ( the minimum of ( gradepoint of staff ) ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) ) , that have ( ( city code of enzyme ) equal to ( nyc ) )": {"{VALUE0}": "nyc", "{COLUMN0}": "gradepoint", "{COLUMN1}": "grade", "{COLUMN2}": "lettergrade", "{COLUMN3}": "stuid", "{COLUMN4}": "city_code", "{TABLE0}": "enrolled in", "{TABLE1}": "grade conversion", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "max", "{AGG1}": "min"}, "( the average of ( capacity ) ) , ( the minimum of ( capacity ) ) , ( the maximum of ( capacity ) ) that belongs to ( cinema ) , that have ( ( openning year ) greater than or equal to ( 2011 ) )": {"{VALUE0}": "2011", "{COLUMN0}": "capacity", "{COLUMN1}": "openning_year", "{TABLE0}": "cinema", "{OP0}": ">=", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "( document type name of staff ) that belongs to ( ( all documents ) , and ( ( ref document types ) satisfied that ( ( document type code of addresses ) equal to ( document type code of staff ) ) ) ) , that have ( ( document name of addresses ) equal to ( how to read a book ) )": {"{VALUE0}": "how to read a book", "{COLUMN0}": "document_type_name", "{COLUMN1}": "document_type_code", "{COLUMN2}": "document_name", "{TABLE0}": "all documents", "{TABLE1}": "reference document types", "{OP0}": "="}, "( order id ) that belongs to ( shipments ) , that have ( ( shipment date ) greater than ( 2000-01-01 ) )": {"{VALUE0}": "2000-01-01", "{COLUMN0}": "order_id", "{COLUMN1}": "shipment_date", "{TABLE0}": "shipments", "{OP0}": ">"}, "( cname ) that belongs to ( course ) , that have ( ( credits ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "cname", "{COLUMN1}": "credits", "{TABLE0}": "course", "{OP0}": "="}, "( distinct ( clubname of club ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( advisor of student ) equal to ( 1121 ) )": {"{VALUE9}": "1121", "{COLUMN0}": "clubname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "advisor", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "="}, "( the sum of ( room count of staff ) ) that belongs to ( ( apartment facilities ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( facility code of addresses ) equal to ( gym ) )": {"{VALUE0}": "gym", "{COLUMN0}": "room_count", "{COLUMN1}": "apt_id", "{COLUMN2}": "facility_code", "{TABLE0}": "apartment facilities", "{TABLE1}": "apartments", "{OP0}": "=", "{AGG0}": "sum"}, "( unit of measure of member of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( cumin ) )": {"{VALUE0}": "cumin", "{COLUMN0}": "unit_of_measure", "{COLUMN1}": "product_category_code", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference product categories", "{OP0}": "="}, "( location name of enzyme ) that belongs to ( ( all documents ) , and ( ( document locations ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) , and ( ( ref locations ) satisfied that ( ( location code of staff ) equal to ( location code of enzyme ) ) ) ) , that have ( ( document name of addresses ) equal to ( robin cv ) )": {"{VALUE0}": "robin cv", "{COLUMN0}": "location_name", "{COLUMN1}": "document_id", "{COLUMN2}": "location_code", "{COLUMN3}": "document_name", "{TABLE0}": "all documents", "{TABLE1}": "document locations", "{TABLE2}": "reference locations", "{OP0}": "="}, "( the average of ( gradepoint of staff ) ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) ) , that have ( ( lname of enzyme ) equal to ( smith ) )": {"{VALUE0}": "smith", "{COLUMN0}": "gradepoint", "{COLUMN1}": "grade", "{COLUMN2}": "lettergrade", "{COLUMN3}": "stuid", "{COLUMN4}": "lname", "{TABLE0}": "enrolled in", "{TABLE1}": "grade conversion", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "avg"}, "( section title of member of club ) that belongs to ( ( documents ) , and ( ( document sections ) satisfied that ( ( document code of club ) equal to ( document code of member of club ) ) ) ) , that have ( ( document name of club ) equal to ( david cv ) )": {"{VALUE0}": "david cv", "{COLUMN0}": "section_title", "{COLUMN1}": "document_code", "{COLUMN2}": "document_name", "{TABLE0}": "documents", "{TABLE1}": "document sections", "{OP0}": "="}, "( title of enzyme ) that belongs to ( ( albums ) , and ( ( tracklists ) satisfied that ( ( aid of addresses ) equal to ( albumid of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of staff ) equal to ( songid of enzyme ) ) ) ) , that have ( ( label of club ) equal to ( universal music group ) )": {"{VALUE0}": "universal music group", "{COLUMN0}": "title", "{COLUMN1}": "aid", "{COLUMN2}": "albumid", "{COLUMN3}": "songid", "{COLUMN4}": "label", "{TABLE0}": "albums", "{TABLE1}": "track lists", "{TABLE2}": "songs", "{OP0}": "="}, "( name ) that belongs to ( channel ) , that have ( ( owner ) not equal to ( 'cctv' ) )": {"{VALUE0}": "cctv", "{COLUMN0}": "name", "{COLUMN1}": "owner", "{TABLE0}": "channel", "{OP0}": "!="}, "( staff id of addresses ) , ( staff gender of addresses ) that belongs to ( ( staff ) , and ( ( staff department assignments ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( job title code of staff ) equal to ( department manager ) )": {"{VALUE0}": "department manager", "{COLUMN0}": "staff_id", "{COLUMN1}": "staff_gender", "{COLUMN2}": "job_title_code", "{TABLE0}": "staff", "{TABLE1}": "staff department assignments", "{OP0}": "="}, "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( customer ) , and ( ( employee ) satisfied that ( ( supportrepid of addresses ) equal to ( employeeid of staff ) ) ) ) , that have ( ( firstname of addresses ) equal to ( leonie ) )": {"{VALUE0}": "leonie", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "supportrepid", "{COLUMN3}": "employeeid", "{TABLE0}": "customer", "{TABLE1}": "employee", "{OP0}": "="}, "( order id of staff ) , ( order status of staff ) that belongs to ( ( customers ) , and ( ( orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( customer name of addresses ) equal to ( jeramie ) )": {"{VALUE0}": "jeramie", "{COLUMN0}": "order_id", "{COLUMN1}": "order_status", "{COLUMN2}": "customer_id", "{COLUMN3}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "orders", "{OP0}": "="}, "( distinct ( channel code ) ) that belongs to ( ( customers ) , and ( ( customer contact channels ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( customer name of club ) equal to ( tillman ernser ) )": {"{VALUE0}": "tillman ernser", "{COLUMN0}": "channel_code", "{COLUMN1}": "customer_id", "{COLUMN2}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customer contact channels", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( trip ) , and ( ( station ) satisfied that ( ( end station id of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( city of staff ) not equal to ( san francisco ) )": {"{VALUE0}": "san francisco", "{COLUMN0}": "end_station_id", "{COLUMN1}": "id", "{COLUMN2}": "city", "{TABLE0}": "trip", "{TABLE1}": "station", "{OP0}": "!=", "{AGG0}": "count"}, "( catalog name of club ) , ( date of publication of club ) that belongs to ( ( catalogs ) , and ( ( catalog structure ) satisfied that ( ( catalog id of club ) equal to ( catalog id of member of club ) ) ) ) , that have ( ( catalog level number ) greater than ( 5 ) )": {"{VALUE6}": "5", "{COLUMN0}": "catalog_name", "{COLUMN1}": "date_of_publication", "{COLUMN2}": "catalog_id", "{COLUMN3}": "catalog_level_number", "{TABLE0}": "catalogs", "{TABLE1}": "catalog structure", "{OP0}": ">"}, "( dorm name ) that belongs to ( dorm ), and except that ( ( dorm name of addresses ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of staff ) equal to ( amenid of enzyme ) ) ) ) , that have ( ( amenity name of enzyme ) equal to ( 'tv lounge' ) ))": {"{VALUE0}": "tv lounge", "{COLUMN0}": "dorm_name", "{COLUMN1}": "dormid", "{COLUMN2}": "amenid", "{COLUMN3}": "amenity_name", "{TABLE0}": "dorm", "{TABLE1}": "has amenity", "{TABLE2}": "dorm amenity", "{OP0}": "="}, "( crs description of trip ) , ( crs credit of trip ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( student ) satisfied that ( ( stu num of enzyme ) equal to ( stu num of staff ) ) ) , and ( ( course ) satisfied that ( ( crs code of trip ) equal to ( crs code of addresses ) ) ) ) , that have ( ( stu lname of enzyme ) equal to ( 'smithson' ) )": {"{VALUE0}": "smithson", "{COLUMN0}": "crs_description", "{COLUMN1}": "crs_credit", "{COLUMN2}": "class_code", "{COLUMN3}": "stu_num", "{COLUMN4}": "crs_code", "{COLUMN5}": "stu_lname", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "student", "{TABLE3}": "course", "{OP0}": "="}, "( distinct ( lastname of staff ) ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( grade ) equal to ( 5 ) )": {"{VALUE5}": "5", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{COLUMN2}": "grade", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( lessons ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( t2.first_name ) like ( %a% ) )": {"{VALUE0}": "a", "{COLUMN0}": "staff_id", "{COLUMN1}": "first_name", "{TABLE0}": "lessons", "{TABLE1}": "staff", "{OP0}": "like", "{AGG0}": "count"}, "( the average of ( rating ) ) , ( the average of ( resolution ) ) that belongs to ( song ) , that have ( ( languages ) equal to ( bangla ) )": {"{VALUE0}": "bangla", "{COLUMN0}": "rating", "{COLUMN1}": "resolution", "{COLUMN2}": "languages", "{TABLE0}": "song", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "( distinct ( building ) ) that belongs to ( classroom ) , that have ( ( capacity ) greater than ( 50 ) )": {"{VALUE0}": "50", "{COLUMN0}": "building", "{COLUMN1}": "capacity", "{TABLE0}": "classroom", "{OP0}": ">"}, "( title of staff ) that belongs to ( ( artists ) , and ( ( albums ) satisfied that ( ( id of addresses ) equal to ( artist id of staff ) ) ) ) , that have ( ( t1.name ) like ( '%led%' ) )": {"{VALUE0}": "led", "{COLUMN0}": "title", "{COLUMN1}": "id", "{COLUMN2}": "artist_id", "{COLUMN3}": "name", "{TABLE0}": "sqlite sequence", "{TABLE1}": "albums", "{OP0}": "like"}, "( name ) that belongs to ( physician ) , that have ( ( position ) like ( '%senior%' ) )": {"{VALUE0}": "senior", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "position", "{OP0}": "like"}, "( organisation type description of addresses ) that belongs to ( ( organisation types ) , and ( ( organisations ) satisfied that ( ( organisation type of addresses ) equal to ( organisation type of staff ) ) ) ) , that have ( ( organisation details of staff ) equal to ( 'quo' ) )": {"{VALUE0}": "quo", "{COLUMN0}": "organisation_type_description", "{COLUMN1}": "organisation_type", "{COLUMN2}": "organisation_details", "{TABLE0}": "organisation types", "{TABLE1}": "organisations", "{OP0}": "="}, "( the number of ( distinct ( title of club ) ) ) that belongs to ( ( papers ) , and ( ( authorship ) satisfied that ( ( paperid of club ) equal to ( paperid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( name of student ) equal to ( university of pennsylvania ) )": {"{VALUE0}": "university of pennsylvania", "{COLUMN0}": "title", "{COLUMN1}": "paperid", "{COLUMN2}": "instid", "{COLUMN3}": "name", "{TABLE0}": "papers", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "=", "{AGG0}": "count"}, "( draft pick number ) , ( draft class ) that belongs to ( match season ) , that have ( ( position ) equal to ( defender ) )": {"{VALUE0}": "defender", "{COLUMN0}": "draft_pick_number", "{COLUMN1}": "draft_class", "{COLUMN2}": "position", "{TABLE0}": "match season", "{OP0}": "="}, "( the number of ( distinct ( official native language of addresses ) ) ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( position of staff ) equal to ( defender ) )": {"{VALUE0}": "defender", "{COLUMN0}": "official_native_language", "{COLUMN1}": "country", "{COLUMN2}": "country_id", "{COLUMN3}": "position", "{TABLE0}": "match season", "{OP0}": "=", "{AGG0}": "count"}, "( delegate of staff ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , that have ( ( population of addresses ) less than ( 100000 ) )": {"{VALUE6}": "100000", "{COLUMN0}": "delegate", "{COLUMN1}": "county_id", "{COLUMN2}": "district", "{COLUMN3}": "population", "{TABLE0}": "county", "{TABLE1}": "election", "{OP0}": "<"}, "( the maximum of ( elevation ) ) that belongs to ( airports ) , that have ( ( country ) equal to ( 'iceland' ) )": {"{VALUE0}": "iceland", "{COLUMN0}": "elevation", "{COLUMN1}": "country", "{TABLE0}": "airports", "{OP0}": "=", "{AGG0}": "max"}, "( bname ) that belongs to ( bank ) , that have ( ( state ) equal to ( 'new york' ) )": {"{VALUE0}": "new york", "{COLUMN0}": "bname", "{COLUMN1}": "state", "{TABLE0}": "bank", "{OP0}": "="}, "( course name of staff ) that belongs to ( ( course authors and tutors ) , and ( ( courses ) satisfied that ( ( author id of addresses ) equal to ( author id of staff ) ) ) ) , that have ( ( personal name of addresses ) equal to ( julio ) )": {"{VALUE0}": "julio", "{COLUMN0}": "course_name", "{COLUMN1}": "author_id", "{COLUMN2}": "personal_name", "{TABLE0}": "course authors and tutors", "{TABLE1}": "courses", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( member ) , that have ( ( membership card ) equal to ( 'black' ) )": {"{VALUE0}": "black", "{COLUMN0}": "membership_card", "{TABLE0}": "member", "{OP0}": "=", "{AGG0}": "count"}, "( name ) that belongs to ( editor ) , that have ( ( age ) greater than ( 25 ) )": {"{VALUE0}": "25", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "editor", "{OP0}": ">"}, "( document status description of ref document status ) that belongs to ( ref document status , and ( documents satisfied that ( ( document status code of documents ) equal to ( document status code of ref document status ) ) ) ) , that have ( ( document id of documents ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "document_status_description", "{COLUMN1}": "document_status_code", "{COLUMN2}": "document_id", "{TABLE0}": "reference document status", "{TABLE1}": "documents", "{OP0}": "="}, "( transaction id ) that belongs to ( transactions ) , that have ( ( transaction type code ) equal to ( 'pur' ) )": {"{VALUE0}": "pur", "{COLUMN0}": "transaction_id", "{COLUMN1}": "transaction_type_code", "{TABLE0}": "transactions", "{OP0}": "="}, "( address details of addresses ) that belongs to ( ( addresses ) , and ( ( customer addresses ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( customer id of staff ) equal to ( 10 ) )": {"{VALUE6}": "10", "{COLUMN0}": "address_details", "{COLUMN1}": "address_id", "{COLUMN2}": "customer_id", "{TABLE0}": "addresses", "{TABLE1}": "customer addresses", "{OP0}": "="}, "( the number of ( distinct ( city ) ) ) that belongs to ( stadium ) , that have ( ( opening year ) less than ( 2006 ) )": {"{VALUE0}": "2006", "{COLUMN0}": "city", "{COLUMN1}": "opening_year", "{TABLE0}": "stadium", "{OP0}": "<", "{AGG0}": "count"}, "( the average of ( age of student ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( clubname of club ) equal to ( hopkins student enterprises ) )": {"{VALUE0}": "hopkins student enterprises", "{COLUMN0}": "age", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "clubname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "avg"}, "( distinct ( police force ) ) that belongs to ( county public safety ) , that have ( ( location ) not equal to ( east ) )": {"{VALUE0}": "east", "{COLUMN0}": "police_force", "{COLUMN1}": "location", "{TABLE0}": "county public safety", "{OP0}": "!="}, "( address of staff ) that belongs to ( ( store ) , and ( ( address ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( store id ) equal to ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "address", "{COLUMN1}": "address_id", "{COLUMN2}": "store_id", "{TABLE0}": "store", "{OP0}": "="}, "( distinct ( name of enzyme ) ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) , and ( ( reviewer ) satisfied that ( ( rid of addresses ) equal to ( rid of enzyme ) ) ) ) , that have ( ( title of staff ) equal to ( 'gone with the wind' ) )": {"{VALUE0}": "gone with the wind", "{COLUMN0}": "name", "{COLUMN1}": "mid", "{COLUMN2}": "rid", "{COLUMN3}": "title", "{TABLE0}": "rating", "{TABLE1}": "movie", "{TABLE2}": "reviewer", "{OP0}": "="}, "( dept name of enzyme ) , ( prof office of staff ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( emp lname of addresses ) equal to ( 'heffington' ) )": {"{VALUE0}": "heffington", "{COLUMN0}": "dept_name", "{COLUMN1}": "prof_office", "{COLUMN2}": "emp_num", "{COLUMN3}": "dept_code", "{COLUMN4}": "emp_lname", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{OP0}": "="}, "( first name ) that belongs to ( teachers ) , that have ( ( email_address ) like ( '%man%' ) )": {"{VALUE0}": "man", "{COLUMN0}": "first_name", "{COLUMN1}": "email_address", "{TABLE0}": "teachers", "{OP0}": "like"}, "( distinct ( classroom ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 5 ) )": {"{VALUE0}": "5", "{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list", "{OP0}": "="}, "( eid ) , ( salary ) that belongs to ( employee ) , that have ( ( name ) equal to ( 'mark young' ) )": {"{VALUE0}": "mark young", "{COLUMN0}": "eid", "{COLUMN1}": "salary", "{COLUMN2}": "name", "{TABLE0}": "employee", "{OP0}": "="}, "( player of addresses ) , ( years played of addresses ) that belongs to ( ( player ) , and ( ( team ) satisfied that ( ( team of addresses ) equal to ( team id of staff ) ) ) ) , that have ( ( name of staff ) equal to ( columbus crew ) )": {"{VALUE0}": "columbus crew", "{COLUMN0}": "player", "{COLUMN1}": "years_played", "{COLUMN2}": "team", "{COLUMN3}": "team_id", "{COLUMN4}": "name", "{OP0}": "="}, "( dname ) that belongs to ( department ) , that have ( ( building ) equal to ( mergenthaler ) )": {"{VALUE0}": "mergenthaler", "{COLUMN0}": "dname", "{COLUMN1}": "building", "{TABLE0}": "department", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( address ) , that have ( ( district ) equal to ( 'california' ) )": {"{VALUE0}": "california", "{COLUMN0}": "address", "{COLUMN1}": "district", "{OP0}": "=", "{AGG0}": "count"}, "( text of notes of addresses ) that belongs to ( ( assessment notes ) , and ( ( teachers ) satisfied that ( ( teacher id of addresses ) equal to ( teacher id of staff ) ) ) ) , that have ( ( last name of staff ) equal to ( schuster ) )": {"{VALUE0}": "schuster", "{COLUMN0}": "text_of_notes", "{COLUMN1}": "teacher_id", "{COLUMN2}": "last_name", "{TABLE0}": "assessment notes", "{TABLE1}": "teachers", "{OP0}": "="}, "( location ) that belongs to ( station ), and except that ( ( location ) that belongs to ( station ) , that have ( ( number of platforms ) greater than or equal to ( 15 ) ))": {"{VALUE0}": "15", "{COLUMN0}": "location", "{COLUMN1}": "number_of_platforms", "{TABLE0}": "station", "{OP0}": ">="}, "( emp lname of addresses ) , ( prof office of staff ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'history' ) )": {"{VALUE0}": "history", "{COLUMN0}": "emp_lname", "{COLUMN1}": "prof_office", "{COLUMN2}": "emp_num", "{COLUMN3}": "dept_code", "{COLUMN4}": "dept_name", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{OP0}": "="}, "( distinct ( secretary vote ) ) that belongs to ( voting record ) , that have ( ( election cycle ) equal to ( fall ) )": {"{VALUE0}": "fall", "{COLUMN0}": "secretary_vote", "{COLUMN1}": "election_cycle", "{TABLE0}": "voting record", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( wine ) , that have ( ( winery ) equal to ( robert biale ) )": {"{VALUE0}": "robert biale", "{COLUMN0}": "winery", "{TABLE0}": "wine", "{OP0}": "=", "{AGG0}": "count"}, "( first name of addresses ) , ( last name of addresses ) , ( city of enzyme ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) , and ( ( locations ) satisfied that ( ( location id of staff ) equal to ( location id of enzyme ) ) ) ) , that have ( ( t1.first_name ) like ( '%z%' ) )": {"{VALUE0}": "z", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "city", "{COLUMN3}": "department_id", "{COLUMN4}": "location_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{TABLE2}": "locations", "{OP0}": "like"}, "( marketing region name of addresses ) that belongs to ( ( marketing regions ) , and ( ( stores ) satisfied that ( ( marketing region code of addresses ) equal to ( marketing region code of staff ) ) ) ) , that have ( ( store name of staff ) equal to ( rob dinning ) )": {"{VALUE0}": "rob dinning", "{COLUMN0}": "marketing_region_name", "{COLUMN1}": "marketing_region_code", "{COLUMN2}": "store_name", "{TABLE0}": "marketing regions", "{TABLE1}": "stores", "{OP0}": "="}, "( good or bad customer of addresses ) that belongs to ( ( customers ) , and ( ( discount coupons ) satisfied that ( ( coupon id of addresses ) equal to ( coupon id of staff ) ) ) ) , that have ( ( coupon amount of staff ) equal to ( 500 ) )": {"{VALUE6}": "500", "{COLUMN0}": "good_or_bad_customer", "{COLUMN1}": "coupon_id", "{COLUMN2}": "coupon_amount", "{TABLE0}": "customers", "{TABLE1}": "discount coupons", "{OP0}": "="}, "( investor details of addresses ) that belongs to ( ( investors ) , and ( ( transactions ) satisfied that ( ( investor id of addresses ) equal to ( investor id of staff ) ) ) ) , that have ( ( share count of staff ) greater than ( 100 ) )": {"{VALUE6}": "100", "{COLUMN0}": "investor_details", "{COLUMN1}": "investor_id", "{COLUMN2}": "share_count", "{TABLE0}": "investors", "{TABLE1}": "transactions", "{OP0}": ">"}, "( f id ) that belongs to ( files ) , that have ( ( formats ) equal to ( mp3 ) )": {"{VALUE0}": "mp3", "{COLUMN0}": "f_id", "{COLUMN1}": "formats", "{TABLE0}": "files", "{OP0}": "="}, "( draft details ) that belongs to ( document drafts ) , that have ( ( document id ) equal to ( 7 ) )": {"{VALUE0}": "7", "{COLUMN0}": "draft_details", "{COLUMN1}": "document_id", "{TABLE0}": "document drafts", "{OP0}": "="}, "( distinct ( position ) ) that belongs to ( pilot ) , that have ( ( age ) greater than ( 30 ) )": {"{VALUE0}": "30", "{COLUMN0}": "position", "{COLUMN1}": "age", "{TABLE0}": "pilot", "{OP0}": ">"}, "( event id ) that belongs to ( events ), and except that ( ( event id of addresses ) that belongs to ( ( participants in events ) , and ( ( participants ) satisfied that ( ( participant id of addresses ) equal to ( participant id of staff ) ) ) ) , that have ( ( participant details ) equal to ( 'kenyatta kuhn' ) ))": {"{VALUE0}": "kenyatta kuhn", "{COLUMN0}": "event_id", "{COLUMN1}": "participant_id", "{COLUMN2}": "participant_details", "{TABLE0}": "events", "{TABLE1}": "participants in events", "{TABLE2}": "participants", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( routes ) , and ( ( airports ) satisfied that ( ( dst apid of addresses ) equal to ( apid of staff ) ) ) ) , that have ( ( country of staff ) equal to ( 'italy' ) )": {"{VALUE0}": "italy", "{COLUMN0}": "dst_apid", "{COLUMN1}": "apid", "{COLUMN2}": "country", "{TABLE0}": "routes", "{TABLE1}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "( stuid ) that belongs to ( student ) , that have ( ( advisor ) equal to ( 1121 ) )": {"{VALUE0}": "1121", "{COLUMN0}": "stuid", "{COLUMN1}": "advisor", "{TABLE0}": "student", "{OP0}": "="}, "( distinct ( title ) ) that belongs to ( movie ), and except that ( ( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) , and ( ( reviewer ) satisfied that ( ( rid of addresses ) equal to ( rid of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'chris jackson' ) ))": {"{VALUE0}": "chris jackson", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{COLUMN2}": "rid", "{COLUMN3}": "name", "{TABLE0}": "movie", "{TABLE1}": "rating", "{TABLE2}": "reviewer", "{OP0}": "="}, "( product name of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , that have ( ( color description of member of club ) equal to ( white ) )": {"{VALUE0}": "white", "{COLUMN0}": "product_name", "{COLUMN1}": "color_code", "{COLUMN2}": "color_description", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{OP0}": "="}, "( hispanic ) that belongs to ( city ) , that have ( ( black ) greater than ( 10 ) )": {"{VALUE0}": "10", "{COLUMN0}": "hispanic", "{COLUMN1}": "black", "{TABLE0}": "city", "{OP0}": ">"}, "( distinct ( classroom ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list", "{OP0}": "="}, "( balance of staff ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , that have ( ( t1.name ) like ( '%ee%' ) )": {"{VALUE0}": "ee", "{COLUMN0}": "balance", "{COLUMN1}": "custid", "{COLUMN2}": "name", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{OP0}": "like"}, "( campus ) that belongs to ( campuses ) , that have ( ( location ) equal to ( chico ) )": {"{VALUE0}": "chico", "{COLUMN0}": "campus", "{COLUMN1}": "location", "{TABLE0}": "campuses", "{OP0}": "="}, "( song ) that belongs to ( volume ) , that have ( ( weeks on top ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "song", "{COLUMN1}": "volume", "{COLUMN2}": "weeks_on_top", "{OP0}": ">"}, "( date of notes of addresses ) that belongs to ( ( assessment notes ) , and ( ( students ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , that have ( ( first name of staff ) equal to ( fanny ) )": {"{VALUE0}": "fanny", "{COLUMN0}": "date_of_notes", "{COLUMN1}": "student_id", "{COLUMN2}": "first_name", "{TABLE0}": "assessment notes", "{TABLE1}": "students", "{OP0}": "="}, "( the sum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( headquarter ) equal to ( 'austin' ) )": {"{VALUE0}": "austin", "{COLUMN0}": "revenue", "{COLUMN1}": "headquarter", "{TABLE0}": "manufacturers", "{OP0}": "=", "{AGG0}": "sum"}, "( the number of ( all items ) ) that belongs to ( medicine ) , that have ( ( fda approved ) equal to ( 'no' ) )": {"{VALUE0}": "no", "{COLUMN0}": "fda_approved", "{TABLE0}": "medicine", "{OP0}": "=", "{AGG0}": "count"}, "( name of addresses ) that belongs to ( ( people ) , and ( ( perpetrator ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , that have ( ( country of staff ) not equal to ( china ) )": {"{VALUE0}": "china", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "country", "{TABLE0}": "people", "{TABLE1}": "perpetrator", "{OP0}": "!="}, "( the number of ( distinct ( delegate of staff ) ) ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , that have ( ( population of addresses ) greater than ( 50000 ) )": {"{VALUE6}": "50000", "{COLUMN0}": "delegate", "{COLUMN1}": "county_id", "{COLUMN2}": "district", "{COLUMN3}": "population", "{TABLE0}": "county", "{TABLE1}": "election", "{OP0}": ">", "{AGG0}": "count"}, "( distinct ( start station name ) ) that belongs to ( trip ) , that have ( ( duration ) less than ( 100 ) )": {"{VALUE0}": "100", "{COLUMN0}": "start_station_name", "{COLUMN1}": "duration", "{TABLE0}": "trip", "{OP0}": "<"}, "all items that belongs to ( albums ) , that have ( ( year ) equal to ( 2010 ) )": {"{VALUE0}": "2010", "{COLUMN0}": "year", "{TABLE0}": "albums", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( album ) , and ( ( artist ) satisfied that ( ( artistid of addresses ) equal to ( artistid of staff ) ) ) ) , that have ( ( name of staff ) equal to ( metallica ) )": {"{VALUE0}": "metallica", "{COLUMN0}": "artistid", "{COLUMN1}": "name", "{TABLE0}": "album", "{TABLE1}": "artist", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( exhibition ) , that have ( ( year ) greater than or equal to ( 2005 ) )": {"{VALUE0}": "2005", "{COLUMN0}": "year", "{TABLE0}": "exhibition", "{OP0}": ">=", "{AGG0}": "count"}, "( the sum of ( grant amount ) ) that belongs to ( ( grants ) , and ( ( organisations ) satisfied that ( ( organisation id of addresses ) equal to ( organisation id of staff ) ) ) , and ( ( organisation types ) satisfied that ( ( organisation type of staff ) equal to ( organisation type of enzyme ) ) ) ) , that have ( ( organisation type description of enzyme ) equal to ( 'research' ) )": {"{VALUE0}": "research", "{COLUMN0}": "grant_amount", "{COLUMN1}": "organisation_id", "{COLUMN2}": "organisation_type", "{COLUMN3}": "organisation_type_description", "{TABLE0}": "grants", "{TABLE1}": "organisations", "{TABLE2}": "organisation types", "{OP0}": "=", "{AGG0}": "sum"}, "( the number of ( distinct ( position of member of club ) ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) ) , that have ( ( clubname of club ) equal to ( bootup baltimore ) )": {"{VALUE0}": "bootup baltimore", "{COLUMN0}": "position", "{COLUMN1}": "clubid", "{COLUMN2}": "clubname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{OP0}": "=", "{AGG0}": "count"}, "( address of staff ) that belongs to ( ( staff ) , and ( ( address ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( first name of addresses ) equal to ( 'elsa' ) )": {"{VALUE0}": "elsa", "{COLUMN0}": "address", "{COLUMN1}": "address_id", "{COLUMN2}": "first_name", "{TABLE0}": "staff", "{OP0}": "="}, "( product category code ) , ( typical buying price ) that belongs to ( products ) , that have ( ( product name ) equal to ( cumin ) )": {"{VALUE0}": "cumin", "{COLUMN0}": "product_category_code", "{COLUMN1}": "typical_buying_price", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{OP0}": "="}, "( order id ) that belongs to ( shipments ) , that have ( ( shipment tracking number ) equal to ( 3452 ) )": {"{VALUE0}": "3452", "{COLUMN0}": "order_id", "{COLUMN1}": "shipment_tracking_number", "{TABLE0}": "shipments", "{OP0}": "="}, "( the sum of ( share in percent ) ) that belongs to ( channel ) , that have ( ( owner ) equal to ( 'cctv' ) )": {"{VALUE0}": "cctv", "{COLUMN0}": "share_in_percent", "{COLUMN1}": "owner", "{TABLE0}": "channel", "{OP0}": "=", "{AGG0}": "sum"}, "( census ranking ) that belongs to ( city ) , that have ( ( status ) not equal to ( village ) )": {"{VALUE0}": "village", "{COLUMN0}": "census_ranking", "{COLUMN1}": "status", "{TABLE0}": "city", "{OP0}": "!="}, "( city ) , ( state ) that belongs to ( bank ) , that have ( ( bname ) equal to ( 'morningside' ) )": {"{VALUE0}": "morningside", "{COLUMN0}": "city", "{COLUMN1}": "state", "{COLUMN2}": "bname", "{TABLE0}": "bank", "{OP0}": "="}, "( name of addresses ) that belongs to ( ( tourist attractions ) , and ( ( visits ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) , and ( ( visitors ) satisfied that ( ( tourist id of staff ) equal to ( tourist id of enzyme ) ) ) ) , that have ( ( tourist details of enzyme ) equal to ( vincent ) )": {"{VALUE0}": "vincent", "{COLUMN0}": "name", "{COLUMN1}": "tourist_attraction_id", "{COLUMN2}": "tourist_id", "{COLUMN3}": "tourist_details", "{TABLE0}": "tourist attractions", "{TABLE1}": "visits", "{TABLE2}": "visitors", "{OP0}": "="}, "( emp fname of enzyme ) , ( emp lname of enzyme ) that belongs to ( ( professor ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) , and ( ( employee ) satisfied that ( ( emp num of addresses ) equal to ( emp num of enzyme ) ) ) ) , that have ( ( dept name ) equal to ( biology ) )": {"{VALUE0}": "biology", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_lname", "{COLUMN2}": "dept_code", "{COLUMN3}": "emp_num", "{COLUMN4}": "dept_name", "{TABLE0}": "professor", "{TABLE1}": "department", "{TABLE2}": "employee", "{OP0}": "="}, "( product of club ) that belongs to ( ( product ) , and ( ( store product ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( store ) satisfied that ( ( store id of member of club ) equal to ( store id of student ) ) ) ) , that have ( ( store name of student ) equal to ( miramichi ) )": {"{VALUE0}": "miramichi", "{COLUMN0}": "product", "{COLUMN1}": "product_id", "{COLUMN2}": "store_id", "{COLUMN3}": "store_name", "{TABLE0}": "store product", "{TABLE1}": "store", "{OP0}": "="}, "( email ) that belongs to ( user profiles ) , that have ( ( name ) equal to ( 'mary' ) )": {"{VALUE0}": "mary", "{COLUMN0}": "email", "{COLUMN1}": "name", "{TABLE0}": "user profiles", "{OP0}": "="}, "( the number of ( distinct ( program id ) ) ) that belongs to ( broadcast ) , that have ( ( time of day ) equal to ( 'night' ) )": {"{VALUE0}": "night", "{COLUMN0}": "program_id", "{COLUMN1}": "time_of_day", "{TABLE0}": "broadcast", "{OP0}": "=", "{AGG0}": "count"}, "( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( catnip ) )": {"{VALUE0}": "catnip", "{COLUMN0}": "color_description", "{COLUMN1}": "color_code", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{OP0}": "="}, "( school ) , ( location ) that belongs to ( university ) , that have ( ( affiliation ) equal to ( 'public' ) )": {"{VALUE0}": "public", "{COLUMN0}": "school", "{COLUMN1}": "location", "{COLUMN2}": "affiliation", "{TABLE0}": "university", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( inventory ) , that have ( ( store id ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "store_id", "{TABLE0}": "inventory", "{OP0}": "=", "{AGG0}": "count"}, "( the average of ( capacity ) ) that belongs to ( stadium ) , that have ( ( opening year ) equal to ( 2005 ) )": {"{VALUE0}": "2005", "{COLUMN0}": "capacity", "{COLUMN1}": "opening_year", "{TABLE0}": "stadium", "{OP0}": "=", "{AGG0}": "avg"}, "( roomname ) , ( bedtype ) that belongs to ( rooms ) , that have ( ( decor ) equal to ( traditional ) )": {"{VALUE0}": "traditional", "{COLUMN0}": "roomname", "{COLUMN1}": "bedtype", "{COLUMN2}": "decor", "{TABLE0}": "rooms", "{OP0}": "="}, "( color code of club ) , ( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , that have ( ( product name of club ) equal to ( chervil ) )": {"{VALUE0}": "chervil", "{COLUMN0}": "color_code", "{COLUMN1}": "color_description", "{COLUMN2}": "product_name", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( customers ) , that have ( ( state ) equal to ( ca ) )": {"{VALUE0}": "ca", "{COLUMN0}": "state", "{TABLE0}": "customers", "{OP0}": "=", "{AGG0}": "count"}, "( name of inst ) that belongs to ( ( swimmer ) , and ( ( record ) satisfied that ( ( id of club ) equal to ( swimmer id of member of club ) ) ) , and ( ( event ) satisfied that ( ( event id of member of club ) equal to ( id of student ) ) ) , and ( ( stadium ) satisfied that ( ( id of inst ) equal to ( stadium id of student ) ) ) ) , that have ( ( nationality of club ) equal to ( 'australia' ) )": {"{VALUE0}": "australia", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "swimmer_id", "{COLUMN3}": "event_id", "{COLUMN4}": "stadium_id", "{COLUMN5}": "nationality", "{TABLE0}": "swimmer", "{TABLE1}": "record", "{TABLE2}": "event", "{TABLE3}": "stadium", "{OP0}": "="}, "( fname of addresses ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) , and ( ( dorm ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of staff ) ) ) ) , that have ( ( dorm name of enzyme ) equal to ( 'smith hall' ) )": {"{VALUE0}": "smith hall", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "dormid", "{COLUMN3}": "dorm_name", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{OP0}": "="}, "( book title ) , ( author or editor ) that belongs to ( book club ) , that have ( ( year ) greater than ( 1989 ) )": {"{VALUE0}": "1989", "{COLUMN0}": "book_title", "{COLUMN1}": "author_or_editor", "{COLUMN2}": "year", "{TABLE0}": "book club", "{OP0}": ">"}, "( actual delivery date of addresses ) that belongs to ( ( customer orders ) , and ( ( order items ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( order quantity of staff ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "actual_delivery_date", "{COLUMN1}": "order_id", "{COLUMN2}": "order_quantity", "{TABLE0}": "customer orders", "{TABLE1}": "order items", "{OP0}": "="}, "( problem id ) that belongs to ( problems ) , that have ( ( date problem reported ) greater than ( 1978-06-26 ) )": {"{VALUE0}": "1978-06-26", "{COLUMN0}": "problem_id", "{COLUMN1}": "date_problem_reported", "{TABLE0}": "problems", "{OP0}": ">"}, "( the number of ( all items ) ) that belongs to ( club rank ) , that have ( ( total ) less than ( 10 ) )": {"{VALUE0}": "10", "{COLUMN0}": "total", "{TABLE0}": "club rank", "{OP0}": "<", "{AGG0}": "count"}, "( the maximum of ( active to date of member of club ) ) that belongs to ( ( customers ) , and ( ( customer contact channels ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( customer name of club ) equal to ( tillman ernser ) )": {"{VALUE0}": "tillman ernser", "{COLUMN0}": "active_to_date", "{COLUMN1}": "customer_id", "{COLUMN2}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customer contact channels", "{OP0}": "=", "{AGG0}": "max"}, "( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) )": {"{VALUE0}": "food", "{COLUMN0}": "allergy", "{COLUMN1}": "allergytype", "{TABLE0}": "has allergy", "{TABLE1}": "allergy type", "{OP0}": "=", "{AGG0}": "count"}, "( location code ) that belongs to ( ref locations ) , that have ( ( location name ) equal to ( canada ) )": {"{VALUE0}": "canada", "{COLUMN0}": "location_code", "{COLUMN1}": "location_name", "{TABLE0}": "reference locations", "{OP0}": "="}, "( amenity name of enzyme ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of staff ) equal to ( amenid of enzyme ) ) ) ) , that have ( ( dorm name of addresses ) equal to ( 'smith hall' ) )": {"{VALUE0}": "smith hall", "{COLUMN0}": "amenity_name", "{COLUMN1}": "dormid", "{COLUMN2}": "amenid", "{COLUMN3}": "dorm_name", "{TABLE0}": "dorm", "{TABLE1}": "has amenity", "{TABLE2}": "dorm amenity", "{OP0}": "="}, "( the number of ( distinct ( instrument ) ) ) that belongs to ( ( instruments ) , and ( ( band ) satisfied that ( ( bandmateid of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( lastname of staff ) equal to ( heilo ) )": {"{VALUE0}": "heilo", "{COLUMN0}": "instrument", "{COLUMN1}": "bandmateid", "{COLUMN2}": "id", "{COLUMN3}": "lastname", "{TABLE0}": "instruments", "{TABLE1}": "band", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( addresses ) , that have ( ( state province county ) equal to ( colorado ) )": {"{VALUE0}": "colorado", "{COLUMN0}": "state_province_county", "{TABLE0}": "addresses", "{OP0}": "=", "{AGG0}": "count"}, "( apt number ) that belongs to ( apartments ) , that have ( ( apt type code ) equal to ( flat ) )": {"{VALUE0}": "flat", "{COLUMN0}": "apt_number", "{COLUMN1}": "apt_type_code", "{TABLE0}": "apartments", "{OP0}": "="}, "( title of enzyme ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of enzyme ) equal to ( songid of addresses ) ) ) ) , that have ( ( firstname of staff ) equal to ( marianne ) )": {"{VALUE0}": "marianne", "{COLUMN0}": "title", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "songid", "{COLUMN4}": "firstname", "{TABLE0}": "performance", "{TABLE1}": "band", "{TABLE2}": "songs", "{OP0}": "="}, "( role description ) that belongs to ( roles ) , that have ( ( role name ) equal to ( proof reader ) )": {"{VALUE0}": "proof reader", "{COLUMN0}": "role_description", "{COLUMN1}": "role_name", "{TABLE0}": "roles", "{OP0}": "="}, "( budget type description ) that belongs to ( ref budget codes ) , that have ( ( budget type code ) equal to ( org ) )": {"{VALUE0}": "org", "{COLUMN0}": "budget_type_description", "{COLUMN1}": "budget_type_code", "{TABLE0}": "reference budget codes", "{OP0}": "="}, "( crs credit ) , ( crs description ) that belongs to ( course ) , that have ( ( crs code ) equal to ( 'qm-261' ) )": {"{VALUE0}": "qm-261", "{COLUMN0}": "crs_credit", "{COLUMN1}": "crs_description", "{COLUMN2}": "crs_code", "{TABLE0}": "course", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , that have ( ( characteristic name of student ) equal to ( hot ) )": {"{VALUE0}": "hot", "{COLUMN0}": "product_id", "{COLUMN1}": "characteristic_id", "{COLUMN2}": "characteristic_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": "=", "{AGG0}": "count"}, "( fname of addresses ) , ( lname of addresses ) that belongs to ( ( faculty ) , and ( ( member of ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) ) , that have ( ( dno of staff ) equal to ( 520 ) )": {"{VALUE7}": "520", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "facid", "{COLUMN3}": "dno", "{TABLE0}": "faculty", "{TABLE1}": "member of", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( bedtype ) equal to ( king ) )": {"{VALUE0}": "king", "{COLUMN0}": "bedtype", "{TABLE0}": "rooms", "{OP0}": "=", "{AGG0}": "count"}, "( text ) that belongs to ( tweets ) , that have ( ( text ) like ( '%intern%' ) )": {"{VALUE0}": "intern", "{COLUMN0}": "text", "{TABLE0}": "tweets", "{OP0}": "like"}, "( the number of ( all items ) ) that belongs to ( airports ) , that have ( ( name ) like ( '%international%' ) )": {"{VALUE0}": "international", "{COLUMN0}": "name", "{TABLE0}": "airports", "{OP0}": "like", "{AGG0}": "count"}, "( product category code ) that belongs to ( products ) , that have ( ( product name ) equal to ( flax ) )": {"{VALUE0}": "flax", "{COLUMN0}": "product_category_code", "{COLUMN1}": "product_name", "{TABLE0}": "products", "{OP0}": "="}, "( the number of ( distinct ( characteristic name of student ) ) ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , that have ( ( product name of club ) equal to ( sesame ) )": {"{VALUE0}": "sesame", "{COLUMN0}": "characteristic_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{COLUMN3}": "product_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( member ) , that have ( ( address ) not equal to ( 'hartford' ) )": {"{VALUE0}": "hartford", "{COLUMN0}": "address", "{TABLE0}": "member", "{OP0}": "!=", "{AGG0}": "count"}, "( other item details of addresses ) that belongs to ( ( order items ) , and ( ( products ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( product price of staff ) greater than ( 2000 ) )": {"{VALUE6}": "2000", "{COLUMN0}": "other_item_details", "{COLUMN1}": "product_id", "{COLUMN2}": "product_price", "{TABLE0}": "order items", "{TABLE1}": "products", "{OP0}": ">"}, "( clubdesc ) that belongs to ( club ) , that have ( ( clubname ) equal to ( pen and paper gaming ) )": {"{VALUE0}": "pen and paper gaming", "{COLUMN0}": "clubdesc", "{COLUMN1}": "clubname", "{TABLE0}": "club", "{OP0}": "="}, "( headquartered city of student ) that belongs to ( ( store ) , and ( ( store district ) satisfied that ( ( store id of club ) equal to ( store id of member of club ) ) ) , and ( ( district ) satisfied that ( ( district id of member of club ) equal to ( district id of student ) ) ) ) , that have ( ( store name of club ) equal to ( blackville ) )": {"{VALUE0}": "blackville", "{COLUMN0}": "headquartered_city", "{COLUMN1}": "store_id", "{COLUMN2}": "district_id", "{COLUMN3}": "store_name", "{TABLE0}": "store", "{TABLE1}": "store district", "{TABLE2}": "district", "{OP0}": "="}, "( cust name ) that belongs to ( customer ), and except that ( ( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , that have ( ( loan type of staff ) equal to ( 'mortgages' ) ))": {"{VALUE0}": "mortgages", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "loan_type", "{TABLE0}": "customer", "{TABLE1}": "loan", "{OP0}": "="}, "( player of staff ) that belongs to ( ( country ) , and ( ( match season ) satisfied that ( ( country id of addresses ) equal to ( country of staff ) ) ) ) , that have ( ( country name of addresses ) equal to ( indonesia ) )": {"{VALUE0}": "indonesia", "{COLUMN0}": "player", "{COLUMN1}": "country", "{COLUMN2}": "country_id", "{COLUMN3}": "country_name", "{TABLE0}": "match season", "{OP0}": "="}, "( product name ) that belongs to ( products ) , that have ( ( product category code ) equal to ( spices ) )": {"{VALUE0}": "spices", "{COLUMN0}": "product_name", "{COLUMN1}": "product_category_code", "{TABLE0}": "products", "{OP0}": "="}, "( distinct ( age of addresses ) ) that belongs to ( ( management ) , and ( ( head ) satisfied that ( ( head id of addresses ) equal to ( head id of staff ) ) ) ) , that have ( ( temporary acting of staff ) equal to ( 'yes' ) )": {"{VALUE0}": "yes", "{COLUMN0}": "age", "{COLUMN1}": "head_id", "{COLUMN2}": "temporary_acting", "{TABLE0}": "management", "{TABLE1}": "head", "{OP0}": "="}, "( the sum of ( order quantity of student ) ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( order items ) satisfied that ( ( order id of member of club ) equal to ( order id of student ) ) ) ) , that have ( ( customer name of club ) equal to ( rodrick heaney ) )": {"{VALUE0}": "rodrick heaney", "{COLUMN0}": "order_quantity", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_id", "{COLUMN3}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{TABLE2}": "order items", "{OP0}": "=", "{AGG0}": "sum"}, "( customer name ) that belongs to ( customers ) , that have ( ( payment method ) not equal to ( 'cash' ) )": {"{VALUE0}": "cash", "{COLUMN0}": "customer_name", "{COLUMN1}": "payment_method", "{TABLE0}": "customers", "{OP0}": "!="}, "( distinct ( supplier name of addresses ) ) , ( supplier phone of addresses ) that belongs to ( ( suppliers ) , and ( ( product suppliers ) satisfied that ( ( supplier id of addresses ) equal to ( supplier id of staff ) ) ) , and ( ( products ) satisfied that ( ( product id of staff ) equal to ( product id of enzyme ) ) ) ) , that have ( ( product name of enzyme ) equal to ( red jeans ) )": {"{VALUE0}": "red jeans", "{COLUMN0}": "supplier_name", "{COLUMN1}": "supplier_phone", "{COLUMN2}": "supplier_id", "{COLUMN3}": "product_id", "{COLUMN4}": "product_name", "{TABLE0}": "suppliers", "{TABLE1}": "product suppliers", "{TABLE2}": "products", "{OP0}": "="}, "( rid ) that belongs to ( rating ) , that have ( ( stars ) not equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "rid", "{COLUMN1}": "stars", "{TABLE0}": "rating", "{OP0}": "!="}, "( outcome description of addresses ) that belongs to ( ( research outcomes ) , and ( ( project outcomes ) satisfied that ( ( outcome code of addresses ) equal to ( outcome code of staff ) ) ) , and ( ( projects ) satisfied that ( ( project id of staff ) equal to ( project id of enzyme ) ) ) ) , that have ( ( project details of enzyme ) equal to ( 'sint' ) )": {"{VALUE0}": "sint", "{COLUMN0}": "outcome_description", "{COLUMN1}": "outcome_code", "{COLUMN2}": "project_id", "{COLUMN3}": "project_details", "{TABLE0}": "research outcomes", "{TABLE1}": "project outcomes", "{TABLE2}": "projects", "{OP0}": "="}, "( other details ) that belongs to ( locations ) , that have ( ( location name ) equal to ( uk gallery ) )": {"{VALUE0}": "uk gallery", "{COLUMN0}": "other_details", "{COLUMN1}": "location_name", "{TABLE0}": "locations", "{OP0}": "="}, "( cust name ) that belongs to ( customer ), and except that ( ( cust name ) that belongs to ( customer ) , that have ( ( acc type ) equal to ( 'saving' ) ))": {"{VALUE0}": "saving", "{COLUMN0}": "cust_name", "{COLUMN1}": "acc_type", "{TABLE0}": "customer", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( airports ) , and ( ( routes ) satisfied that ( ( apid of addresses ) equal to ( dst apid of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( 'john f kennedy international airport' ) )": {"{VALUE0}": "john f kennedy international airport", "{COLUMN0}": "apid", "{COLUMN1}": "dst_apid", "{COLUMN2}": "name", "{TABLE0}": "airports", "{TABLE1}": "routes", "{OP0}": "=", "{AGG0}": "count"}, "( lname of student ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( clubname of club ) equal to ( bootup baltimore ) )": {"{VALUE0}": "bootup baltimore", "{COLUMN0}": "lname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "clubname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "="}, "( date of transaction ) that belongs to ( transactions ) , that have ( ( transaction type code ) equal to ( sale ) )": {"{VALUE0}": "sale", "{COLUMN0}": "date_of_transaction", "{COLUMN1}": "transaction_type_code", "{TABLE0}": "transactions", "{OP0}": "="}, "( birthdate ) that belongs to ( employee ) , that have ( ( city ) equal to ( edmonton ) )": {"{VALUE0}": "edmonton", "{COLUMN0}": "birthdate", "{COLUMN1}": "city", "{TABLE0}": "employee", "{OP0}": "="}, "( name ) that belongs to ( track ) , that have ( ( name ) like ( '%you%' ) )": {"{VALUE0}": "you", "{COLUMN0}": "name", "{TABLE0}": "track", "{OP0}": "like"}, "( manager name of enzyme ) that belongs to ( ( station company ) , and ( ( company ) satisfied that ( ( company id of addresses ) equal to ( company id of staff ) ) ) , and ( ( gas station ) satisfied that ( ( station id of addresses ) equal to ( station id of enzyme ) ) ) ) , that have ( ( company of staff ) equal to ( 'exxonmobil' ) )": {"{VALUE0}": "exxonmobil", "{COLUMN0}": "manager_name", "{COLUMN1}": "company", "{COLUMN2}": "company_id", "{COLUMN3}": "station_id", "{TABLE0}": "station company", "{TABLE1}": "gas station", "{OP0}": "="}, "( booking status code of addresses ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( apt number of staff ) equal to ( suite 634 ) )": {"{VALUE0}": "suite 634", "{COLUMN0}": "booking_status_code", "{COLUMN1}": "apt_id", "{COLUMN2}": "apt_number", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments", "{OP0}": "="}, "( shop details of addresses ) that belongs to ( ( shops ) , and ( ( tourist attractions ) satisfied that ( ( shop id of addresses ) equal to ( tourist attraction id of staff ) ) ) ) , that have ( ( how to get there of staff ) equal to ( walk ) )": {"{VALUE0}": "walk", "{COLUMN0}": "shop_details", "{COLUMN1}": "shop_id", "{COLUMN2}": "tourist_attraction_id", "{COLUMN3}": "how_to_get_there", "{TABLE0}": "shops", "{TABLE1}": "tourist attractions", "{OP0}": "="}, "( title of enzyme ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of enzyme ) equal to ( songid of addresses ) ) ) ) , that have ( ( lastname of staff ) equal to ( heilo ) )": {"{VALUE0}": "heilo", "{COLUMN0}": "title", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "songid", "{COLUMN4}": "lastname", "{TABLE0}": "performance", "{TABLE1}": "band", "{TABLE2}": "songs", "{OP0}": "="}, "( campus ) that belongs to ( campuses ) , that have ( ( county ) equal to ( los angeles ) )": {"{VALUE0}": "los angeles", "{COLUMN0}": "campus", "{COLUMN1}": "county", "{TABLE0}": "campuses", "{OP0}": "="}, "( distinct ( apt number of staff ) ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( booking status code of addresses ) equal to ( confirmed ) )": {"{VALUE0}": "confirmed", "{COLUMN0}": "apt_number", "{COLUMN1}": "apt_id", "{COLUMN2}": "booking_status_code", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments", "{OP0}": "="}, "( rid ) that belongs to ( rating ), and except that ( ( rid ) that belongs to ( rating ) , that have ( ( stars ) equal to ( 4 ) ))": {"{VALUE0}": "4", "{COLUMN0}": "rid", "{COLUMN1}": "stars", "{TABLE0}": "rating", "{OP0}": "="}, "( the number of ( distinct ( prof num ) ) ) that belongs to ( class ) , that have ( ( crs code ) equal to ( acct-211 ) )": {"{VALUE0}": "acct-211", "{COLUMN0}": "prof_num", "{COLUMN1}": "crs_code", "{TABLE0}": "class", "{OP0}": "=", "{AGG0}": "count"}, "( name ) that belongs to ( tourist attractions ) , that have ( ( how to get there ) equal to ( bus ) )": {"{VALUE0}": "bus", "{COLUMN0}": "name", "{COLUMN1}": "how_to_get_there", "{TABLE0}": "tourist attractions", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( airlines ) , that have ( ( country ) equal to ( 'russia' ) )": {"{VALUE0}": "russia", "{COLUMN0}": "country", "{TABLE0}": "airlines", "{OP0}": "=", "{AGG0}": "count"}, "( location name ) , ( location description ) that belongs to ( ref locations ) , that have ( ( location code ) equal to ( x ) )": {"{VALUE0}": "x", "{COLUMN0}": "location_name", "{COLUMN1}": "location_description", "{COLUMN2}": "location_code", "{TABLE0}": "reference locations", "{OP0}": "="}, "( song name ) that belongs to ( song ) , that have ( ( languages ) equal to ( english ) )": {"{VALUE0}": "english", "{COLUMN0}": "song_name", "{COLUMN1}": "languages", "{TABLE0}": "song", "{OP0}": "="}, "( physician ) , ( department ) that belongs to ( affiliated with ) , that have ( ( primaryaffiliation ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "physician", "{COLUMN1}": "department", "{COLUMN2}": "primaryaffiliation", "{TABLE0}": "affiliated with", "{OP0}": "="}, "( friend of staff ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( name of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( 'bob' ) )": {"{VALUE0}": "bob", "{COLUMN0}": "friend", "{COLUMN1}": "name", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( storm ) , that have ( ( number deaths ) greater than ( 0 ) )": {"{VALUE0}": "0", "{COLUMN0}": "number_deaths", "{TABLE0}": "storm", "{OP0}": ">", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( customer ) , that have ( ( email ) like ( %gmail.com% ) )": {"{VALUE0}": "gmail.com", "{COLUMN0}": "email", "{TABLE0}": "customer", "{OP0}": "like", "{AGG0}": "count"}, "( marketing region descriptrion ) that belongs to ( marketing regions ) , that have ( ( marketing region name ) equal to ( china ) )": {"{VALUE0}": "china", "{COLUMN0}": "marketing_region_descriptrion", "{COLUMN1}": "marketing_region_name", "{TABLE0}": "marketing regions", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( courses ) , and ( ( student course attendance ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( course name of addresses ) equal to ( english ) )": {"{VALUE0}": "english", "{COLUMN0}": "course_id", "{COLUMN1}": "course_name", "{TABLE0}": "courses", "{TABLE1}": "student course attendance", "{OP0}": "=", "{AGG0}": "count"}, "( name of staff ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , that have ( ( city of addresses ) equal to ( 'new york city' ) )": {"{VALUE0}": "new york city", "{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "city", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ref shipping agents , and ( documents satisfied that ( ( shipping agent code of documents ) equal to ( shipping agent code of ref shipping agents ) ) ) ) , that have ( ( shipping agent name of ref shipping agents ) equal to ( usps ) )": {"{VALUE0}": "usps", "{COLUMN0}": "shipping_agent_code", "{COLUMN1}": "shipping_agent_name", "{TABLE0}": "reference shipping agents", "{TABLE1}": "documents", "{OP0}": "=", "{AGG0}": "count"}, "( date of birth ) that belongs to ( customers ) , that have ( ( customer status code ) equal to ( 'good customer' ) )": {"{VALUE0}": "good customer", "{COLUMN0}": "date_of_birth", "{COLUMN1}": "customer_status_code", "{TABLE0}": "customers", "{OP0}": "="}, "( distinct ( customer name of addresses ) ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) , and ( ( order items ) satisfied that ( ( order id of staff ) equal to ( order id of enzyme ) ) ) , and ( ( products ) satisfied that ( ( product id of enzyme ) equal to ( product id of trip ) ) ) ) , that have ( ( product name of trip ) equal to ( keyboard ) )": {"{VALUE0}": "keyboard", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_id", "{COLUMN3}": "product_id", "{COLUMN4}": "product_name", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{TABLE2}": "order items", "{TABLE3}": "products", "{OP0}": "="}, "( the number of ( distinct ( customer id ) ) ) that belongs to ( customer orders ) , that have ( ( order status ) equal to ( cancelled ) )": {"{VALUE0}": "cancelled", "{COLUMN0}": "customer_id", "{COLUMN1}": "order_status", "{TABLE0}": "customer orders", "{OP0}": "=", "{AGG0}": "count"}, "( the sum of ( domestic passengers ) ) that belongs to ( airport ) , that have ( ( airport_name ) like ( %london% ) )": {"{VALUE0}": "london", "{COLUMN0}": "domestic_passengers", "{COLUMN1}": "airport_name", "{TABLE0}": "airport", "{OP0}": "like", "{AGG0}": "sum"}, "( dname of club ) that belongs to ( ( department ) , and ( ( dept locations ) satisfied that ( ( dnumber of club ) equal to ( dnumber of member of club ) ) ) ) , that have ( ( dlocation of member of club ) equal to ( 'houston' ) )": {"{VALUE0}": "houston", "{COLUMN0}": "dname", "{COLUMN1}": "dnumber", "{COLUMN2}": "dlocation", "{TABLE0}": "department", "{TABLE1}": "department locations", "{OP0}": "="}, "( name first ) , ( name last ) that belongs to ( ( player ) , and ( ( all star ) satisfied that ( ( player id of addresses ) equal to ( player id of staff ) ) ) ) , that have ( ( year ) equal to ( 1998 ) )": {"{VALUE4}": "1998", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "player_id", "{COLUMN3}": "year", "{TABLE0}": "player", "{TABLE1}": "all star", "{OP0}": "="}, "( nickname ) that belongs to ( school details ) , that have ( ( division ) not equal to ( division 1 ) )": {"{VALUE0}": "division 1", "{COLUMN0}": "nickname", "{COLUMN1}": "division", "{TABLE0}": "school details", "{OP0}": "!="}, "( the number of ( all items ) ) that belongs to ( ( employee ) , and ( ( class ) satisfied that ( ( emp num of addresses ) equal to ( prof num of staff ) ) ) ) , that have ( ( emp lname of addresses ) equal to ( 'graztevski' ) )": {"{VALUE0}": "graztevski", "{COLUMN0}": "emp_num", "{COLUMN1}": "prof_num", "{COLUMN2}": "emp_lname", "{TABLE0}": "employee", "{TABLE1}": "class", "{OP0}": "=", "{AGG0}": "count"}, "( stuid ) that belongs to ( student ) , that have ( ( sex ) equal to ( 'm' ) )": {"{VALUE0}": "m", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{TABLE0}": "student", "{OP0}": "="}, "( customer name of club ) , ( order date of member of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( order status ) equal to ( delivered ) )": {"{VALUE0}": "delivered", "{COLUMN0}": "customer_name", "{COLUMN1}": "order_date", "{COLUMN2}": "customer_id", "{COLUMN3}": "order_status", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{OP0}": "="}, "( dept address ) that belongs to ( department ) , that have ( ( dept name ) equal to ( 'history' ) )": {"{VALUE0}": "history", "{COLUMN0}": "dept_address", "{COLUMN1}": "dept_name", "{TABLE0}": "department", "{OP0}": "="}, "( employee id ) that belongs to ( employees ) , that have ( ( employee name ) equal to ( ebba ) )": {"{VALUE0}": "ebba", "{COLUMN0}": "employee_id", "{COLUMN1}": "employee_name", "{TABLE0}": "employees", "{OP0}": "="}, "( campus ) that belongs to ( campuses ) , that have ( ( year ) less than ( 1800 ) )": {"{VALUE0}": "1800", "{COLUMN0}": "campus", "{COLUMN1}": "year", "{TABLE0}": "campuses", "{OP0}": "<"}, "( product category description ) that belongs to ( ref product categories ) , that have ( ( product category code ) equal to ( spices ) )": {"{VALUE0}": "spices", "{COLUMN0}": "product_category_description", "{COLUMN1}": "product_category_code", "{TABLE0}": "reference product categories", "{OP0}": "="}, "( name ) that belongs to ( employee ), and except that ( ( name of addresses ) that belongs to ( ( employee ) , and ( ( certificate ) satisfied that ( ( eid of addresses ) equal to ( eid of staff ) ) ) , and ( ( aircraft ) satisfied that ( ( aid of enzyme ) equal to ( aid of staff ) ) ) ) , that have ( ( name of enzyme ) equal to ( boeing 737-800 ) ))": {"{VALUE0}": "boeing 737-800", "{COLUMN0}": "name", "{COLUMN1}": "eid", "{COLUMN2}": "aid", "{TABLE0}": "employee", "{TABLE1}": "certificate", "{TABLE2}": "aircraft", "{OP0}": "="}, "( fname of club ) , ( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) ) , that have ( ( title of student ) equal to ( nameless , painless ) )": {"{VALUE0}": "nameless ,  painless", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "authid", "{COLUMN3}": "paperid", "{COLUMN4}": "title", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{OP0}": "="}, "( customer phone ) that belongs to ( performers ) , that have ( ( customer name ) equal to ( ashley ) )": {"{VALUE0}": "ashley", "{COLUMN0}": "customer_phone", "{COLUMN1}": "customer_name", "{TABLE0}": "performers", "{OP0}": "="}, "( apt type code of staff ) , ( apt number of staff ) that belongs to ( ( apartment buildings ) , and ( ( apartments ) satisfied that ( ( building id of addresses ) equal to ( building id of staff ) ) ) ) , that have ( ( building manager of addresses ) equal to ( kyle ) )": {"{VALUE0}": "kyle", "{COLUMN0}": "apt_type_code", "{COLUMN1}": "apt_number", "{COLUMN2}": "building_id", "{COLUMN3}": "building_manager", "{TABLE0}": "apartment buildings", "{TABLE1}": "apartments", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( ( department stores ) , and ( ( department store chain ) satisfied that ( ( dept store chain id of addresses ) equal to ( dept store chain id of staff ) ) ) ) , that have ( ( dept store chain name of staff ) equal to ( south ) )": {"{VALUE0}": "south", "{COLUMN0}": "dept_store_chain_id", "{COLUMN1}": "dept_store_chain_name", "{TABLE0}": "department stores", "{TABLE1}": "department store chain", "{OP0}": "=", "{AGG0}": "count"}, "( official native language ) that belongs to ( country ) , that have ( ( official_native_language ) like ( %english% ) )": {"{VALUE0}": "english", "{COLUMN0}": "official_native_language", "{COLUMN1}": "country", "{OP0}": "like"}, "( organization name ) that belongs to ( organizations ) , that have ( ( organization_name ) like ( %party% ) )": {"{VALUE0}": "party", "{COLUMN0}": "organization_name", "{TABLE0}": "organizations", "{OP0}": "like"}, "( document id of addresses ) that belongs to ( ( documents ) , and ( ( documents with expenses ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) ) , that have ( ( t1.document_name ) like ( '%s%' ) )": {"{VALUE0}": "s", "{COLUMN0}": "document_id", "{COLUMN1}": "document_name", "{TABLE0}": "documents", "{TABLE1}": "documents with expenses", "{OP0}": "like"}, "( the number of ( all items ) ) that belongs to ( artist ) , that have ( ( country ) equal to ( bangladesh ) )": {"{VALUE0}": "bangladesh", "{COLUMN0}": "country", "{TABLE0}": "artist", "{OP0}": "=", "{AGG0}": "count"}, "( lastname ) that belongs to ( list ) , that have ( ( classroom ) equal to ( 111 ) )": {"{VALUE0}": "111", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{TABLE0}": "list", "{OP0}": "="}, "( customer id ) that belongs to ( customers ) , that have ( ( customer_name ) like ( %diana% ) )": {"{VALUE0}": "diana", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_name", "{TABLE0}": "customers", "{OP0}": "like"}, "( distinct ( catalog publisher ) ) that belongs to ( catalogs ) , that have ( ( catalog_publisher ) like ( %murray% ) )": {"{VALUE0}": "murray", "{COLUMN0}": "catalog_publisher", "{TABLE0}": "catalogs", "{OP0}": "like"}, "( the number of ( all items ) ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) , and ( ( songs ) satisfied that ( ( songid of enzyme ) equal to ( songid of addresses ) ) ) ) , that have ( ( title of enzyme ) equal to ( flash ) )": {"{VALUE0}": "flash", "{COLUMN0}": "bandmate", "{COLUMN1}": "id", "{COLUMN2}": "songid", "{COLUMN3}": "title", "{TABLE0}": "performance", "{TABLE1}": "band", "{TABLE2}": "songs", "{OP0}": "=", "{AGG0}": "count"}, "( product name of staff ) that belongs to ( ( view product availability ) , and ( ( products for hire ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( available yn of addresses ) equal to ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{COLUMN2}": "available_yn", "{TABLE0}": "view product availability", "{TABLE1}": "products for hire", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( allergy type ) , that have ( ( allergytype ) equal to ( animal ) )": {"{VALUE0}": "animal", "{COLUMN0}": "allergytype", "{TABLE0}": "allergy type", "{OP0}": "=", "{AGG0}": "count"}, "( roomname of staff ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , that have ( ( firstname ) like ( '%roy%' ) )": {"{VALUE0}": "roy", "{COLUMN0}": "roomname", "{COLUMN1}": "room", "{COLUMN2}": "roomid", "{COLUMN3}": "firstname", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{OP0}": "like"}, "( the maximum of ( account details ) ) that belongs to ( accounts ) and ( account details ) that belongs to ( accounts ) , that have ( ( account_details ) like ( %5% ) )": {"{VALUE0}": "5", "{COLUMN0}": "account_details", "{TABLE0}": "accounts", "{OP0}": "like", "{AGG0}": "max"}, "( allergytype ) that belongs to ( allergy type ) , that have ( ( allergy ) equal to ( cat ) )": {"{VALUE0}": "cat", "{COLUMN0}": "allergytype", "{COLUMN1}": "allergy", "{TABLE0}": "allergy type", "{OP0}": "="}, "( founder ) that belongs to ( manufacturers ) , that have ( ( name ) like ( 's%' ) )": {"{VALUE0}": "s", "{COLUMN0}": "founder", "{COLUMN1}": "name", "{TABLE0}": "manufacturers", "{OP0}": "like"}, "( class code ) that belongs to ( class ) , that have ( ( class room ) equal to ( 'klr209' ) )": {"{VALUE0}": "klr209", "{COLUMN0}": "class_code", "{COLUMN1}": "class_room", "{TABLE0}": "class", "{OP0}": "="}, "( location name ) that belongs to ( locations ) , that have ( ( location_name ) like ( %film% ) )": {"{VALUE0}": "film", "{COLUMN0}": "location_name", "{TABLE0}": "locations", "{OP0}": "like"}, "( date opened of member of club ) , ( date closed of member of club ) that belongs to ( ( customers ) , and ( ( customers policies ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( t1.customer_name ) like ( %diana% ) )": {"{VALUE0}": "diana", "{COLUMN0}": "date_opened", "{COLUMN1}": "date_closed", "{COLUMN2}": "customer_id", "{COLUMN3}": "customer_name", "{TABLE0}": "customers", "{TABLE1}": "customers policies", "{OP0}": "like"}, "( lname ) that belongs to ( authors ) , that have ( ( fname ) equal to ( amal ) )": {"{VALUE0}": "amal", "{COLUMN0}": "lname", "{COLUMN1}": "fname", "{TABLE0}": "authors", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( files ) , that have ( ( duration ) like ( 4:% ) )": {"{VALUE0}": "4:", "{COLUMN0}": "duration", "{TABLE0}": "files", "{OP0}": "like", "{AGG0}": "count"}, "( project details of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) , and ( ( research outcomes ) satisfied that ( ( outcome code of staff ) equal to ( outcome code of enzyme ) ) ) ) , that have ( ( t3.outcome_description ) like ( '%published%' ) )": {"{VALUE0}": "published", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{COLUMN2}": "outcome_code", "{COLUMN3}": "outcome_description", "{TABLE0}": "projects", "{TABLE1}": "project outcomes", "{TABLE2}": "research outcomes", "{OP0}": "like"}, "( building address ) , ( building phone ) that belongs to ( apartment buildings ) , that have ( ( building manager ) equal to ( brenden ) )": {"{VALUE0}": "brenden", "{COLUMN0}": "building_address", "{COLUMN1}": "building_phone", "{COLUMN2}": "building_manager", "{TABLE0}": "apartment buildings", "{OP0}": "="}, "( customer details ) that belongs to ( customers ) , that have ( ( customer_details ) like ( %diana% ) )": {"{VALUE0}": "diana", "{COLUMN0}": "customer_details", "{TABLE0}": "customers", "{OP0}": "like"}, "( the number of ( all items ) ) that belongs to ( video games ) , that have ( ( gtype ) equal to ( massively multiplayer online game ) )": {"{VALUE0}": "massively multiplayer online game", "{COLUMN0}": "gtype", "{TABLE0}": "video games", "{OP0}": "=", "{AGG0}": "count"}, "( distinct ( blockcode ) ) that belongs to ( room ) , that have ( ( unavailable ) equal to ( 0 ) )": {"{VALUE0}": "0", "{COLUMN0}": "blockcode", "{COLUMN1}": "room", "{COLUMN2}": "unavailable", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( university ) , that have ( ( location ) like ( %ny% ) )": {"{VALUE0}": "ny", "{COLUMN0}": "location", "{TABLE0}": "university", "{OP0}": "like", "{AGG0}": "count"}, "( distinct ( stageposition of addresses ) ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( firstname ) equal to ( solveig ) )": {"{VALUE0}": "solveig", "{COLUMN0}": "stageposition", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "firstname", "{TABLE0}": "performance", "{TABLE1}": "band", "{OP0}": "="}, "( customer name of staff ) , ( city of enzyme ) , ( date from of addresses ) , ( date to of addresses ) that belongs to ( ( customer address history ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) , and ( ( addresses ) satisfied that ( ( address id of addresses ) equal to ( address id of enzyme ) ) ) )": {"{COLUMN0}": "customer_name", "{COLUMN1}": "city", "{COLUMN2}": "date_from", "{COLUMN3}": "date_to", "{COLUMN4}": "customer_id", "{COLUMN5}": "address_id", "{TABLE0}": "customer address history", "{TABLE1}": "customers", "{TABLE2}": "addresses"}, "( name of enzyme ) , ( title of staff ) , ( date of addresses ) , ( price of addresses ) that belongs to ( ( schedule ) , and ( ( film ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) , and ( ( cinema ) satisfied that ( ( cinema id of addresses ) equal to ( cinema id of enzyme ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "title", "{COLUMN2}": "date", "{COLUMN3}": "price", "{COLUMN4}": "film_id", "{COLUMN5}": "cinema_id", "{TABLE0}": "schedule", "{TABLE1}": "film", "{TABLE2}": "cinema"}, "( code of addresses ) , ( fate of addresses ) , ( name of staff ) that belongs to ( ( mission ) , and ( ( ship ) satisfied that ( ( ship id of addresses ) equal to ( ship id of staff ) ) ) )": {"{COLUMN0}": "code", "{COLUMN1}": "fate", "{COLUMN2}": "name", "{COLUMN3}": "ship_id", "{TABLE0}": "mission", "{TABLE1}": "ship"}, "( name of enzyme ) , ( name of staff ) that belongs to ( ( office locations ) , and ( ( buildings ) satisfied that ( ( building id of addresses ) equal to ( id of staff ) ) ) , and ( ( companies ) satisfied that ( ( company id of addresses ) equal to ( id of enzyme ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "building_id", "{COLUMN2}": "id", "{COLUMN3}": "company_id", "{TABLE0}": "office locations", "{TABLE1}": "buildings", "{TABLE2}": "companies"}, "( name ) , ( course id ) that belongs to ( ( instructor ) , and ( ( teaches ) satisfied that ( ( id of addresses ) equal to ( id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "course_id", "{COLUMN2}": "id", "{TABLE0}": "instructor", "{TABLE1}": "teaches"}, "( invoice date of addresses ) , ( order id of addresses ) , ( order details of staff ) that belongs to ( ( invoices ) , and ( ( orders ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) )": {"{COLUMN0}": "invoice_date", "{COLUMN1}": "order_id", "{COLUMN2}": "order_details", "{TABLE0}": "invoices", "{TABLE1}": "orders"}, "( name ) , ( class ) , ( rank ) that belongs to ( captain )": {"{COLUMN0}": "name", "{COLUMN1}": "class", "{COLUMN2}": "rank", "{TABLE0}": "captain"}, "( distinct ( name of addresses ) ) , ( nationality of addresses ) that belongs to ( ( architect ) , and ( ( mill ) satisfied that ( ( id of addresses ) equal to ( architect id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "nationality", "{COLUMN2}": "id", "{COLUMN3}": "architect_id", "{TABLE0}": "architect", "{TABLE1}": "mill"}, "( name ) that belongs to ( reviewer ) and ( title ) that belongs to ( movie )": {"{COLUMN0}": "name", "{COLUMN1}": "title", "{TABLE0}": "reviewer", "{TABLE1}": "movie"}, "( name ) , ( time ) , ( service ) that belongs to ( train )": {"{COLUMN0}": "name", "{COLUMN1}": "time", "{COLUMN2}": "service", "{TABLE0}": "train"}, "( name ) , ( location ) , ( number of platforms ) that belongs to ( station )": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "number_of_platforms", "{TABLE0}": "station"}, "( name of staff ) , ( theme of enzyme ) that belongs to ( ( journal committee ) , and ( ( editor ) satisfied that ( ( editor id of addresses ) equal to ( editor id of staff ) ) ) , and ( ( journal ) satisfied that ( ( journal id of addresses ) equal to ( journal id of enzyme ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "theme", "{COLUMN2}": "editor_id", "{COLUMN3}": "journal_id", "{TABLE0}": "journal committee", "{TABLE1}": "editor", "{TABLE2}": "journal"}, "( first name of addresses ) , ( last name of addresses ) , ( employee id of addresses ) , ( country name of trip ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) , and ( ( locations ) satisfied that ( ( location id of staff ) equal to ( location id of enzyme ) ) ) , and ( ( countries ) satisfied that ( ( country id of enzyme ) equal to ( country id of trip ) ) ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "employee_id", "{COLUMN3}": "country_name", "{COLUMN4}": "department_id", "{COLUMN5}": "location_id", "{COLUMN6}": "country_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{TABLE2}": "locations", "{TABLE3}": "countries"}, "( team of addresses ) , ( location of staff ) that belongs to ( ( player ) , and ( ( school ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) )": {"{COLUMN0}": "team", "{COLUMN1}": "location", "{COLUMN2}": "player", "{COLUMN3}": "school", "{COLUMN4}": "school_id"}, "( country of staff ) , ( year of addresses ) that belongs to ( ( film market estimation ) , and ( ( market ) satisfied that ( ( market id of addresses ) equal to ( market id of staff ) ) ) )": {"{COLUMN0}": "country", "{COLUMN1}": "year", "{COLUMN2}": "market_id", "{TABLE0}": "film market estimation", "{TABLE1}": "market"}, "( department name of addresses ) , ( city of staff ) , ( state province of staff ) that belongs to ( ( departments ) , and ( ( locations ) satisfied that ( ( location id of staff ) equal to ( location id of addresses ) ) ) )": {"{COLUMN0}": "department_name", "{COLUMN1}": "city", "{COLUMN2}": "state_province", "{COLUMN3}": "location_id", "{TABLE0}": "departments", "{TABLE1}": "locations"}, "( shop name of enzyme ) , ( carrier of staff ) that belongs to ( ( stock ) , and ( ( device ) satisfied that ( ( device id of addresses ) equal to ( device id of staff ) ) ) , and ( ( shop ) satisfied that ( ( shop id of addresses ) equal to ( shop id of enzyme ) ) ) )": {"{COLUMN0}": "shop_name", "{COLUMN1}": "carrier", "{COLUMN2}": "device", "{COLUMN3}": "device_id", "{COLUMN4}": "shop_id", "{TABLE0}": "stock", "{TABLE1}": "shop"}, "( statement id of addresses ) , ( statement details of staff ) , ( account details of addresses ) that belongs to ( ( accounts ) , and ( ( statements ) satisfied that ( ( statement id of addresses ) equal to ( statement id of staff ) ) ) )": {"{COLUMN0}": "statement_id", "{COLUMN1}": "statement_details", "{COLUMN2}": "account_details", "{TABLE0}": "accounts", "{TABLE1}": "statements"}, "( name of addresses ) , ( height of staff ) that belongs to ( ( climber ) , and ( ( mountain ) satisfied that ( ( mountain id of addresses ) equal to ( mountain id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{COLUMN2}": "mountain_id", "{TABLE0}": "climber", "{TABLE1}": "mountain"}, "( document type name of addresses ) , ( document type description of addresses ) , ( document date of staff ) that belongs to ( ( ref document types ) , and ( ( documents ) satisfied that ( ( document type code of addresses ) equal to ( document type code of staff ) ) ) )": {"{COLUMN0}": "document_type_name", "{COLUMN1}": "document_type_description", "{COLUMN2}": "document_date", "{COLUMN3}": "document_type_code", "{TABLE0}": "reference document types", "{TABLE1}": "documents"}, "( location of addresses ) , ( nickname of staff ) that belongs to ( ( school ) , and ( ( school details ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) )": {"{COLUMN0}": "location", "{COLUMN1}": "nickname", "{COLUMN2}": "school", "{COLUMN3}": "school_id", "{TABLE0}": "school details"}, "( name ) , ( score ) that belongs to ( wine )": {"{COLUMN0}": "name", "{COLUMN1}": "score", "{TABLE0}": "wine"}, "( company ) , ( investor ) that belongs to ( entrepreneur )": {"{COLUMN0}": "company", "{COLUMN1}": "investor", "{TABLE0}": "entrepreneur"}, "( budget type code of staff ) , ( budget type description of staff ) , ( document id of addresses ) that belongs to ( ( documents with expenses ) , and ( ( ref budget codes ) satisfied that ( ( budget type code of addresses ) equal to ( budget type code of staff ) ) ) )": {"{COLUMN0}": "budget_type_code", "{COLUMN1}": "budget_type_description", "{COLUMN2}": "document_id", "{TABLE0}": "documents with expenses", "{TABLE1}": "reference budget codes"}, "( stu fname of addresses ) , ( stu lname of addresses ) , ( crs description of trip ) that belongs to ( ( student ) , and ( ( enroll ) satisfied that ( ( stu num of addresses ) equal to ( stu num of staff ) ) ) , and ( ( class ) satisfied that ( ( class code of staff ) equal to ( class code of enzyme ) ) ) , and ( ( course ) satisfied that ( ( crs code of enzyme ) equal to ( crs code of trip ) ) ) )": {"{COLUMN0}": "stu_fname", "{COLUMN1}": "stu_lname", "{COLUMN2}": "crs_description", "{COLUMN3}": "stu_num", "{COLUMN4}": "class_code", "{COLUMN5}": "crs_code", "{TABLE0}": "student", "{TABLE1}": "enroll", "{TABLE2}": "class", "{TABLE3}": "course"}, "( distinct ( major of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( treasurer vote of staff ) ) ) )": {"{COLUMN0}": "major", "{COLUMN1}": "stuid", "{COLUMN2}": "treasurer_vote", "{TABLE0}": "student", "{TABLE1}": "voting record"}, "( name ) , ( location ) that belongs to ( enzyme )": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{TABLE0}": "enzyme"}, "( character ) , ( duration ) that belongs to ( actor )": {"{COLUMN0}": "character", "{COLUMN1}": "duration", "{TABLE0}": "actor"}, "( distinct ( classroom ) ) , ( grade ) that belongs to ( list )": {"{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list"}, "( title ) , ( issues ) that belongs to ( book )": {"{COLUMN0}": "title", "{COLUMN1}": "issues", "{TABLE0}": "book"}, "( grape ) , ( appelation ) that belongs to ( wine )": {"{COLUMN0}": "grape", "{COLUMN1}": "appelation", "{TABLE0}": "wine"}, "( name ) , ( country ) that belongs to ( member )": {"{COLUMN0}": "name", "{COLUMN1}": "country", "{TABLE0}": "member"}, "( date moved in of staff ) , ( customer id of addresses ) , ( customer details of addresses ) that belongs to ( ( customers ) , and ( ( customer events ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) )": {"{COLUMN0}": "date_moved_in", "{COLUMN1}": "customer_id", "{COLUMN2}": "customer_details", "{TABLE0}": "customers", "{TABLE1}": "customer events"}, "( name ) , ( price ) that belongs to ( products )": {"{COLUMN0}": "name", "{COLUMN1}": "price", "{TABLE0}": "products"}, "( name ) , ( location ) that belongs to ( track )": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{TABLE0}": "track"}, "( name ) that belongs to ( ( appointment ) , and ( ( patient ) satisfied that ( ( patient of addresses ) equal to ( ssn of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "appointment", "{COLUMN2}": "patient", "{COLUMN3}": "ssn"}, "( name ) , ( open date ) , ( organized by ) that belongs to ( church )": {"{COLUMN0}": "name", "{COLUMN1}": "open_date", "{COLUMN2}": "organized_by", "{TABLE0}": "church"}, "( employee id ) that belongs to ( employees ), and except that ( ( destroyed by employee id ) that belongs to ( documents to be destroyed ))": {"{COLUMN0}": "employee_id", "{COLUMN1}": "destroyed_by_employee_id", "{TABLE0}": "employees", "{TABLE1}": "documents to be destroyed"}, "( distinct ( bname of addresses ) ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) )": {"{COLUMN0}": "bname", "{COLUMN1}": "branch_id", "{TABLE0}": "bank", "{TABLE1}": "loan"}, "( order date ) that belongs to ( bookings )": {"{COLUMN0}": "order_date", "{TABLE0}": "bookings"}, "( the minimum of ( rank ) ) that belongs to ( review )": {"{COLUMN0}": "rank", "{TABLE0}": "review", "{AGG0}": "min"}, "( name ) , ( other details ) that belongs to ( staff )": {"{COLUMN0}": "name", "{COLUMN1}": "other_details", "{TABLE0}": "staff"}, "( the maximum of ( milliseconds ) ) , ( the minimum of ( milliseconds ) ) that belongs to ( track )": {"{COLUMN0}": "milliseconds", "{TABLE0}": "track", "{AGG0}": "max", "{AGG1}": "min"}, "( royal family details of addresses ) , ( how to get there of staff ) that belongs to ( ( royal family ) , and ( ( tourist attractions ) satisfied that ( ( royal family id of addresses ) equal to ( tourist attraction id of staff ) ) ) )": {"{COLUMN0}": "royal_family_details", "{COLUMN1}": "how_to_get_there", "{COLUMN2}": "royal_family_id", "{COLUMN3}": "tourist_attraction_id", "{TABLE0}": "royal family", "{TABLE1}": "tourist attractions"}, "( distinct ( main industry ) ) that belongs to ( company )": {"{COLUMN0}": "main_industry", "{COLUMN1}": "company"}, "( distinct ( location ) ) that belongs to ( track )": {"{COLUMN0}": "location", "{TABLE0}": "track"}, "( the average of ( hs ) ) , ( the maximum of ( hs ) ) , ( the minimum of ( hs ) ) that belongs to ( player )": {"{COLUMN0}": "hs", "{TABLE0}": "player", "{AGG0}": "avg", "{AGG1}": "max", "{AGG2}": "min"}, "( name of staff ) that belongs to ( ( assignedto ) , and ( ( scientists ) satisfied that ( ( scientist of addresses ) equal to ( ssn of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "scientist", "{COLUMN2}": "ssn", "{TABLE0}": "assigned to", "{TABLE1}": "scientists"}, "( the minimum of ( seating ) ) , ( the maximum of ( seating ) ) , ( the average of ( seating ) ) that belongs to ( track )": {"{COLUMN0}": "seating", "{TABLE0}": "track", "{AGG0}": "min", "{AGG1}": "max", "{AGG2}": "avg"}, "( the maximum of ( amount outstanding ) ) , ( the minimum of ( amount outstanding ) ) , ( the average of ( amount outstanding ) ) that belongs to ( customers )": {"{COLUMN0}": "amount_outstanding", "{TABLE0}": "customers", "{AGG0}": "max", "{AGG1}": "min", "{AGG2}": "avg"}, "( name of staff ) that belongs to ( ( entrepreneur ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "entrepreneur", "{TABLE1}": "people"}, "( the number of ( distinct ( location ) ) ) that belongs to ( perpetrator )": {"{COLUMN0}": "location", "{TABLE0}": "perpetrator", "{AGG0}": "count"}, "( the minimum of ( distance ) ) , ( the average of ( distance ) ) , ( the maximum of ( distance ) ) that belongs to ( aircraft )": {"{COLUMN0}": "distance", "{TABLE0}": "aircraft", "{AGG0}": "min", "{AGG1}": "avg", "{AGG2}": "max"}, "( the average of ( enrollment ) ) that belongs to ( school )": {"{COLUMN0}": "enrollment", "{COLUMN1}": "school", "{AGG0}": "avg"}, "( the number of ( distinct ( position ) ) ) that belongs to ( player )": {"{COLUMN0}": "position", "{TABLE0}": "player", "{AGG0}": "count"}, "( name ) that belongs to ( genre )": {"{COLUMN0}": "name", "{TABLE0}": "genre"}, "( asset id ) , ( asset details ) , ( asset make ) , ( asset model ) that belongs to ( assets )": {"{COLUMN0}": "asset_id", "{COLUMN1}": "asset_details", "{COLUMN2}": "asset_make", "{COLUMN3}": "asset_model", "{TABLE0}": "assets"}, "( the minimum of ( age ) ) , ( the average of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( student )": {"{COLUMN0}": "age", "{TABLE0}": "student", "{AGG0}": "min", "{AGG1}": "avg", "{AGG2}": "max"}, "( course id ) that belongs to ( course ), and except that ( ( course id ) that belongs to ( prereq ))": {"{COLUMN0}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite"}, "( calendar date ) , ( day number ) that belongs to ( ref calendar )": {"{COLUMN0}": "calendar_date", "{COLUMN1}": "day_number", "{TABLE0}": "reference calendar"}, "( the average of ( hours ) ) that belongs to ( projects )": {"{COLUMN0}": "hours", "{TABLE0}": "projects", "{AGG0}": "avg"}, "( facid ) that belongs to ( faculty ), and except that ( ( advisor ) that belongs to ( student ))": {"{COLUMN0}": "facid", "{COLUMN1}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student"}, "( eid ) that belongs to ( employee ), and except that ( ( eid ) that belongs to ( certificate ))": {"{COLUMN0}": "eid", "{TABLE0}": "employee", "{TABLE1}": "certificate"}, "( distinct ( theme ) ) that belongs to ( journal )": {"{COLUMN0}": "theme", "{TABLE0}": "journal"}, "( the average of ( price ) ) that belongs to ( products )": {"{COLUMN0}": "price", "{TABLE0}": "products", "{AGG0}": "avg"}, "( delegate of addresses ) , ( party of staff ) that belongs to ( ( election ) , and ( ( party ) satisfied that ( ( party of addresses ) equal to ( party id of staff ) ) ) )": {"{COLUMN0}": "delegate", "{COLUMN1}": "party", "{COLUMN2}": "party_id", "{TABLE0}": "election"}, "( distinct ( type ) ) that belongs to ( vocals )": {"{COLUMN0}": "type", "{TABLE0}": "vocals"}, "( the sum of ( share count ) ) that belongs to ( transactions )": {"{COLUMN0}": "share_count", "{TABLE0}": "transactions", "{AGG0}": "sum"}, "( white of addresses ) , ( crime rate of staff ) that belongs to ( ( city ) , and ( ( county public safety ) satisfied that ( ( county id of addresses ) equal to ( county id of staff ) ) ) )": {"{COLUMN0}": "white", "{COLUMN1}": "crime_rate", "{COLUMN2}": "county_id", "{TABLE0}": "city", "{TABLE1}": "county public safety"}, "( party theme ) , ( location ) that belongs to ( party )": {"{COLUMN0}": "party_theme", "{COLUMN1}": "location", "{TABLE0}": "party"}, "( personal name ) that belongs to ( students ), and except that ( ( personal name of addresses ) that belongs to ( ( students ) , and ( ( student course enrolment ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ))": {"{COLUMN0}": "personal_name", "{COLUMN1}": "student_id", "{TABLE0}": "students", "{TABLE1}": "student course enrolment"}, "( distinct ( venue ) ) that belongs to ( debate )": {"{COLUMN0}": "venue", "{TABLE0}": "debate"}, "( the maximum of ( omim ) ) that belongs to ( enzyme )": {"{COLUMN0}": "omim", "{TABLE0}": "enzyme", "{AGG0}": "max"}, "( player name of enzyme ) , ( coach name of staff ) that belongs to ( ( player coach ) , and ( ( coach ) satisfied that ( ( coach id of addresses ) equal to ( coach id of staff ) ) ) , and ( ( player ) satisfied that ( ( player id of addresses ) equal to ( player id of enzyme ) ) ) )": {"{COLUMN0}": "player_name", "{COLUMN1}": "coach_name", "{COLUMN2}": "coach_id", "{COLUMN3}": "player_id", "{TABLE0}": "player coach", "{TABLE1}": "coach", "{TABLE2}": "player"}, "( the maximum of ( transit passengers ) ) , ( the minimum of ( transit passengers ) ) that belongs to ( airport )": {"{COLUMN0}": "transit_passengers", "{TABLE0}": "airport", "{AGG0}": "max", "{AGG1}": "min"}, "( fault short name of addresses ) , ( skill description of enzyme ) that belongs to ( ( part faults ) , and ( ( skills required to fix ) satisfied that ( ( part fault id of addresses ) equal to ( part fault id of staff ) ) ) , and ( ( skills ) satisfied that ( ( skill id of staff ) equal to ( skill id of enzyme ) ) ) )": {"{COLUMN0}": "fault_short_name", "{COLUMN1}": "skill_description", "{COLUMN2}": "part_fault_id", "{COLUMN3}": "skill_id", "{TABLE0}": "part faults", "{TABLE1}": "skills required to fix", "{TABLE2}": "skills"}, "( premises type of staff ) , ( address type code of addresses ) that belongs to ( ( customer addresses ) , and ( ( premises ) satisfied that ( ( premise id of addresses ) equal to ( premise id of staff ) ) ) )": {"{COLUMN0}": "premises_type", "{COLUMN1}": "address_type_code", "{COLUMN2}": "premise_id", "{TABLE0}": "customer addresses", "{TABLE1}": "premises"}, "( distinct ( location ) ) that belongs to ( cinema )": {"{COLUMN0}": "location", "{TABLE0}": "cinema"}, "( distinct ( fname of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( class senator vote of staff ) ) ) )": {"{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "class_senator_vote", "{TABLE0}": "student", "{TABLE1}": "voting record"}, "( name of addresses ) , ( name of staff ) that belongs to ( ( city ) , and ( ( county public safety ) satisfied that ( ( county id of addresses ) equal to ( county id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "county_id", "{TABLE0}": "city", "{TABLE1}": "county public safety"}, "( distinct ( building ) ) that belongs to ( faculty )": {"{COLUMN0}": "building", "{TABLE0}": "faculty"}, "( name ) , ( distance ) that belongs to ( aircraft )": {"{COLUMN0}": "name", "{COLUMN1}": "distance", "{TABLE0}": "aircraft"}, "( title ) , ( directed by ) that belongs to ( film )": {"{COLUMN0}": "title", "{COLUMN1}": "directed_by", "{TABLE0}": "film"}, "( the sum of ( amount ) ) that belongs to ( payment )": {"{COLUMN0}": "amount", "{TABLE0}": "payment", "{AGG0}": "sum"}, "( customer details ) that belongs to ( customers ), and except that ( ( customer details of member of club ) that belongs to ( ( policies ) , and ( ( customers ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ))": {"{COLUMN0}": "customer_details", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "policies"}, "( distinct ( type ) ) that belongs to ( institution )": {"{COLUMN0}": "type", "{COLUMN1}": "institution"}, "( the number of ( distinct ( services ) ) ) that belongs to ( station )": {"{COLUMN0}": "services", "{TABLE0}": "station", "{AGG0}": "count"}, "( the average of ( age ) ) that belongs to ( artist )": {"{COLUMN0}": "age", "{COLUMN1}": "artist", "{AGG0}": "avg"}, "( distinct ( district ) ) that belongs to ( election )": {"{COLUMN0}": "district", "{TABLE0}": "election"}, "( planned delivery date ) , ( actual delivery date ) that belongs to ( bookings )": {"{COLUMN0}": "planned_delivery_date", "{COLUMN1}": "actual_delivery_date", "{TABLE0}": "bookings"}, "( phone ) that belongs to ( employee )": {"{COLUMN0}": "phone", "{TABLE0}": "employee"}, "( length ) , ( height ) that belongs to ( roller coaster )": {"{COLUMN0}": "length", "{COLUMN1}": "height", "{TABLE0}": "roller coaster"}, "( distinct ( registration date ) ) , ( election cycle ) that belongs to ( voting record )": {"{COLUMN0}": "registration_date", "{COLUMN1}": "election_cycle", "{TABLE0}": "voting record"}, "( the number of ( all items ) ) , ( account id ) that belongs to ( financial transactions )": {"{COLUMN0}": "account_id", "{TABLE0}": "financial transactions", "{AGG0}": "count"}, "( distinct ( class ) ) that belongs to ( race )": {"{COLUMN0}": "class", "{TABLE0}": "race"}, "( name of staff ) that belongs to ( ( gymnast ) , and ( ( people ) satisfied that ( ( gymnast id of addresses ) equal to ( people id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "gymnast_id", "{COLUMN2}": "people_id", "{TABLE0}": "gymnast", "{TABLE1}": "people"}, "( the average of ( profits billion ) ) that belongs to ( companies )": {"{COLUMN0}": "profits_billion", "{TABLE0}": "companies", "{AGG0}": "avg"}, "( the maximum of ( number cities ) ) , ( the minimum of ( number cities ) ) that belongs to ( market )": {"{COLUMN0}": "number_cities", "{TABLE0}": "market", "{AGG0}": "max", "{AGG1}": "min"}, "all items that belongs to ( ( products ) , and ( ( manufacturers ) satisfied that ( ( manufacturer of addresses ) equal to ( code of staff ) ) ) )": {"{COLUMN0}": "manufacturer", "{COLUMN1}": "code", "{TABLE0}": "products", "{TABLE1}": "manufacturers"}, "( store name ) that belongs to ( drama workshop groups )": {"{COLUMN0}": "store_name", "{TABLE0}": "drama workshop groups"}, "( the number of ( distinct ( advisor ) ) ) that belongs to ( student )": {"{COLUMN0}": "advisor", "{TABLE0}": "student", "{AGG0}": "count"}, "( distinct ( product details ) ) that belongs to ( products )": {"{COLUMN0}": "product_details", "{TABLE0}": "products"}, "( the average of ( event attendance ) ) , ( the maximum of ( event attendance ) ) that belongs to ( event )": {"{COLUMN0}": "event_attendance", "{TABLE0}": "event", "{AGG0}": "avg", "{AGG1}": "max"}, "( the minimum of ( crime rate ) ) , ( the maximum of ( crime rate ) ) that belongs to ( county public safety )": {"{COLUMN0}": "crime_rate", "{TABLE0}": "county public safety", "{AGG0}": "min", "{AGG1}": "max"}, "( the number of ( all items ) ) that belongs to ( projects )": {"{TABLE0}": "projects", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( club )": {"{TABLE0}": "club", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( device )": {"{COLUMN0}": "device", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( train )": {"{TABLE0}": "train", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( actor )": {"{TABLE0}": "actor", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( documents )": {"{TABLE0}": "documents", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( reviewer )": {"{TABLE0}": "reviewer", "{AGG0}": "count"}, "( customer name ) that belongs to ( clients ), and except that ( ( customer name of staff ) that belongs to ( ( bookings ) , and ( ( clients ) satisfied that ( ( customer id of addresses ) equal to ( client id of staff ) ) ) ))": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "client_id", "{TABLE0}": "clients", "{TABLE1}": "bookings"}, "( the number of ( all items ) ) that belongs to ( aircraft )": {"{COLUMN0}": "aircraft", "{AGG0}": "count"}, "( name of staff ) that belongs to ( ( body builder ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "body builder", "{TABLE1}": "people"}, "( the number of ( distinct ( currency code ) ) ) that belongs to ( drama workshop groups )": {"{COLUMN0}": "currency_code", "{TABLE0}": "drama workshop groups", "{AGG0}": "count"}, "( the number of ( distinct ( card type code ) ) ) that belongs to ( customers cards )": {"{COLUMN0}": "card_type_code", "{TABLE0}": "customers cards", "{AGG0}": "count"}, "( distinct ( payment method ) ) that belongs to ( customers )": {"{COLUMN0}": "payment_method", "{TABLE0}": "customers"}, "( project id ) , ( project details ) that belongs to ( projects )": {"{COLUMN0}": "project_id", "{COLUMN1}": "project_details", "{TABLE0}": "projects"}, "( the number of ( all items ) ) that belongs to ( student )": {"{TABLE0}": "student", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( statements )": {"{TABLE0}": "statements", "{AGG0}": "count"}, "( the maximum of ( group equity shareholding ) ) that belongs to ( operate company )": {"{COLUMN0}": "group_equity_shareholding", "{TABLE0}": "operate company", "{AGG0}": "max"}, "( the number of ( all items ) ) that belongs to ( region )": {"{TABLE0}": "region", "{AGG0}": "count"}, "( the average of ( attendance ) ) that belongs to ( performance )": {"{COLUMN0}": "attendance", "{TABLE0}": "performance", "{AGG0}": "avg"}, "( the number of ( all items ) ) that belongs to ( phone )": {"{TABLE0}": "phone", "{AGG0}": "count"}, "( shipping agent name ) that belongs to ( ref shipping agents )": {"{COLUMN0}": "shipping_agent_name", "{TABLE0}": "reference shipping agents"}, "( distinct ( unitprice ) ) that belongs to ( track )": {"{COLUMN0}": "unitprice", "{TABLE0}": "track"}, "( the number of ( all items ) ) that belongs to ( employee )": {"{TABLE0}": "employee", "{AGG0}": "count"}, "( the average of ( transaction amount ) ) , ( the sum of ( transaction amount ) ) that belongs to ( financial transactions )": {"{COLUMN0}": "transaction_amount", "{TABLE0}": "financial transactions", "{AGG0}": "avg", "{AGG1}": "sum"}, "( the number of ( distinct ( ppos ) ) ) that belongs to ( tryout )": {"{COLUMN0}": "ppos", "{TABLE0}": "tryout", "{AGG0}": "count"}, "( the maximum of ( silver ) ) , ( the minimum of ( silver ) ) that belongs to ( club rank )": {"{COLUMN0}": "silver", "{TABLE0}": "club rank", "{AGG0}": "max", "{AGG1}": "min"}, "( distinct ( major ) ) that belongs to ( student )": {"{COLUMN0}": "major", "{TABLE0}": "student"}, "( the number of ( all items ) ) that belongs to ( authors )": {"{TABLE0}": "authors", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( staff )": {"{TABLE0}": "staff", "{AGG0}": "count"}, "( subject name ) that belongs to ( subjects )": {"{COLUMN0}": "subject_name", "{TABLE0}": "subjects"}, "( the number of ( all items ) ) that belongs to ( race )": {"{TABLE0}": "race", "{AGG0}": "count"}, "( fname ) , ( lname ) that belongs to ( student )": {"{COLUMN0}": "fname", "{COLUMN1}": "lname", "{TABLE0}": "student"}, "( the number of ( distinct ( participant id ) ) ) that belongs to ( participants in events )": {"{COLUMN0}": "participant_id", "{TABLE0}": "participants in events", "{AGG0}": "count"}, "( role code ) that belongs to ( roles )": {"{COLUMN0}": "role_code", "{TABLE0}": "roles"}, "( distinct ( location name ) ) that belongs to ( locations )": {"{COLUMN0}": "location_name", "{TABLE0}": "locations"}, "( the number of ( all items ) ) that belongs to ( school )": {"{COLUMN0}": "school", "{AGG0}": "count"}, "( the number of ( distinct ( language id ) ) ) that belongs to ( film )": {"{COLUMN0}": "language_id", "{TABLE0}": "film", "{AGG0}": "count"}, "( the number of ( distinct ( governor ) ) ) that belongs to ( party )": {"{COLUMN0}": "governor", "{COLUMN1}": "party", "{AGG0}": "count"}, "( the maximum of ( monthly rental ) ) , ( the minimum of ( monthly rental ) ) that belongs to ( student addresses )": {"{COLUMN0}": "monthly_rental", "{TABLE0}": "student addresses", "{AGG0}": "max", "{AGG1}": "min"}, "( the average of ( pages per minute color ) ) that belongs to ( product )": {"{COLUMN0}": "pages_per_minute_color", "{COLUMN1}": "product", "{AGG0}": "avg"}, "( distinct ( characteristic name ) ) that belongs to ( characteristics )": {"{COLUMN0}": "characteristic_name", "{TABLE0}": "characteristics"}, "( distinct ( payment method code ) ) that belongs to ( invoices )": {"{COLUMN0}": "payment_method_code", "{TABLE0}": "invoices"}, "( the minimum of ( product price ) ) , ( the maximum of ( product price ) ) , ( the average of ( product price ) ) that belongs to ( products )": {"{COLUMN0}": "product_price", "{TABLE0}": "products", "{AGG0}": "min", "{AGG1}": "max", "{AGG2}": "avg"}, "( the number of ( distinct ( software platform ) ) ) that belongs to ( device )": {"{COLUMN0}": "software_platform", "{COLUMN1}": "device", "{AGG0}": "count"}, "( distinct ( form type code ) ) that belongs to ( forms )": {"{COLUMN0}": "form_type_code", "{TABLE0}": "forms"}, "( distinct ( city code ) ) that belongs to ( student )": {"{COLUMN0}": "city_code", "{TABLE0}": "student"}, "( product name ) that belongs to ( products ), and except that ( ( product name of addresses ) that belongs to ( ( products ) , and ( ( order items ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ))": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "order items"}, "( resname ) that belongs to ( restaurant )": {"{COLUMN0}": "resname", "{TABLE0}": "restaurant"}, "( the number of ( all items ) ) that belongs to ( bank )": {"{TABLE0}": "bank", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( farm )": {"{TABLE0}": "farm", "{AGG0}": "count"}, "( detention summary ) that belongs to ( detention )": {"{COLUMN0}": "detention_summary", "{TABLE0}": "detention"}, "( the average of ( speed ) ) that belongs to ( roller coaster )": {"{COLUMN0}": "speed", "{TABLE0}": "roller coaster", "{AGG0}": "avg"}, "( the minimum of ( bathroom count ) ) , ( the maximum of ( bathroom count ) ) that belongs to ( apartments )": {"{COLUMN0}": "bathroom_count", "{TABLE0}": "apartments", "{AGG0}": "min", "{AGG1}": "max"}, "( name ) that belongs to ( person ), and except that ( ( name ) that belongs to ( personfriend ))": {"{COLUMN0}": "name", "{TABLE0}": "person", "{TABLE1}": "person friend"}, "( the maximum of ( enrollment ) ) that belongs to ( university )": {"{COLUMN0}": "enrollment", "{TABLE0}": "university", "{AGG0}": "max"}, "( the average of ( snatch ) ) that belongs to ( body builder )": {"{COLUMN0}": "snatch", "{TABLE0}": "body builder", "{AGG0}": "avg"}, "( the number of ( distinct ( publication date ) ) ) that belongs to ( publication )": {"{COLUMN0}": "publication_date", "{TABLE0}": "publication", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( services )": {"{TABLE0}": "services", "{AGG0}": "count"}, "( distinct ( state ) ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) )": {"{COLUMN0}": "state", "{COLUMN1}": "cname", "{TABLE0}": "college", "{TABLE1}": "tryout"}, "( the number of ( distinct ( status of thing code ) ) ) that belongs to ( timed status of things )": {"{COLUMN0}": "status_of_thing_code", "{TABLE0}": "timed status of things", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( artist )": {"{COLUMN0}": "artist", "{AGG0}": "count"}, "( distinct ( transaction type ) ) that belongs to ( financial transactions )": {"{COLUMN0}": "transaction_type", "{TABLE0}": "financial transactions"}, "( the number of ( all items ) ) that belongs to ( company )": {"{COLUMN0}": "company", "{AGG0}": "count"}, "( distinct ( destruction authorised by employee id ) ) that belongs to ( documents to be destroyed )": {"{COLUMN0}": "destruction_authorised_by_employee_id", "{TABLE0}": "documents to be destroyed"}, "( name of enzyme ) , ( name of staff ) that belongs to ( ( employment ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) , and ( ( company ) satisfied that ( ( company id of addresses ) equal to ( company id of enzyme ) ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "company_id", "{TABLE0}": "employment", "{TABLE1}": "people", "{TABLE2}": "company"}, "( the average of ( price in euros ) ) , ( the minimum of ( price in euros ) ) that belongs to ( catalog contents )": {"{COLUMN0}": "price_in_euros", "{TABLE0}": "catalog contents", "{AGG0}": "avg", "{AGG1}": "min"}, "( distinct ( product size ) ) that belongs to ( products )": {"{COLUMN0}": "product_size", "{TABLE0}": "products"}, "( the number of ( all items ) ) that belongs to ( cinema )": {"{TABLE0}": "cinema", "{AGG0}": "count"}, "( the number of ( distinct ( name ) ) ) that belongs to ( projects )": {"{COLUMN0}": "name", "{TABLE0}": "projects", "{AGG0}": "count"}, "( the number of ( distinct ( status ) ) ) that belongs to ( city )": {"{COLUMN0}": "status", "{TABLE0}": "city", "{AGG0}": "count"}, "( the maximum of ( weight ) ) , ( the minimum of ( weight ) ) that belongs to ( player )": {"{COLUMN0}": "weight", "{TABLE0}": "player", "{AGG0}": "max", "{AGG1}": "min"}, "( the number of ( all items ) ) that belongs to ( album )": {"{TABLE0}": "album", "{AGG0}": "count"}, "( the number of ( distinct ( claim outcome code ) ) ) that belongs to ( claims processing )": {"{COLUMN0}": "claim_outcome_code", "{TABLE0}": "claims processing", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ship )": {"{TABLE0}": "ship", "{AGG0}": "count"}, "( fname of enzyme ) , ( lname of enzyme ) , ( gradepoint of staff ) that belongs to ( ( enrolled in ) join ( ( gradeconversion ) ) , and ( ( student ) satisfied that ( ( ( grade of addresses ) equal to ( lettergrade of staff ) ) and ( ( stuid of addresses ) equal to ( stuid of enzyme ) ) ) ) )": {"{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "gradepoint", "{COLUMN3}": "grade", "{COLUMN4}": "lettergrade", "{COLUMN5}": "stuid", "{TABLE0}": "enrolled in", "{TABLE1}": "grade conversion", "{TABLE2}": "student"}, "( apt number of staff ) , ( booking start date of addresses ) , ( booking start date of addresses ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) )": {"{COLUMN0}": "apt_number", "{COLUMN1}": "booking_start_date", "{COLUMN2}": "apt_id", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments"}, "( the number of ( all items ) ) that belongs to ( courses )": {"{TABLE0}": "courses", "{AGG0}": "count"}, "( the number of ( distinct ( team ) ) ) that belongs to ( match season )": {"{COLUMN0}": "team", "{TABLE0}": "match season", "{AGG0}": "count"}, "( the maximum of ( population ) ) , ( the minimum of ( population ) ) that belongs to ( county )": {"{COLUMN0}": "population", "{TABLE0}": "county", "{AGG0}": "max", "{AGG1}": "min"}, "( the number of ( all items ) ) that belongs to ( player )": {"{TABLE0}": "player", "{AGG0}": "count"}, "( distinct ( card type code ) ) that belongs to ( customers cards )": {"{COLUMN0}": "card_type_code", "{TABLE0}": "customers cards"}, "( distinct ( visit date ) ) that belongs to ( visits )": {"{COLUMN0}": "visit_date", "{TABLE0}": "visits"}, "( the number of ( all items ) ) that belongs to ( roles )": {"{TABLE0}": "roles", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( customers )": {"{TABLE0}": "customers", "{AGG0}": "count"}, "( distinct ( firstname ) ) , ( lastname ) that belongs to ( teachers )": {"{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{TABLE0}": "teachers"}, "( the number of ( distinct ( s id ) ) ) that belongs to ( advisor )": {"{COLUMN0}": "s_id", "{TABLE0}": "advisor", "{AGG0}": "count"}, "( the number of ( distinct ( brand ) ) ) that belongs to ( camera lens )": {"{COLUMN0}": "brand", "{TABLE0}": "camera lens", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( scientists )": {"{TABLE0}": "scientists", "{AGG0}": "count"}, "( the sum of ( settlement amount ) ) , ( the average of ( settlement amount ) ) that belongs to ( settlements )": {"{COLUMN0}": "settlement_amount", "{TABLE0}": "settlements", "{AGG0}": "sum", "{AGG1}": "avg"}, "( the number of ( all items ) ) that belongs to ( technician )": {"{TABLE0}": "technician", "{AGG0}": "count"}, "( distinct ( city ) ) that belongs to ( addresses )": {"{COLUMN0}": "city", "{TABLE0}": "addresses"}, "( distinct ( destroyed by employee id ) ) that belongs to ( documents to be destroyed )": {"{COLUMN0}": "destroyed_by_employee_id", "{TABLE0}": "documents to be destroyed"}, "( the sum of ( num of component ) ) that belongs to ( furniture )": {"{COLUMN0}": "num_of_component", "{TABLE0}": "furniture", "{AGG0}": "sum"}, "( the number of ( all items ) ) that belongs to ( building )": {"{TABLE0}": "building", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ref calendar )": {"{TABLE0}": "reference calendar", "{AGG0}": "count"}, "( name ) that belongs to ( media types )": {"{COLUMN0}": "name", "{TABLE0}": "media types"}, "( distinct ( allergytype ) ) that belongs to ( allergy type )": {"{COLUMN0}": "allergytype", "{TABLE0}": "allergy type"}, "( distinct ( donator name ) ) that belongs to ( endowment )": {"{COLUMN0}": "donator_name", "{TABLE0}": "endowment"}, "( the number of ( all items ) ) that belongs to ( apartment bookings )": {"{TABLE0}": "apartment bookings", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( useracct )": {"{TABLE0}": "useracct", "{AGG0}": "count"}, "( outcome description of addresses ) that belongs to ( ( research outcomes ) , and ( ( project outcomes ) satisfied that ( ( outcome code of addresses ) equal to ( outcome code of staff ) ) ) )": {"{COLUMN0}": "outcome_description", "{COLUMN1}": "outcome_code", "{TABLE0}": "research outcomes", "{TABLE1}": "project outcomes"}, "all items that belongs to ( basketball match )": {"{TABLE0}": "basketball match"}, "( student id ) that belongs to ( student course registrations ) and ( student id ) that belongs to ( student course attendance )": {"{COLUMN0}": "student_id", "{TABLE0}": "student course registrations", "{TABLE1}": "student course attendance"}, "( the number of ( distinct ( acc type ) ) ) that belongs to ( customer )": {"{COLUMN0}": "acc_type", "{TABLE0}": "customer", "{AGG0}": "count"}, "( the number of ( distinct ( school id ) ) ) that belongs to ( basketball match )": {"{COLUMN0}": "school_id", "{TABLE0}": "basketball match", "{AGG0}": "count"}, "( the number of ( distinct ( rating ) ) ) that belongs to ( film )": {"{COLUMN0}": "rating", "{TABLE0}": "film", "{AGG0}": "count"}, "( the number of ( distinct ( dormid ) ) ) that belongs to ( has amenity )": {"{COLUMN0}": "dormid", "{TABLE0}": "has amenity", "{AGG0}": "count"}, "( stuid ) that belongs to ( sportsinfo ), and intersect with ( ( stuid ) that belongs to ( plays games ))": {"{COLUMN0}": "stuid", "{TABLE0}": "sports info", "{TABLE1}": "plays games"}, "( the number of ( all items ) ) that belongs to ( ref locations )": {"{TABLE0}": "reference locations", "{AGG0}": "count"}, "( the number of ( distinct ( sportname ) ) ) that belongs to ( sportsinfo )": {"{COLUMN0}": "sportname", "{TABLE0}": "sports info", "{AGG0}": "count"}, "( the number of ( distinct ( student id ) ) ) that belongs to ( students in detention )": {"{COLUMN0}": "student_id", "{TABLE0}": "students in detention", "{AGG0}": "count"}, "( customer name ) that belongs to ( customers ), and except that ( ( customer name of club ) that belongs to ( ( customers ) , and ( ( first notification of loss ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ))": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "first notification of loss"}, "( the maximum of ( date moved in ) ) that belongs to ( residents )": {"{COLUMN0}": "date_moved_in", "{TABLE0}": "residents", "{AGG0}": "max"}, "( the number of ( distinct ( id ) ) ) that belongs to ( teaches )": {"{COLUMN0}": "id", "{TABLE0}": "teaches", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( voting record )": {"{TABLE0}": "voting record", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( book club )": {"{TABLE0}": "book club", "{AGG0}": "count"}, "( the number of ( distinct ( school code ) ) ) that belongs to ( department )": {"{COLUMN0}": "school_code", "{TABLE0}": "department", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( party events )": {"{TABLE0}": "party events", "{AGG0}": "count"}, "( distinct ( gtype ) ) that belongs to ( video games )": {"{COLUMN0}": "gtype", "{TABLE0}": "video games"}, "( the number of ( distinct ( crs code ) ) ) that belongs to ( class )": {"{COLUMN0}": "crs_code", "{TABLE0}": "class", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( county public safety )": {"{TABLE0}": "county public safety", "{AGG0}": "count"}, "( rank of addresses ) , ( the number of ( all items ) ) that belongs to ( ( faculty ) , and ( ( student ) satisfied that ( ( facid of addresses ) equal to ( advisor of staff ) ) ) ) , grouped by ( rank of addresses )": {"{COLUMN0}": "rank", "{COLUMN1}": "facid", "{COLUMN2}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student", "{AGG0}": "count"}, "( position ) , ( the average of ( points ) ) that belongs to ( player ) , grouped by ( position )": {"{COLUMN0}": "position", "{COLUMN1}": "points", "{TABLE0}": "player", "{AGG0}": "avg"}, "( nationality ) , ( the number of ( all items ) ) that belongs to ( pilot ) , grouped by ( nationality )": {"{COLUMN0}": "nationality", "{TABLE0}": "pilot", "{AGG0}": "count"}, "( grade ) , ( the number of ( distinct ( classroom ) ) ) , ( the number of ( all items ) ) that belongs to ( list ) , grouped by ( grade )": {"{COLUMN0}": "grade", "{COLUMN1}": "classroom", "{TABLE0}": "list", "{AGG0}": "count", "{AGG1}": "count"}, "( title of staff ) , ( stars of addresses ) , ( director of staff ) , ( the minimum of ( stars of addresses ) ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( director of staff )": {"{COLUMN0}": "title", "{COLUMN1}": "stars", "{COLUMN2}": "director", "{COLUMN3}": "mid", "{TABLE0}": "rating", "{TABLE1}": "movie", "{AGG0}": "min"}, "( name of addresses ) , ( lat of addresses ) , ( the minimum of ( duration of staff ) ) that belongs to ( ( station ) , and ( ( trip ) satisfied that ( ( id of addresses ) equal to ( end station id of staff ) ) ) ) , grouped by ( end station id of staff )": {"{COLUMN0}": "name", "{COLUMN1}": "lat", "{COLUMN2}": "duration", "{COLUMN3}": "id", "{COLUMN4}": "end_station_id", "{TABLE0}": "station", "{TABLE1}": "trip", "{AGG0}": "min"}, "( name of addresses ) , ( long of addresses ) , ( the average of ( duration of staff ) ) that belongs to ( ( station ) , and ( ( trip ) satisfied that ( ( id of addresses ) equal to ( start station id of staff ) ) ) ) , grouped by ( start station id of staff )": {"{COLUMN0}": "name", "{COLUMN1}": "long", "{COLUMN2}": "duration", "{COLUMN3}": "id", "{COLUMN4}": "start_station_id", "{TABLE0}": "station", "{TABLE1}": "trip", "{AGG0}": "avg"}, "( the sum of ( amount ) ) , ( bname of addresses ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , grouped by ( bname of addresses )": {"{COLUMN0}": "amount", "{COLUMN1}": "bname", "{COLUMN2}": "branch_id", "{TABLE0}": "bank", "{TABLE1}": "loan", "{AGG0}": "sum"}, "( the number of ( all items ) ) , ( flag ) that belongs to ( ship ) , grouped by ( flag )": {"{COLUMN0}": "flag", "{TABLE0}": "ship", "{AGG0}": "count"}, "( role description of addresses ) , ( role code of staff ) , ( the number of ( all items ) ) that belongs to ( ( roles ) , and ( ( employees ) satisfied that ( ( role code of addresses ) equal to ( role code of staff ) ) ) ) , grouped by ( role code of staff )": {"{COLUMN0}": "role_description", "{COLUMN1}": "role_code", "{TABLE0}": "roles", "{TABLE1}": "employees", "{AGG0}": "count"}, "( the sum of ( balance of staff ) ) , ( name of addresses ) that belongs to ( ( accounts ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , grouped by ( name of addresses )": {"{COLUMN0}": "balance", "{COLUMN1}": "name", "{COLUMN2}": "custid", "{TABLE0}": "accounts", "{TABLE1}": "savings", "{AGG0}": "sum"}, "( the number of ( all items ) ) , ( product id of staff ) that belongs to ( ( problems ) , and ( ( product ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product id of staff )": {"{COLUMN0}": "product_id", "{TABLE0}": "problems", "{TABLE1}": "product", "{AGG0}": "count"}, "( carrier ) , ( the number of ( all items ) ) that belongs to ( phone ) , grouped by ( carrier )": {"{COLUMN0}": "carrier", "{TABLE0}": "phone", "{AGG0}": "count"}, "( the average of ( price ) ) , ( the average of ( score ) ) , ( appelation ) that belongs to ( wine ) , grouped by ( appelation )": {"{COLUMN0}": "price", "{COLUMN1}": "score", "{COLUMN2}": "appelation", "{TABLE0}": "wine", "{AGG0}": "avg", "{AGG1}": "avg"}, "( the average of ( price ) ) , ( manufacturer ) that belongs to ( products ) , grouped by ( manufacturer )": {"{COLUMN0}": "price", "{COLUMN1}": "manufacturer", "{TABLE0}": "products", "{AGG0}": "avg"}, "( department name ) , ( the number of ( all items ) ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , grouped by ( department name )": {"{COLUMN0}": "department_name", "{COLUMN1}": "department_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{AGG0}": "count"}, "( name of enzyme ) , ( the number of ( all items ) ) that belongs to ( ( news report ) , and ( ( event ) satisfied that ( ( event id of addresses ) equal to ( event id of staff ) ) ) , and ( ( journalist ) satisfied that ( ( journalist id of addresses ) equal to ( journalist id of enzyme ) ) ) ) , grouped by ( name of enzyme )": {"{COLUMN0}": "name", "{COLUMN1}": "event_id", "{COLUMN2}": "journalist_id", "{TABLE0}": "news report", "{TABLE1}": "event", "{TABLE2}": "journalist", "{AGG0}": "count"}, "( party of staff ) , ( the number of ( all items ) ) that belongs to ( ( election ) , and ( ( party ) satisfied that ( ( party of addresses ) equal to ( party id of staff ) ) ) ) , grouped by ( party of addresses )": {"{COLUMN0}": "party", "{COLUMN1}": "party_id", "{TABLE0}": "election", "{AGG0}": "count"}, "( status ) , ( the average of ( population ) ) that belongs to ( city ) , grouped by ( status )": {"{COLUMN0}": "status", "{COLUMN1}": "population", "{TABLE0}": "city", "{AGG0}": "avg"}, "( building ) , ( the number of ( all items ) ) that belongs to ( faculty ) , grouped by ( building )": {"{COLUMN0}": "building", "{TABLE0}": "faculty", "{AGG0}": "count"}, "( headquarters ) , ( the number of ( all items ) ) that belongs to ( company ) , grouped by ( headquarters )": {"{COLUMN0}": "headquarters", "{COLUMN1}": "company", "{AGG0}": "count"}, "( destination ) , ( the number of ( all items ) ) that belongs to ( flight ) , grouped by ( destination )": {"{COLUMN0}": "destination", "{TABLE0}": "flight", "{AGG0}": "count"}, "( the average of ( age ) ) , ( the maximum of ( age ) ) , ( sex ) that belongs to ( student ) , grouped by ( sex )": {"{COLUMN0}": "age", "{COLUMN1}": "sex", "{TABLE0}": "student", "{AGG0}": "avg", "{AGG1}": "max"}, "( type of staff ) , ( the number of ( all items ) ) that belongs to ( ( school bus ) , and ( ( school ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) ) , grouped by ( type of staff )": {"{COLUMN0}": "type", "{COLUMN1}": "school", "{COLUMN2}": "school_id", "{TABLE0}": "school bus", "{AGG0}": "count"}, "( name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( physician ) , and ( ( patient ) satisfied that ( ( employeeid of addresses ) equal to ( pcp of staff ) ) ) ) , grouped by ( employeeid of addresses )": {"{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "patient", "{COLUMN3}": "employeeid", "{COLUMN4}": "pcp", "{AGG0}": "count"}, "( statement id ) , ( the number of ( all items ) ) that belongs to ( accounts ) , grouped by ( statement id )": {"{COLUMN0}": "statement_id", "{TABLE0}": "accounts", "{AGG0}": "count"}, "( facid of addresses ) , ( the number of ( all items ) ) that belongs to ( ( faculty ) , and ( ( student ) satisfied that ( ( facid of addresses ) equal to ( advisor of staff ) ) ) ) , grouped by ( facid of addresses )": {"{COLUMN0}": "facid", "{COLUMN1}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student", "{AGG0}": "count"}, "( name of addresses ) , ( the average of ( trust ) ) that belongs to ( ( useracct ) , and ( ( trust ) satisfied that ( ( u id of addresses ) equal to ( target u id of staff ) ) ) ) , grouped by ( target u id of staff )": {"{COLUMN0}": "name", "{COLUMN1}": "trust", "{COLUMN2}": "u_id", "{COLUMN3}": "target_u_id", "{TABLE0}": "useracct", "{AGG0}": "avg"}, "( name of addresses ) , ( tourist attraction id of staff ) , ( the number of ( all items ) ) that belongs to ( ( tourist attractions ) , and ( ( visits ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) ) , grouped by ( tourist attraction id of staff )": {"{COLUMN0}": "name", "{COLUMN1}": "tourist_attraction_id", "{TABLE0}": "tourist attractions", "{TABLE1}": "visits", "{AGG0}": "count"}, "( product name of addresses ) , ( the sum of ( order quantity of staff ) ) that belongs to ( ( products ) , and ( ( order items ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product id of addresses )": {"{COLUMN0}": "product_name", "{COLUMN1}": "order_quantity", "{COLUMN2}": "product_id", "{TABLE0}": "products", "{TABLE1}": "order items", "{AGG0}": "sum"}, "( name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses )": {"{COLUMN0}": "name", "{COLUMN1}": "storm_id", "{TABLE0}": "storm", "{TABLE1}": "affected region", "{AGG0}": "count"}, "( title of addresses ) , ( albumid of staff ) , ( the number of ( all items ) ) that belongs to ( ( album ) , and ( ( track ) satisfied that ( ( albumid of addresses ) equal to ( albumid of staff ) ) ) ) , grouped by ( albumid of staff )": {"{COLUMN0}": "title", "{COLUMN1}": "albumid", "{TABLE0}": "album", "{TABLE1}": "track", "{AGG0}": "count"}, "( location ) , ( the number of ( all items ) ) that belongs to ( cinema ) , grouped by ( location )": {"{COLUMN0}": "location", "{TABLE0}": "cinema", "{AGG0}": "count"}, "( the number of ( distinct ( name of addresses ) ) ) , ( headquarter of staff ) that belongs to ( ( products ) , and ( ( manufacturers ) satisfied that ( ( manufacturer of addresses ) equal to ( code of staff ) ) ) ) , grouped by ( headquarter of staff )": {"{COLUMN0}": "name", "{COLUMN1}": "headquarter", "{COLUMN2}": "manufacturer", "{COLUMN3}": "code", "{TABLE0}": "products", "{TABLE1}": "manufacturers", "{AGG0}": "count"}, "( advisor ) , ( the number of ( all items ) ) that belongs to ( student ) , grouped by ( advisor )": {"{COLUMN0}": "advisor", "{TABLE0}": "student", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( project details of addresses ) that belongs to ( ( projects ) , and ( ( tasks ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , grouped by ( project id of addresses )": {"{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{TABLE0}": "projects", "{TABLE1}": "tasks", "{AGG0}": "count"}, "( payment method code ) , ( the number of ( all items ) ) that belongs to ( customers ) , grouped by ( payment method code )": {"{COLUMN0}": "payment_method_code", "{TABLE0}": "customers", "{AGG0}": "count"}, "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) , ( the number of ( all items ) ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses )": {"{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{AGG0}": "count"}, "( the sum of ( credits ) ) , ( dept name ) that belongs to ( course ) , grouped by ( dept name )": {"{COLUMN0}": "credits", "{COLUMN1}": "dept_name", "{TABLE0}": "course", "{AGG0}": "sum"}, "( the number of ( all items ) ) , ( school code of enzyme ) that belongs to ( ( class ) , and ( ( course ) satisfied that ( ( crs code of addresses ) equal to ( crs code of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , grouped by ( school code of enzyme )": {"{COLUMN0}": "school_code", "{COLUMN1}": "crs_code", "{COLUMN2}": "dept_code", "{TABLE0}": "class", "{TABLE1}": "course", "{TABLE2}": "department", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( name of addresses ) that belongs to ( ( scientists ) , and ( ( assignedto ) satisfied that ( ( ssn of addresses ) equal to ( scientist of staff ) ) ) ) , grouped by ( name of addresses )": {"{COLUMN0}": "name", "{COLUMN1}": "ssn", "{COLUMN2}": "scientist", "{TABLE0}": "scientists", "{TABLE1}": "assigned to", "{AGG0}": "count"}, "( nominee ) , ( the number of ( all items ) ) that belongs to ( musical ) , grouped by ( nominee )": {"{COLUMN0}": "nominee", "{TABLE0}": "musical", "{AGG0}": "count"}, "( invoice number ) , ( the number of ( all items ) ) that belongs to ( financial transactions ) , grouped by ( invoice number )": {"{COLUMN0}": "invoice_number", "{TABLE0}": "financial transactions", "{AGG0}": "count"}, "( activity name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( activity ) , and ( ( faculty participates in ) satisfied that ( ( actid of addresses ) equal to ( actid of staff ) ) ) ) , grouped by ( actid of addresses )": {"{COLUMN0}": "activity_name", "{COLUMN1}": "actid", "{TABLE0}": "activity", "{TABLE1}": "faculty participates in", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( competition ) that belongs to ( match ) , grouped by ( competition )": {"{COLUMN0}": "competition", "{TABLE0}": "match", "{AGG0}": "count"}, "( budget type code ) , ( the number of ( all items ) ) that belongs to ( documents with expenses ) , grouped by ( budget type code )": {"{COLUMN0}": "budget_type_code", "{TABLE0}": "documents with expenses", "{AGG0}": "count"}, "( competition type ) , ( the number of ( all items ) ) that belongs to ( competition ) , grouped by ( competition type )": {"{COLUMN0}": "competition_type", "{TABLE0}": "competition", "{AGG0}": "count"}, "( name of staff ) , ( the number of ( all items ) ) that belongs to ( ( exhibition ) , and ( ( artist ) satisfied that ( ( artist id of addresses ) equal to ( artist id of staff ) ) ) ) , grouped by ( artist id of addresses )": {"{COLUMN0}": "name", "{COLUMN1}": "artist_id", "{TABLE0}": "exhibition", "{TABLE1}": "artist", "{AGG0}": "count"}, "( customer id ) , ( the number of ( all items ) ) that belongs to ( accounts ) , grouped by ( customer id )": {"{COLUMN0}": "customer_id", "{TABLE0}": "accounts", "{AGG0}": "count"}, "( transaction type code ) , ( the maximum of ( share count ) ) , ( the minimum of ( share count ) ) that belongs to ( transactions ) , grouped by ( transaction type code )": {"{COLUMN0}": "transaction_type_code", "{COLUMN1}": "share_count", "{TABLE0}": "transactions", "{AGG0}": "max", "{AGG1}": "min"}, "( category ) , ( the number of ( all items ) ) that belongs to ( music festival ) , grouped by ( category )": {"{COLUMN0}": "category", "{COLUMN1}": "music_festival", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( rank ) that belongs to ( captain ) , grouped by ( rank )": {"{COLUMN0}": "rank", "{TABLE0}": "captain", "{AGG0}": "count"}, "( major ) , ( the average of ( age ) ) , ( the minimum of ( age ) ) , ( the maximum of ( age ) ) that belongs to ( student ) , grouped by ( major )": {"{COLUMN0}": "major", "{COLUMN1}": "age", "{TABLE0}": "student", "{AGG0}": "avg", "{AGG1}": "min", "{AGG2}": "max"}, "( the number of ( all items ) ) , ( product id of enzyme ) that belongs to ( ( orders ) join ( ( order items ) ) , and ( ( products ) satisfied that ( ( ( order id of addresses ) equal to ( order id of staff ) ) and ( ( product id of staff ) equal to ( product id of enzyme ) ) ) ) ) , grouped by ( product id of enzyme )": {"{COLUMN0}": "product_id", "{COLUMN1}": "order_id", "{TABLE0}": "orders", "{TABLE1}": "order items", "{TABLE2}": "products", "{AGG0}": "count"}, "( product name of staff ) , ( the sum of ( product quantity of addresses ) ) that belongs to ( ( order items ) , and ( ( products ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product name of staff )": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_quantity", "{COLUMN2}": "product_id", "{TABLE0}": "order items", "{TABLE1}": "products", "{AGG0}": "sum"}, "( trade name ) , ( the number of ( all items ) ) that belongs to ( medicine ) , grouped by ( trade name )": {"{COLUMN0}": "trade_name", "{TABLE0}": "medicine", "{AGG0}": "count"}, "( city ) , ( the maximum of ( lat ) ) that belongs to ( station ) , grouped by ( city )": {"{COLUMN0}": "city", "{COLUMN1}": "lat", "{TABLE0}": "station", "{AGG0}": "max"}, "( status ) , ( the number of ( all items ) ) that belongs to ( roller coaster ) , grouped by ( status )": {"{COLUMN0}": "status", "{TABLE0}": "roller coaster", "{AGG0}": "count"}, "( the average of ( rating ) ) , ( languages ) that belongs to ( song ) , grouped by ( languages )": {"{COLUMN0}": "rating", "{COLUMN1}": "languages", "{TABLE0}": "song", "{AGG0}": "avg"}, "( location code ) , ( the number of ( all items ) ) that belongs to ( document locations ) , grouped by ( location code )": {"{COLUMN0}": "location_code", "{TABLE0}": "document locations", "{AGG0}": "count"}, "( pets allowed yn ) , ( the average of ( price range ) ) that belongs to ( hotels ) , grouped by ( pets allowed yn )": {"{COLUMN0}": "pets_allowed_yn", "{COLUMN1}": "price_range", "{TABLE0}": "hotels", "{AGG0}": "avg"}, "( the number of ( all items ) ) , ( grape ) that belongs to ( wine ) , grouped by ( grape )": {"{COLUMN0}": "grape", "{TABLE0}": "wine", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( gender ) that belongs to ( artist ) , grouped by ( gender )": {"{COLUMN0}": "gender", "{TABLE0}": "artist", "{AGG0}": "count"}, "( the maximum of ( stu gpa ) ) , ( the average of ( stu gpa ) ) , ( the minimum of ( stu gpa ) ) , ( dept code ) that belongs to ( student ) , grouped by ( dept code )": {"{COLUMN0}": "stu_gpa", "{COLUMN1}": "dept_code", "{TABLE0}": "student", "{AGG0}": "max", "{AGG1}": "avg", "{AGG2}": "min"}, "( industry ) , ( the number of ( all items ) ) that belongs to ( companies ) , grouped by ( industry )": {"{COLUMN0}": "industry", "{TABLE0}": "companies", "{AGG0}": "count"}, "( booking status code ) , ( the number of ( all items ) ) that belongs to ( apartment bookings ) , grouped by ( booking status code )": {"{COLUMN0}": "booking_status_code", "{TABLE0}": "apartment bookings", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( classroom ) that belongs to ( list ) , grouped by ( classroom )": {"{COLUMN0}": "classroom", "{TABLE0}": "list", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( dept name ) that belongs to ( student ) , grouped by ( dept name )": {"{COLUMN0}": "dept_name", "{TABLE0}": "student", "{AGG0}": "count"}, "( product type code ) , ( the average of ( product price ) ) that belongs to ( products ) , grouped by ( product type code )": {"{COLUMN0}": "product_type_code", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{AGG0}": "avg"}, "( the number of ( all items ) ) , ( dept code ) that belongs to ( student ) , grouped by ( dept code )": {"{COLUMN0}": "dept_code", "{TABLE0}": "student", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( formats ) that belongs to ( files ) , grouped by ( formats )": {"{COLUMN0}": "formats", "{TABLE0}": "files", "{AGG0}": "count"}, "( policy type code ) , ( the number of ( all items ) ) that belongs to ( policies ) , grouped by ( policy type code )": {"{COLUMN0}": "policy_type_code", "{TABLE0}": "policies", "{AGG0}": "count"}, "( the sum of ( stu hrs ) ) , ( dept code ) that belongs to ( student ) , grouped by ( dept code )": {"{COLUMN0}": "stu_hrs", "{COLUMN1}": "dept_code", "{TABLE0}": "student", "{AGG0}": "sum"}, "( code ) , ( name ) , ( the minimum of ( price ) ) that belongs to ( products ) , grouped by ( name )": {"{COLUMN0}": "code", "{COLUMN1}": "name", "{COLUMN2}": "price", "{TABLE0}": "products", "{AGG0}": "min"}, "( product name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( products ) , and ( ( products in events ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product name of addresses )": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "products in events", "{AGG0}": "count"}, "( party ) , ( the number of ( all items ) ) that belongs to ( driver ) , grouped by ( party )": {"{COLUMN0}": "party", "{TABLE0}": "driver", "{AGG0}": "count"}, "( destruction authorised by employee id ) , ( the number of ( all items ) ) that belongs to ( documents to be destroyed ) , grouped by ( destruction authorised by employee id )": {"{COLUMN0}": "destruction_authorised_by_employee_id", "{TABLE0}": "documents to be destroyed", "{AGG0}": "count"}, "( country ) , ( the number of ( all items ) ) that belongs to ( climber ) , grouped by ( country )": {"{COLUMN0}": "country", "{TABLE0}": "climber", "{AGG0}": "count"}, "( the sum of ( revenue ) ) , ( name ) that belongs to ( manufacturers ) , grouped by ( name )": {"{COLUMN0}": "revenue", "{COLUMN1}": "name", "{TABLE0}": "manufacturers", "{AGG0}": "sum"}, "( the number of ( all items ) ) , ( director of addresses ) that belongs to ( ( movie ) , and ( ( rating ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( director of addresses )": {"{COLUMN0}": "director", "{COLUMN1}": "mid", "{TABLE0}": "movie", "{TABLE1}": "rating", "{AGG0}": "count"}, "( card type code ) , ( the number of ( distinct ( customer id ) ) ) that belongs to ( customers cards ) , grouped by ( card type code )": {"{COLUMN0}": "card_type_code", "{COLUMN1}": "customer_id", "{TABLE0}": "customers cards", "{AGG0}": "count"}, "( the minimum of ( hs of staff ) ) , ( ppos of addresses ) that belongs to ( ( tryout ) , and ( ( player ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , grouped by ( ppos of addresses )": {"{COLUMN0}": "hs", "{COLUMN1}": "ppos", "{COLUMN2}": "pid", "{TABLE0}": "tryout", "{TABLE1}": "player", "{AGG0}": "min"}, "( student id of addresses ) , ( the number of ( all items ) ) that belongs to ( ( students ) , and ( ( student course registrations ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , grouped by ( student id of addresses )": {"{COLUMN0}": "student_id", "{TABLE0}": "students", "{TABLE1}": "student course registrations", "{AGG0}": "count"}, "( preferred foot ) , ( the average of ( overall rating ) ) that belongs to ( player attributes ) , grouped by ( preferred foot )": {"{COLUMN0}": "preferred_foot", "{COLUMN1}": "overall_rating", "{TABLE0}": "player attributes", "{AGG0}": "avg"}, "( sportname ) , ( the number of ( all items ) ) that belongs to ( sportsinfo ) , grouped by ( sportname )": {"{COLUMN0}": "sportname", "{TABLE0}": "sports info", "{AGG0}": "count"}, "( stuid ) , ( the number of ( all items ) ) , ( the sum of ( gamesplayed ) ) that belongs to ( sportsinfo ) , grouped by ( stuid )": {"{COLUMN0}": "stuid", "{COLUMN1}": "gamesplayed", "{TABLE0}": "sports info", "{AGG0}": "count", "{AGG1}": "sum"}, "( the sum of ( crs credit ) ) , ( dept code ) that belongs to ( course ) , grouped by ( dept code )": {"{COLUMN0}": "crs_credit", "{COLUMN1}": "dept_code", "{TABLE0}": "course", "{AGG0}": "sum"}, "( allergytype of staff ) , ( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , grouped by ( allergytype of staff )": {"{COLUMN0}": "allergytype", "{COLUMN1}": "allergy", "{TABLE0}": "has allergy", "{TABLE1}": "allergy type", "{AGG0}": "count"}, "( name first of addresses ) , ( name last of addresses ) , ( player id of addresses ) , ( the number of ( all items ) ) that belongs to ( ( player ) , and ( ( all star ) satisfied that ( ( player id of addresses ) equal to ( player id of staff ) ) ) ) , grouped by ( player id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "player_id", "{TABLE0}": "player", "{TABLE1}": "all star", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( title of addresses ) , ( inventory id of staff ) that belongs to ( ( film ) , and ( ( inventory ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) , and ( ( rental ) satisfied that ( ( inventory id of staff ) equal to ( inventory id of enzyme ) ) ) ) , grouped by ( inventory id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "inventory_id", "{COLUMN2}": "film_id", "{TABLE0}": "film", "{TABLE1}": "inventory", "{TABLE2}": "rental", "{AGG0}": "count", "{SC0}": "desc"}, "( name first of addresses ) , ( name last of addresses ) , ( player id of addresses ) that belongs to ( ( player ) , and ( ( player award ) satisfied that ( ( player id of addresses ) equal to ( player id of staff ) ) ) ) , grouped by ( player id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )": {"{VALUE8}": "3", "{COLUMN0}": "name_first", "{COLUMN1}": "name_last", "{COLUMN2}": "player_id", "{TABLE0}": "player", "{TABLE1}": "player award", "{AGG0}": "count", "{SC0}": "desc"}, "( name of staff ) that belongs to ( ( album ) , and ( ( artist ) satisfied that ( ( artistid of addresses ) equal to ( artistid of staff ) ) ) ) , grouped by ( name of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "artistid", "{TABLE0}": "album", "{TABLE1}": "artist", "{AGG0}": "count", "{SC0}": "desc"}, "( title of addresses ) , ( film id of addresses ) that belongs to ( ( film ) , and ( ( inventory ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) ) , grouped by ( film id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "film_id", "{TABLE0}": "film", "{TABLE1}": "inventory", "{AGG0}": "count", "{SC0}": "desc"}, "( customer id of addresses ) that belongs to ( ( customers ) , and ( ( orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "orders", "{AGG0}": "count", "{SC0}": "desc"}, "( name of addresses ) that belongs to ( ( nurse ) , and ( ( appointment ) satisfied that ( ( employeeid of addresses ) equal to ( prepnurse of staff ) ) ) ) , grouped by ( employeeid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "nurse", "{COLUMN2}": "appointment", "{COLUMN3}": "employeeid", "{COLUMN4}": "prepnurse", "{AGG0}": "count", "{SC0}": "desc"}, "( customer last name of staff ) , ( customer id of addresses ) , ( phone number of staff ) that belongs to ( ( orders ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "customer_last_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "phone_number", "{TABLE0}": "orders", "{TABLE1}": "customers", "{AGG0}": "count", "{SC0}": "desc"}, "( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( match ) satisfied that ( ( aircraft id of addresses ) equal to ( winning aircraft of staff ) ) ) ) , grouped by ( winning aircraft of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "winning_aircraft", "{TABLE0}": "match", "{AGG0}": "count", "{SC0}": "desc"}, "( the sum of ( access count ) ) that belongs to ( documents ) , grouped by ( document type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "access_count", "{COLUMN1}": "document_type_code", "{TABLE0}": "documents", "{AGG0}": "sum", "{AGG1}": "count", "{SC0}": "desc"}, "( project details of addresses ) , ( project id of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , grouped by ( project id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{TABLE0}": "projects", "{TABLE1}": "project outcomes", "{AGG0}": "count", "{SC0}": "desc"}, "( name of addresses ) , ( hours of addresses ) that belongs to ( ( projects ) , and ( ( assignedto ) satisfied that ( ( code of addresses ) equal to ( project of staff ) ) ) ) , grouped by ( project of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "hours", "{COLUMN2}": "code", "{COLUMN3}": "project", "{TABLE0}": "projects", "{TABLE1}": "assigned to", "{AGG0}": "count", "{SC0}": "desc"}, "( city code ) that belongs to ( student ) , grouped by ( city code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "city_code", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "( customer status code ) that belongs to ( customers ) , grouped by ( customer status code ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_status_code", "{TABLE0}": "customers", "{AGG0}": "count", "{SC0}": "asc"}, "( organisation id of addresses ) , ( organisation type of addresses ) , ( organisation details of addresses ) that belongs to ( ( organisations ) , and ( ( research staff ) satisfied that ( ( organisation id of addresses ) equal to ( employer organisation id of staff ) ) ) ) , grouped by ( organisation id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "organisation_id", "{COLUMN1}": "organisation_type", "{COLUMN2}": "organisation_details", "{COLUMN3}": "employer_organisation_id", "{TABLE0}": "organisations", "{TABLE1}": "research staff", "{AGG0}": "count", "{SC0}": "desc"}, "( name of staff ) that belongs to ( ( certificate ) , and ( ( aircraft ) satisfied that ( ( aid of staff ) equal to ( aid of addresses ) ) ) ) , grouped by ( aid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "aid", "{TABLE0}": "certificate", "{TABLE1}": "aircraft", "{AGG0}": "count", "{SC0}": "desc"}, "( status of addresses ) that belongs to ( ( city ) , and ( ( farm competition ) satisfied that ( ( city id of addresses ) equal to ( host city id of staff ) ) ) ) , grouped by ( host city id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "status", "{COLUMN1}": "city_id", "{COLUMN2}": "host_city_id", "{TABLE0}": "city", "{TABLE1}": "farm competition", "{AGG0}": "count", "{SC0}": "desc"}, "( reign ) that belongs to ( wrestler ) , grouped by ( reign ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "reign", "{TABLE0}": "wrestler", "{AGG0}": "count", "{SC0}": "desc"}, "( home city ) that belongs to ( driver ) , grouped by ( home city ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "home_city", "{TABLE0}": "driver", "{AGG0}": "count", "{SC0}": "desc"}, "( roomname of staff ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , grouped by ( room of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "roomname", "{COLUMN1}": "room", "{COLUMN2}": "roomid", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{AGG0}": "count", "{SC0}": "desc"}, "( name of addresses ) , ( city of addresses ) , ( dst apid of staff ) that belongs to ( ( airports ) , and ( ( routes ) satisfied that ( ( apid of addresses ) equal to ( dst apid of staff ) ) ) ) , grouped by ( dst apid of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "city", "{COLUMN2}": "dst_apid", "{COLUMN3}": "apid", "{TABLE0}": "airports", "{TABLE1}": "routes", "{AGG0}": "count", "{SC0}": "desc"}, "( built year ) that belongs to ( ship ) , grouped by ( built year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "built_year", "{TABLE0}": "ship", "{AGG0}": "count", "{SC0}": "desc"}, "( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) ) , grouped by ( color description of member of club ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "color_description", "{COLUMN1}": "color_code", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{AGG0}": "count", "{SC0}": "asc"}, "( activity name of addresses ) that belongs to ( ( activity ) , and ( ( faculty participates in ) satisfied that ( ( actid of addresses ) equal to ( actid of staff ) ) ) ) , grouped by ( actid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "activity_name", "{COLUMN1}": "actid", "{TABLE0}": "activity", "{TABLE1}": "faculty participates in", "{AGG0}": "count", "{SC0}": "desc"}, "( shop name of staff ) that belongs to ( ( stock ) , and ( ( shop ) satisfied that ( ( shop id of addresses ) equal to ( shop id of staff ) ) ) ) , grouped by ( shop id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "shop_name", "{COLUMN1}": "shop_id", "{TABLE0}": "stock", "{TABLE1}": "shop", "{AGG0}": "count", "{SC0}": "desc"}, "( customer first name of staff ) , ( customer last name of staff ) , ( customer id of addresses ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{COLUMN0}": "customer_first_name", "{COLUMN1}": "customer_last_name", "{COLUMN2}": "customer_id", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{AGG0}": "count", "{SC0}": "asc"}, "( customer name of addresses ) that belongs to ( ( customers ) , and ( ( orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "orders", "{AGG0}": "count", "{SC0}": "desc"}, "( document type code ) that belongs to ( documents ) , grouped by ( document type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "document_type_code", "{TABLE0}": "documents", "{AGG0}": "count", "{SC0}": "desc"}, "( status code ) that belongs to ( bookings ) , grouped by ( status code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "status_code", "{TABLE0}": "bookings", "{AGG0}": "count", "{SC0}": "desc"}, "( fname of student ) , ( lname of student ) that belongs to ( student , and ( visits restaurant satisfied that ( ( stuid of student ) equal to ( stuid of visits restaurant ) ) ) ) , grouped by ( stuid of student ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "stuid", "{TABLE0}": "student", "{TABLE1}": "visits restaurant", "{AGG0}": "count", "{SC0}": "desc"}, "( name of addresses ) that belongs to ( ( airlines ) , and ( ( routes ) satisfied that ( ( alid of addresses ) equal to ( alid of staff ) ) ) ) , grouped by ( name of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "alid", "{TABLE0}": "airlines", "{TABLE1}": "routes", "{AGG0}": "count", "{SC0}": "desc"}, "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{AGG0}": "count", "{SC0}": "desc"}, "( type ) that belongs to ( ship ) , grouped by ( type ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "type", "{TABLE0}": "ship", "{AGG0}": "count", "{SC0}": "desc"}, "( class ) that belongs to ( race ) , grouped by ( class ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "class", "{TABLE0}": "race", "{AGG0}": "count", "{SC0}": "desc"}, "( part id of addresses ) , ( part name of addresses ) that belongs to ( ( parts ) , and ( ( part faults ) satisfied that ( ( part id of addresses ) equal to ( part id of staff ) ) ) , and ( ( skills required to fix ) satisfied that ( ( part fault id of staff ) equal to ( part fault id of enzyme ) ) ) ) , grouped by ( part id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "part_id", "{COLUMN1}": "part_name", "{COLUMN2}": "part_fault_id", "{TABLE0}": "parts", "{TABLE1}": "part faults", "{TABLE2}": "skills required to fix", "{AGG0}": "count", "{SC0}": "desc"}, "( artist name of addresses ) , ( the number of ( all items ) ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , grouped by ( artist name of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )": {"{VALUE6}": "3", "{COLUMN0}": "artist_name", "{TABLE0}": "artist", "{TABLE1}": "song", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( pilot ) that belongs to ( flight ) , grouped by ( pilot ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "pilot", "{TABLE0}": "flight", "{AGG0}": "count", "{SC0}": "desc"}, "( location ) that belongs to ( performance ) , grouped by ( location ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "location", "{TABLE0}": "performance", "{AGG0}": "count", "{SC0}": "desc"}, "( major ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "major", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "( fname of addresses ) , ( lname of addresses ) that belongs to ( ( faculty ) , and ( ( student ) satisfied that ( ( facid of addresses ) equal to ( advisor of staff ) ) ) ) , grouped by ( facid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "facid", "{COLUMN3}": "advisor", "{TABLE0}": "faculty", "{TABLE1}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "( rank ) that belongs to ( captain ) , grouped by ( rank ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "rank", "{TABLE0}": "captain", "{AGG0}": "count", "{SC0}": "desc"}, "( dept name of trip ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( course ) satisfied that ( ( crs code of addresses ) equal to ( crs code of enzyme ) ) ) , and ( ( department ) satisfied that ( ( dept code of enzyme ) equal to ( dept code of trip ) ) ) ) , grouped by ( dept code of enzyme ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "class_code", "{COLUMN2}": "crs_code", "{COLUMN3}": "dept_code", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "course", "{TABLE3}": "department", "{AGG0}": "count", "{SC0}": "desc"}, "( student id of addresses ) , ( last name of staff ) that belongs to ( ( behavior incident ) , and ( ( students ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , grouped by ( student id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "student_id", "{COLUMN1}": "last_name", "{TABLE0}": "behavior incident", "{TABLE1}": "students", "{AGG0}": "count", "{SC0}": "desc"}, "( characteristic name of student ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , grouped by ( characteristic name of student ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "characteristic_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{AGG0}": "count", "{SC0}": "desc"}, "( role description of addresses ) , ( staff id of staff ) that belongs to ( ( staff roles ) , and ( ( project staff ) satisfied that ( ( role code of addresses ) equal to ( role code of staff ) ) ) , and ( ( project outcomes ) satisfied that ( ( project id of staff ) equal to ( project id of enzyme ) ) ) ) , grouped by ( staff id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "role_description", "{COLUMN1}": "staff_id", "{COLUMN2}": "role_code", "{COLUMN3}": "project_id", "{TABLE0}": "staff roles", "{TABLE1}": "project staff", "{TABLE2}": "project outcomes", "{AGG0}": "count", "{SC0}": "desc"}, "( dept name ) that belongs to ( course ) , grouped by ( dept name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "dept_name", "{TABLE0}": "course", "{AGG0}": "count", "{SC0}": "desc"}, "( title of staff ) , ( mid of addresses ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( mid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{TABLE0}": "rating", "{TABLE1}": "movie", "{AGG0}": "count", "{SC0}": "desc"}, "( party of staff ) that belongs to ( ( election ) , and ( ( party ) satisfied that ( ( party of addresses ) equal to ( party id of staff ) ) ) ) , grouped by ( party of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "party", "{COLUMN1}": "party_id", "{TABLE0}": "election", "{AGG0}": "count", "{SC0}": "desc"}, "( customer name of addresses ) , ( customer phone of addresses ) , ( customer email of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_phone", "{COLUMN2}": "customer_email", "{COLUMN3}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{AGG0}": "count", "{SC0}": "desc"}, "( account id ) that belongs to ( financial transactions ) , grouped by ( account id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "account_id", "{TABLE0}": "financial transactions", "{AGG0}": "count", "{SC0}": "desc"}, "( governor ) that belongs to ( party ) , grouped by ( governor ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "governor", "{COLUMN1}": "party", "{AGG0}": "count", "{SC0}": "desc"}, "( headquartered city of student ) that belongs to ( ( store ) , and ( ( store district ) satisfied that ( ( store id of club ) equal to ( store id of member of club ) ) ) , and ( ( district ) satisfied that ( ( district id of member of club ) equal to ( district id of student ) ) ) ) , grouped by ( headquartered city of student ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "headquartered_city", "{COLUMN1}": "store_id", "{COLUMN2}": "district_id", "{TABLE0}": "store", "{TABLE1}": "store district", "{TABLE2}": "district", "{AGG0}": "count", "{SC0}": "desc"}, "( city of staff ) that belongs to ( ( customers ) , and ( ( addresses ) satisfied that ( ( customer address id of addresses ) equal to ( address id of staff ) ) ) ) , grouped by ( city of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "city", "{COLUMN1}": "customer_address_id", "{COLUMN2}": "address_id", "{TABLE0}": "customers", "{TABLE1}": "addresses", "{AGG0}": "count", "{SC0}": "desc"}, "( title ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) ) , grouped by ( songid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "songid", "{TABLE0}": "vocals", "{TABLE1}": "songs", "{AGG0}": "count", "{SC0}": "desc"}, "( classroom ) that belongs to ( list ) , grouped by ( classroom ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "classroom", "{TABLE0}": "list", "{AGG0}": "count", "{SC0}": "desc"}, "( fname of staff ) , ( lname of staff ) that belongs to ( ( sportsinfo ) , and ( ( student ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , grouped by ( stuid of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "stuid", "{TABLE0}": "sports info", "{TABLE1}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "( dept name ) that belongs to ( student ) , grouped by ( dept name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "dept_name", "{TABLE0}": "student", "{AGG0}": "count", "{SC0}": "desc"}, "( product details of member of club ) that belongs to ( ( order items ) , and ( ( products ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) ) , grouped by ( product id of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "product_details", "{COLUMN1}": "product_id", "{TABLE0}": "order items", "{TABLE1}": "products", "{AGG0}": "count", "{SC0}": "desc"}, "( type ) , ( the number of ( all items ) ) that belongs to ( operate company ) , grouped by ( type ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "type", "{TABLE0}": "operate company", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( store id ) that belongs to ( inventory ) , grouped by ( store id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "store_id", "{TABLE0}": "inventory", "{AGG0}": "count", "{SC0}": "desc"}, "( location code ) that belongs to ( document locations ) , grouped by ( location code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "location_code", "{TABLE0}": "document locations", "{AGG0}": "count", "{SC0}": "desc"}, "( amenity name of addresses ) that belongs to ( ( dorm amenity ) , and ( ( has amenity ) satisfied that ( ( amenid of addresses ) equal to ( amenid of staff ) ) ) ) , grouped by ( amenid of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "amenity_name", "{COLUMN1}": "amenid", "{TABLE0}": "dorm amenity", "{TABLE1}": "has amenity", "{AGG0}": "count", "{SC0}": "desc"}, "( card type code ) that belongs to ( customers cards ) , grouped by ( card type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "card_type_code", "{TABLE0}": "customers cards", "{AGG0}": "count", "{SC0}": "desc"}, "( year ) that belongs to ( section ) , grouped by ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "year", "{TABLE0}": "section", "{AGG0}": "count", "{SC0}": "desc"}, "( party ) that belongs to ( people ) , grouped by ( party ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "party", "{TABLE0}": "people", "{AGG0}": "count", "{SC0}": "desc"}, "( transaction type code ) that belongs to ( transactions ) , grouped by ( transaction type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "transaction_type_code", "{TABLE0}": "transactions", "{AGG0}": "count", "{SC0}": "desc"}, "( party ) , ( the number of ( all items ) ) that belongs to ( representative ) , grouped by ( party ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "party", "{TABLE0}": "representative", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( name of staff ) that belongs to ( ( photos ) , and ( ( camera lens ) satisfied that ( ( camera lens id of addresses ) equal to ( id of staff ) ) ) ) , grouped by ( id of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "camera_lens_id", "{COLUMN2}": "id", "{TABLE0}": "photos", "{TABLE1}": "camera lens", "{AGG0}": "count", "{SC0}": "desc"}, "( the number of ( all items ) ) , ( fault log entry id of addresses ) that belongs to ( ( fault log ) , and ( ( engineer visits ) satisfied that ( ( fault log entry id of addresses ) equal to ( fault log entry id of staff ) ) ) ) , grouped by ( fault log entry id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "fault_log_entry_id", "{TABLE0}": "fault log", "{TABLE1}": "engineer visits", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( customer name of club ) that belongs to ( ( customers ) , and ( ( customers policies ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , grouped by ( customer name of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "customers policies", "{AGG0}": "count", "{SC0}": "desc"}, "( detention type code of addresses ) , ( detention type description of staff ) that belongs to ( ( detention ) , and ( ( ref detention type ) satisfied that ( ( detention type code of addresses ) equal to ( detention type code of staff ) ) ) ) , grouped by ( detention type code of addresses ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "detention_type_code", "{COLUMN1}": "detention_type_description", "{TABLE0}": "detention", "{TABLE1}": "reference detention type", "{AGG0}": "count", "{SC0}": "asc"}, "( payment method code ) that belongs to ( payments ) , grouped by ( payment method code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "payment_method_code", "{TABLE0}": "payments", "{AGG0}": "count", "{SC0}": "desc"}, "( instrument ) that belongs to ( instruments ) , grouped by ( instrument ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "instrument", "{TABLE0}": "instruments", "{AGG0}": "count", "{SC0}": "desc"}, "( claim status name of member of club ) that belongs to ( ( claims processing ) , and ( ( claims processing stages ) satisfied that ( ( claim stage id of club ) equal to ( claim stage id of member of club ) ) ) ) , grouped by ( claim stage id of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "claim_status_name", "{COLUMN1}": "claim_stage_id", "{TABLE0}": "claims processing", "{TABLE1}": "claims processing stages", "{AGG0}": "count", "{SC0}": "desc"}, "( dname of addresses ) that belongs to ( ( department ) , and ( ( minor in ) satisfied that ( ( dno of addresses ) equal to ( dno of staff ) ) ) ) , grouped by ( dno of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "dname", "{COLUMN1}": "dno", "{TABLE0}": "department", "{TABLE1}": "minor in", "{AGG0}": "count", "{SC0}": "desc"}, "( gtype ) that belongs to ( video games ) , grouped by ( gtype ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "gtype", "{TABLE0}": "video games", "{AGG0}": "count", "{SC0}": "desc"}, "( yearid ) that belongs to ( hall of fame ) , grouped by ( yearid ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "yearid", "{TABLE0}": "hall of fame", "{AGG0}": "count", "{SC0}": "asc"}, "( allergytype ) that belongs to ( allergy type ) , grouped by ( allergytype ) , ordered by ( ( the number of ( all items ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "allergytype", "{TABLE0}": "allergy type", "{AGG0}": "count", "{SC0}": "asc"}, "( distinct ( grape of addresses ) ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( ( color of addresses ) equal to ( white ) ) and ( ( score of staff ) greater than ( 90 ) ) )": {"{VALUE0}": "white", "{VALUE9}": "90", "{COLUMN0}": "grape", "{COLUMN1}": "color", "{COLUMN2}": "score", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{OP0}": "=", "{OP1}": ">"}, "( account name of addresses ) , ( other account details of addresses ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( customer first name of staff ) equal to ( meaghan ) ) and ( ( customer last name of staff ) equal to ( keeling ) ) )": {"{VALUE0}": "meaghan", "{VALUE1}": "keeling", "{COLUMN0}": "account_name", "{COLUMN1}": "other_account_details", "{COLUMN2}": "customer_id", "{COLUMN3}": "customer_first_name", "{COLUMN4}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "="}, "( the average of ( age of addresses ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( secretary vote ) ) ) ) , that have ( ( ( sex of addresses ) equal to ( f ) ) and ( ( election cycle of staff ) equal to ( spring ) ) )": {"{VALUE0}": "f", "{VALUE1}": "spring", "{COLUMN0}": "age", "{COLUMN1}": "stuid", "{COLUMN2}": "secretary_vote", "{COLUMN3}": "sex", "{COLUMN4}": "election_cycle", "{TABLE0}": "student", "{TABLE1}": "voting record", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "( the average of ( price ) ) , ( the average of ( cases ) ) that belongs to ( wine ) , that have ( ( ( year ) equal to ( 2009 ) ) and ( ( grape ) equal to ( zinfandel ) ) )": {"{VALUE0}": "zinfandel", "{VALUE1}": "2009", "{COLUMN0}": "price", "{COLUMN1}": "cases", "{COLUMN2}": "year", "{COLUMN3}": "grape", "{TABLE0}": "wine", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg", "{AGG1}": "avg"}, "( distinct ( first name of addresses ) ) , ( last name of addresses ) that belongs to ( ( staff ) , and ( ( rental ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) , and ( ( customer ) satisfied that ( ( customer id of staff ) equal to ( customer id of enzyme ) ) ) ) , that have ( ( ( first name of enzyme ) equal to ( 'april' ) ) and ( ( last name of enzyme ) equal to ( 'burns' ) ) )": {"{VALUE0}": "april", "{VALUE1}": "burns", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "staff_id", "{COLUMN3}": "customer_id", "{TABLE0}": "staff", "{TABLE1}": "rental", "{TABLE2}": "customer", "{OP0}": "=", "{OP1}": "="}, "( name of addresses ) that belongs to ( ( browser ) , and ( ( accelerator compatible browser ) satisfied that ( ( id of addresses ) equal to ( browser id of staff ) ) ) , and ( ( web client accelerator ) satisfied that ( ( accelerator id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( ( name of enzyme ) equal to ( 'cproxy' ) ) and ( ( compatible since year of staff ) greater than ( 1998 ) ) )": {"{VALUE0}": "cproxy", "{VALUE12}": "1998", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "browser_id", "{COLUMN3}": "accelerator_id", "{COLUMN4}": "compatible_since_year", "{TABLE0}": "browser", "{TABLE1}": "accelerator compatible browser", "{TABLE2}": "web client accelerator", "{OP0}": "=", "{OP1}": ">"}, "( the sum of ( lesson time ) ) that belongs to ( ( lessons ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( janessa ) ) and ( ( last name of staff ) equal to ( sawayn ) ) )": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "lesson_time", "{COLUMN1}": "staff_id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "lessons", "{TABLE1}": "staff", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( voting record ) satisfied that ( ( stuid of addresses ) equal to ( class senator vote ) ) ) ) , that have ( ( ( city code of addresses ) equal to ( nyc ) ) and ( ( election cycle of staff ) equal to ( spring ) ) )": {"{VALUE0}": "nyc", "{VALUE1}": "spring", "{COLUMN0}": "stuid", "{COLUMN1}": "class_senator_vote", "{COLUMN2}": "city_code", "{COLUMN3}": "election_cycle", "{TABLE0}": "student", "{TABLE1}": "voting record", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( nickname ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "nickname", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "staff", "{OP0}": "=", "{OP1}": "="}, "( name of staff ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , that have ( ( ( color of addresses ) equal to ( red ) ) and ( ( price of staff ) greater than ( 50 ) ) )": {"{VALUE0}": "red", "{VALUE9}": "50", "{COLUMN0}": "name", "{COLUMN1}": "grape", "{COLUMN2}": "color", "{COLUMN3}": "price", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{OP0}": "=", "{OP1}": ">"}, "( zip postcode of addresses ) that belongs to ( ( addresses ) , and ( ( staff ) satisfied that ( ( address id of addresses ) equal to ( staff address id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( janessa ) ) and ( ( last name of staff ) equal to ( sawayn ) ) )": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "zip_postcode", "{COLUMN1}": "address_id", "{COLUMN2}": "staff_address_id", "{COLUMN3}": "first_name", "{COLUMN4}": "last_name", "{TABLE0}": "addresses", "{TABLE1}": "staff", "{OP0}": "=", "{OP1}": "="}, "( zip postcode of staff ) that belongs to ( ( customers ) , and ( ( addresses ) satisfied that ( ( customer address id of addresses ) equal to ( address id of staff ) ) ) ) , that have ( ( ( first name of addresses ) equal to ( carole ) ) and ( ( last name of addresses ) equal to ( bernhard ) ) )": {"{VALUE0}": "carole", "{VALUE1}": "bernhard", "{COLUMN0}": "zip_postcode", "{COLUMN1}": "customer_address_id", "{COLUMN2}": "address_id", "{COLUMN3}": "first_name", "{COLUMN4}": "last_name", "{TABLE0}": "customers", "{TABLE1}": "addresses", "{OP0}": "=", "{OP1}": "="}, "( date of birth ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "date_of_birth", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "staff", "{OP0}": "=", "{OP1}": "="}, "( product ) that belongs to ( product ) , that have ( ( ( max page size ) equal to ( a4 ) ) and ( ( pages per minute color ) less than ( 5 ) ) )": {"{VALUE0}": "a4", "{VALUE2}": "5", "{COLUMN0}": "product", "{COLUMN1}": "max_page_size", "{COLUMN2}": "pages_per_minute_color", "{OP0}": "=", "{OP1}": "<"}, "( stu fname of enzyme ) that belongs to ( ( class ) , and ( ( enroll ) satisfied that ( ( class code of addresses ) equal to ( class code of staff ) ) ) , and ( ( student ) satisfied that ( ( stu num of staff ) equal to ( stu num of enzyme ) ) ) ) , that have ( ( ( crs code of addresses ) equal to ( 'acct-211' ) ) and ( ( enroll grade of staff ) equal to ( 'c' ) ) )": {"{VALUE0}": "acct-211", "{VALUE1}": "c", "{COLUMN0}": "stu_fname", "{COLUMN1}": "class_code", "{COLUMN2}": "stu_num", "{COLUMN3}": "crs_code", "{COLUMN4}": "enroll_grade", "{TABLE0}": "class", "{TABLE1}": "enroll", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "="}, "( product name of club ) that belongs to ( ( products ) , and ( ( ref product categories ) satisfied that ( ( product category code of club ) equal to ( product category code of member of club ) ) ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of student ) ) ) ) , that have ( ( ( color description of student ) equal to ( white ) ) and ( ( unit of measure of member of club ) not equal to ( handful ) ) )": {"{VALUE0}": "white", "{VALUE1}": "handful", "{COLUMN0}": "product_name", "{COLUMN1}": "product_category_code", "{COLUMN2}": "color_code", "{COLUMN3}": "color_description", "{COLUMN4}": "unit_of_measure", "{TABLE0}": "products", "{TABLE1}": "reference product categories", "{TABLE2}": "reference colors", "{OP0}": "=", "{OP1}": "!="}, "( the number of ( all items ) ) that belongs to ( student ) , that have ( ( ( sex ) equal to ( 'f' ) ) and ( ( age ) less than ( 25 ) ) )": {"{VALUE0}": "f", "{VALUE2}": "25", "{COLUMN0}": "sex", "{COLUMN1}": "age", "{TABLE0}": "student", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "count"}, "( product name ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of inst ) ) ) ) , that have ( ( ( color description of inst ) equal to ( red ) ) and ( ( characteristic name of student ) equal to ( fast ) ) )": {"{VALUE0}": "red", "{VALUE1}": "fast", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{COLUMN3}": "color_code", "{COLUMN4}": "color_description", "{COLUMN5}": "characteristic_name", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{TABLE3}": "reference colors", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( routes ) , and ( ( airports ) satisfied that ( ( dst apid of addresses ) equal to ( apid of staff ) ) ) , and ( ( airlines ) satisfied that ( ( alid of addresses ) equal to ( alid of enzyme ) ) ) ) , that have ( ( ( country of staff ) equal to ( 'italy' ) ) and ( ( name of enzyme ) equal to ( 'american airlines' ) ) )": {"{VALUE0}": "italy", "{VALUE1}": "american airlines", "{COLUMN0}": "dst_apid", "{COLUMN1}": "apid", "{COLUMN2}": "alid", "{COLUMN3}": "country", "{COLUMN4}": "name", "{TABLE0}": "routes", "{TABLE1}": "airports", "{TABLE2}": "airlines", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( weather ) , that have ( ( ( mean humidity ) greater than ( 50 ) ) and ( ( mean visibility miles ) greater than ( 8 ) ) )": {"{VALUE0}": "50", "{VALUE1}": "8", "{COLUMN0}": "mean_humidity", "{COLUMN1}": "mean_visibility_miles", "{TABLE0}": "weather", "{OP0}": ">", "{OP1}": ">", "{AGG0}": "count"}, "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of addresses ) equal to ( evelina ) ) and ( ( lastname of addresses ) equal to ( bromley ) ) )": {"{VALUE0}": "evelina", "{VALUE1}": "bromley", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "="}, "( distinct ( product id of staff ) ) that belongs to ( ( orders ) , and ( ( order items ) satisfied that ( ( order id of addresses ) equal to ( order id of staff ) ) ) ) , that have ( ( ( date order placed of addresses ) greater than or equal to ( 1975-01-01 ) ) and ( ( date order placed of addresses ) less than or equal to ( 1976-01-01 ) ) )": {"{VALUE0}": "1975-01-01", "{VALUE1}": "1976-01-01", "{COLUMN0}": "product_id", "{COLUMN1}": "order_id", "{COLUMN2}": "date_order_placed", "{TABLE0}": "orders", "{TABLE1}": "order items", "{OP0}": ">=", "{OP1}": "<="}, "( the sum of ( amount payment of addresses ) ) that belongs to ( ( customer payments ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( carole ) ) and ( ( last name of staff ) equal to ( bernhard ) ) )": {"{VALUE0}": "carole", "{VALUE1}": "bernhard", "{COLUMN0}": "amount_payment", "{COLUMN1}": "customer_id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "customer payments", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "( type ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of enzyme ) ) ) ) , that have ( ( ( lastname of enzyme ) equal to ( heilo ) ) and ( ( title of staff ) equal to ( der kapitan ) ) )": {"{VALUE0}": "heilo", "{VALUE1}": "der kapitan", "{COLUMN0}": "type", "{COLUMN1}": "songid", "{COLUMN2}": "bandmate", "{COLUMN3}": "id", "{COLUMN4}": "lastname", "{COLUMN5}": "title", "{TABLE0}": "vocals", "{TABLE1}": "songs", "{TABLE2}": "band", "{OP0}": "=", "{OP1}": "="}, "( date of ceremony ) that belongs to ( music festival ) , that have ( ( ( category ) equal to ( best song ) ) and ( ( result ) equal to ( awarded ) ) )": {"{VALUE0}": "best song", "{VALUE1}": "awarded", "{COLUMN0}": "date_of_ceremony", "{COLUMN1}": "music_festival", "{COLUMN2}": "category", "{COLUMN3}": "result", "{OP0}": "=", "{OP1}": "="}, "( fname ) , ( lname ) that belongs to ( faculty ) , that have ( ( ( sex ) equal to ( m ) ) and ( ( building ) equal to ( neb ) ) )": {"{VALUE0}": "m", "{VALUE1}": "neb", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "sex", "{COLUMN3}": "building", "{TABLE0}": "faculty", "{OP0}": "=", "{OP1}": "="}, "( pname of addresses ) that belongs to ( ( player ) , and ( ( tryout ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( ( decision of staff ) equal to ( 'yes' ) ) and ( ( ppos of staff ) equal to ( 'striker' ) ) )": {"{VALUE0}": "yes", "{VALUE1}": "striker", "{COLUMN0}": "pname", "{COLUMN1}": "pid", "{COLUMN2}": "decision", "{COLUMN3}": "ppos", "{TABLE0}": "player", "{TABLE1}": "tryout", "{OP0}": "=", "{OP1}": "="}, "( distinct ( name of student ) ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of student ) ) ) ) , that have ( ( ( fname of club ) equal to ( katsuhiro ) ) and ( ( lname of club ) equal to ( ueno ) ) )": {"{VALUE0}": "katsuhiro", "{VALUE1}": "ueno", "{COLUMN0}": "name", "{COLUMN1}": "authid", "{COLUMN2}": "instid", "{COLUMN3}": "fname", "{COLUMN4}": "lname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "institution", "{OP0}": "=", "{OP1}": "="}, "( type ) that belongs to ( ( vocals ) , and ( ( songs ) satisfied that ( ( songid of addresses ) equal to ( songid of staff ) ) ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of enzyme ) ) ) ) , that have ( ( ( firstname of enzyme ) equal to ( solveig ) ) and ( ( title of staff ) equal to ( a bar in amsterdam ) ) )": {"{VALUE0}": "solveig", "{VALUE1}": "a bar in amsterdam", "{COLUMN0}": "type", "{COLUMN1}": "songid", "{COLUMN2}": "bandmate", "{COLUMN3}": "id", "{COLUMN4}": "firstname", "{COLUMN5}": "title", "{TABLE0}": "vocals", "{TABLE1}": "songs", "{TABLE2}": "band", "{OP0}": "=", "{OP1}": "="}, "( train number ) , ( time ) that belongs to ( train ) , that have ( ( ( origin ) equal to ( 'chennai' ) ) and ( ( destination ) equal to ( 'guruvayur' ) ) )": {"{VALUE0}": "chennai", "{VALUE1}": "guruvayur", "{COLUMN0}": "train_number", "{COLUMN1}": "time", "{COLUMN2}": "origin", "{COLUMN3}": "destination", "{TABLE0}": "train", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( customer first name of staff ) equal to ( art ) ) and ( ( customer last name of staff ) equal to ( turcotte ) ) )": {"{VALUE0}": "art", "{VALUE1}": "turcotte", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( employees ) , and ( ( customers ) satisfied that ( ( support rep id of staff ) equal to ( id of addresses ) ) ) ) , that have ( ( ( first name of addresses ) equal to ( steve ) ) and ( ( last name of addresses ) equal to ( johnson ) ) )": {"{VALUE0}": "steve", "{VALUE1}": "johnson", "{COLUMN0}": "support_rep_id", "{COLUMN1}": "id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "employees", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( email ) , ( phone ) that belongs to ( customers ) , that have ( ( ( first name ) equal to ( astrid ) ) and ( ( last name ) equal to ( gruber ) ) )": {"{VALUE0}": "astrid", "{VALUE1}": "gruber", "{COLUMN0}": "email", "{COLUMN1}": "phone", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{TABLE0}": "customers", "{OP0}": "=", "{OP1}": "="}, "( age ) that belongs to ( person ) , that have ( ( ( job ) equal to ( 'doctor' ) ) and ( ( name ) equal to ( 'zach' ) ) )": {"{VALUE0}": "doctor", "{VALUE1}": "zach", "{COLUMN0}": "age", "{COLUMN1}": "job", "{COLUMN2}": "name", "{TABLE0}": "person", "{OP0}": "=", "{OP1}": "="}, "( problem id of addresses ) that belongs to ( ( problems ) , and ( ( product ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , that have ( ( ( product name of staff ) equal to ( voluptatem ) ) and ( ( date problem reported of addresses ) greater than ( 1995 ) ) )": {"{VALUE0}": "voluptatem", "{VALUE1}": "1995", "{COLUMN0}": "problem_id", "{COLUMN1}": "product_id", "{COLUMN2}": "product_name", "{COLUMN3}": "date_problem_reported", "{TABLE0}": "problems", "{TABLE1}": "product", "{OP0}": "=", "{OP1}": ">"}, "( date became customer ) that belongs to ( customers ) , that have ( ( ( first name ) equal to ( carole ) ) and ( ( last name ) equal to ( bernhard ) ) )": {"{VALUE0}": "carole", "{VALUE1}": "bernhard", "{COLUMN0}": "date_became_customer", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "customers", "{OP0}": "=", "{OP1}": "="}, "( the sum of ( spent ) ) that belongs to ( student , and ( visits restaurant satisfied that ( ( stuid of student ) equal to ( stuid of visits restaurant ) ) ) ) , that have ( ( ( fname of student ) equal to ( linda ) ) and ( ( lname of student ) equal to ( smith ) ) )": {"{VALUE0}": "linda", "{VALUE1}": "smith", "{COLUMN0}": "spent", "{COLUMN1}": "stuid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "student", "{TABLE1}": "visits restaurant", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "( emp fname of addresses ) , ( prof office of staff ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of enzyme ) equal to ( dept code of staff ) ) ) ) , that have ( ( ( dept name of enzyme ) equal to ( 'history' ) ) and ( ( prof high degree of staff ) equal to ( 'ph.d.' ) ) )": {"{VALUE0}": "history", "{VALUE1}": "ph.d.", "{COLUMN0}": "emp_fname", "{COLUMN1}": "prof_office", "{COLUMN2}": "emp_num", "{COLUMN3}": "dept_code", "{COLUMN4}": "dept_name", "{COLUMN5}": "prof_high_degree", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( ( fname of student ) equal to ( tracy ) ) and ( ( lname of student ) equal to ( kim ) ) )": {"{VALUE0}": "tracy", "{VALUE1}": "kim", "{COLUMN0}": "clubid", "{COLUMN1}": "stuid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( fname of student ) , ( lname of student ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( ( clubname of club ) equal to ( bootup baltimore ) ) and ( ( position of member of club ) equal to ( president ) ) )": {"{VALUE0}": "bootup baltimore", "{VALUE1}": "president", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "clubid", "{COLUMN3}": "stuid", "{COLUMN4}": "clubname", "{COLUMN5}": "position", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( ( billing city ) equal to ( chicago ) ) and ( ( billing state ) equal to ( il ) ) )": {"{VALUE0}": "chicago", "{VALUE1}": "il", "{COLUMN0}": "billing_city", "{COLUMN1}": "billing_state", "{TABLE0}": "invoices", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( customers cards ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( ( customer first name of staff ) equal to ( art ) ) and ( ( customer last name of staff ) equal to ( turcotte ) ) )": {"{VALUE0}": "art", "{VALUE1}": "turcotte", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "customers cards", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of addresses ) equal to ( gell ) ) and ( ( lastname of addresses ) equal to ( tami ) ) )": {"{VALUE0}": "gell", "{VALUE1}": "tami", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{COLUMN2}": "firstname", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "="}, "( customer id ) , ( customer name ) that belongs to ( customers ) , that have ( ( ( customer address ) like ( %wy% ) ) and ( ( payment method code ) not equal to ( credit card ) ) )": {"{VALUE0}": "wy", "{VALUE1}": "credit card", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_name", "{COLUMN2}": "customer_address", "{COLUMN3}": "payment_method_code", "{TABLE0}": "customers", "{OP0}": "like", "{OP1}": "!="}, "( the number of ( all items ) ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) ) , that have ( ( ( fname of club ) equal to ( atsushi ) ) and ( ( lname of club ) equal to ( ohori ) ) )": {"{VALUE0}": "atsushi", "{VALUE1}": "ohori", "{COLUMN0}": "authid", "{COLUMN1}": "paperid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( sex ) that belongs to ( student ) , that have ( ( ( fname ) equal to ( linda ) ) and ( ( lname ) equal to ( smith ) ) )": {"{VALUE0}": "linda", "{VALUE1}": "smith", "{COLUMN0}": "sex", "{COLUMN1}": "fname", "{COLUMN2}": "lname", "{TABLE0}": "student", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( ( fname of student ) equal to ( linda ) ) and ( ( lname of student ) equal to ( smith ) ) )": {"{VALUE0}": "linda", "{VALUE1}": "smith", "{COLUMN0}": "clubid", "{COLUMN1}": "stuid", "{COLUMN2}": "fname", "{COLUMN3}": "lname", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the sum of ( salary of addresses ) ) that belongs to ( ( salary ) , and ( ( team ) satisfied that ( ( team id of addresses ) equal to ( team id br of staff ) ) ) ) , that have ( ( ( name of staff ) equal to ( 'boston red stockings' ) ) and ( ( year of addresses ) equal to ( 2010 ) ) )": {"{VALUE0}": "boston red stockings", "{VALUE9}": "2010", "{COLUMN0}": "salary", "{COLUMN1}": "team_id", "{COLUMN2}": "team_id_br", "{COLUMN3}": "name", "{COLUMN4}": "year", "{TABLE0}": "team", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "( degrees ) that belongs to ( ( campuses ) , and ( ( degrees ) satisfied that ( ( id of club ) equal to ( campus of member of club ) ) ) ) , that have ( ( ( campus of club ) equal to ( san jose state university ) ) and ( ( year of member of club ) equal to ( 2000 ) ) )": {"{VALUE0}": "san jose state university", "{VALUE8}": "2000", "{COLUMN0}": "degrees", "{COLUMN1}": "id", "{COLUMN2}": "campus", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{OP1}": "="}, "( distinct ( name of trip ) ) that belongs to ( ( personfriend ) , and ( ( person ) satisfied that ( ( name of addresses ) equal to ( name of staff ) ) ) , and ( ( personfriend ) satisfied that ( ( friend of addresses ) equal to ( name of enzyme ) ) ) , and ( ( personfriend ) satisfied that ( ( friend of enzyme ) equal to ( name of trip ) ) ) ) , that have ( ( ( name of staff ) equal to ( 'alice' ) ) and ( ( name of trip ) not equal to ( 'alice' ) ) )": {"{VALUE0}": "alice", "{VALUE1}": "alice", "{COLUMN0}": "name", "{COLUMN1}": "friend", "{TABLE0}": "person friend", "{TABLE1}": "person", "{OP0}": "=", "{OP1}": "!="}, "( the number of ( all items ) ) that belongs to ( ( home game ) , and ( ( park ) satisfied that ( ( park id of addresses ) equal to ( park id of staff ) ) ) ) , that have ( ( ( year of addresses ) equal to ( 1907 ) ) and ( ( park name of staff ) equal to ( 'columbia park' ) ) )": {"{VALUE0}": "columbia park", "{VALUE6}": "1907", "{COLUMN0}": "park", "{COLUMN1}": "park_id", "{COLUMN2}": "year", "{COLUMN3}": "park_name", "{TABLE0}": "home game", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( date left staff ) that belongs to ( staff ) , that have ( ( ( first name ) equal to ( janessa ) ) and ( ( last name ) equal to ( sawayn ) ) )": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{COLUMN0}": "date_left_staff", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "staff", "{OP0}": "=", "{OP1}": "="}, "( the sum of ( hoursperweek ) ) , ( the sum of ( gamesplayed ) ) that belongs to ( ( sportsinfo ) , and ( ( student ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( ( fname of staff ) equal to ( david ) ) and ( ( lname of staff ) equal to ( shieber ) ) )": {"{VALUE0}": "david", "{VALUE1}": "shieber", "{COLUMN0}": "hoursperweek", "{COLUMN1}": "gamesplayed", "{COLUMN2}": "stuid", "{COLUMN3}": "fname", "{COLUMN4}": "lname", "{TABLE0}": "sports info", "{TABLE1}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum", "{AGG1}": "sum"}, "( the maximum of ( fastestlapspeed of staff ) ) that belongs to ( ( races ) , and ( ( results ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) ) , that have ( ( ( year of addresses ) equal to ( 2008 ) ) and ( ( name of addresses ) equal to ( monaco grand prix ) ) )": {"{VALUE0}": "monaco grand prix", "{VALUE7}": "2008", "{COLUMN0}": "fastestlapspeed", "{COLUMN1}": "raceid", "{COLUMN2}": "year", "{COLUMN3}": "name", "{TABLE0}": "drivers", "{TABLE1}": "driver standings", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "max"}, "( activity name of enzyme ) that belongs to ( ( faculty ) , and ( ( faculty participates in ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) , and ( ( activity ) satisfied that ( ( actid of enzyme ) equal to ( actid of staff ) ) ) ) , that have ( ( ( fname of addresses ) equal to ( mark ) ) and ( ( lname of addresses ) equal to ( giuliano ) ) )": {"{VALUE0}": "mark", "{VALUE1}": "giuliano", "{COLUMN0}": "activity_name", "{COLUMN1}": "facid", "{COLUMN2}": "actid", "{COLUMN3}": "fname", "{COLUMN4}": "lname", "{TABLE0}": "faculty", "{TABLE1}": "faculty participates in", "{TABLE2}": "activity", "{OP0}": "=", "{OP1}": "="}, "( country ) that belongs to ( customers ) , that have ( ( ( first name ) equal to ( roberto ) ) and ( ( last name ) equal to ( almeida ) ) )": {"{VALUE0}": "roberto", "{VALUE1}": "almeida", "{COLUMN0}": "country", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{TABLE0}": "customers", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) , and ( ( dorm ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of staff ) ) ) ) , that have ( ( ( dorm name of enzyme ) equal to ( 'smith hall' ) ) and ( ( sex of addresses ) equal to ( 'f' ) ) )": {"{VALUE0}": "smith hall", "{VALUE1}": "f", "{COLUMN0}": "stuid", "{COLUMN1}": "dormid", "{COLUMN2}": "dorm_name", "{COLUMN3}": "sex", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( faculty ) , that have ( ( ( rank ) equal to ( professor ) ) and ( ( building ) equal to ( neb ) ) )": {"{VALUE0}": "professor", "{VALUE1}": "neb", "{COLUMN0}": "rank", "{COLUMN1}": "building", "{TABLE0}": "faculty", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( gname ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) , and ( ( student ) satisfied that ( ( stuid of enzyme ) equal to ( stuid of addresses ) ) ) ) , that have ( ( ( lname of enzyme ) equal to ( smith ) ) and ( ( fname of enzyme ) equal to ( linda ) ) )": {"{VALUE0}": "smith", "{VALUE1}": "linda", "{COLUMN0}": "gname", "{COLUMN1}": "gameid", "{COLUMN2}": "stuid", "{COLUMN3}": "lname", "{COLUMN4}": "fname", "{TABLE0}": "plays games", "{TABLE1}": "video games", "{TABLE2}": "student", "{OP0}": "=", "{OP1}": "="}, "( firstname of addresses ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of staff ) equal to ( marrotte ) ) and ( ( lastname of staff ) equal to ( kirk ) ) )": {"{VALUE0}": "marrotte", "{VALUE1}": "kirk", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "="}, "( name of addresses ) that belongs to ( ( tracks ) , and ( ( invoice lines ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( invoices ) satisfied that ( ( id of enzyme ) equal to ( invoice id of staff ) ) ) , and ( ( customers ) satisfied that ( ( id of trip ) equal to ( customer id of enzyme ) ) ) ) , that have ( ( ( first name of trip ) equal to ( daan ) ) and ( ( last name of trip ) equal to ( peeters ) ) )": {"{VALUE0}": "daan", "{VALUE1}": "peeters", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "invoice_id", "{COLUMN4}": "customer_id", "{COLUMN5}": "first_name", "{COLUMN6}": "last_name", "{TABLE0}": "tracks", "{TABLE1}": "invoice lines", "{TABLE2}": "invoices", "{TABLE3}": "customers", "{OP0}": "=", "{OP1}": "="}, "( campus ) that belongs to ( campuses ) , that have ( ( ( county ) equal to ( los angeles ) ) and ( ( year ) greater than ( 1950 ) ) )": {"{VALUE0}": "los angeles", "{VALUE2}": "1950", "{COLUMN0}": "campus", "{COLUMN1}": "county", "{COLUMN2}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{OP1}": ">"}, "( cname ) that belongs to ( tryout ) , that have ( ( ( decision ) equal to ( 'yes' ) ) and ( ( ppos ) equal to ( 'goalie' ) ) )": {"{VALUE0}": "yes", "{VALUE1}": "goalie", "{COLUMN0}": "cname", "{COLUMN1}": "decision", "{COLUMN2}": "ppos", "{TABLE0}": "tryout", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( faculty ) , that have ( ( ( sex ) equal to ( 'f' ) ) and ( ( rank ) equal to ( professor ) ) )": {"{VALUE0}": "professor", "{VALUE1}": "f", "{COLUMN0}": "sex", "{COLUMN1}": "rank", "{TABLE0}": "faculty", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( amount settled ) , ( amount claimed ) that belongs to ( claims ) , ordered by ( ( amount claimed ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "amount_settled", "{COLUMN1}": "amount_claimed", "{TABLE0}": "claims", "{SC0}": "desc"}, "( venue ) , ( name ) that belongs to ( event ) , ordered by ( ( event attendance ) in descending order ) , limited to the top ( 2 )": {"{VALUE0}": "2", "{COLUMN0}": "venue", "{COLUMN1}": "name", "{COLUMN2}": "event_attendance", "{TABLE0}": "event", "{SC0}": "desc"}, "( name ) that belongs to ( program ) , ordered by ( ( launch ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "launch", "{TABLE0}": "program", "{SC0}": "desc"}, "( distinct ( range ) ) that belongs to ( mountain ) , ordered by ( ( prominence ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "range", "{COLUMN1}": "prominence", "{TABLE0}": "mountain", "{SC0}": "desc"}, "( dept name ) , ( building ) that belongs to ( department ) , ordered by ( ( budget ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "building", "{COLUMN2}": "budget", "{TABLE0}": "department", "{SC0}": "desc"}, "( name of staff ) that belongs to ( ( advisor ) , and ( ( instructor ) satisfied that ( ( i id of addresses ) equal to ( id of staff ) ) ) , and ( ( student ) satisfied that ( ( s id of addresses ) equal to ( id of enzyme ) ) ) ) , ordered by ( ( tot cred of enzyme ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "i_id", "{COLUMN2}": "id", "{COLUMN3}": "s_id", "{COLUMN4}": "tot_cred", "{TABLE0}": "advisor", "{TABLE1}": "instructor", "{TABLE2}": "student", "{SC0}": "desc"}, "( name ) that belongs to ( branch ) , ordered by ( ( membership amount ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "membership_amount", "{TABLE0}": "branch", "{SC0}": "desc"}, "( duration ) that belongs to ( actor ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "duration", "{COLUMN1}": "age", "{TABLE0}": "actor", "{SC0}": "desc"}, "( famous release date ) that belongs to ( artist ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "famous_release_date", "{COLUMN1}": "artist", "{COLUMN2}": "age", "{SC0}": "desc"}, "( name ) , ( furniture id ) that belongs to ( furniture ) , ordered by ( ( market rate ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "furniture_id", "{COLUMN2}": "market_rate", "{TABLE0}": "furniture", "{SC0}": "desc"}, "( flno ) that belongs to ( flight ) , ordered by ( ( distance ) in ascending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "flno", "{COLUMN1}": "distance", "{TABLE0}": "flight", "{SC0}": "asc"}, "( cell mobile number of staff ) that belongs to ( ( student addresses ) , and ( ( students ) satisfied that ( ( student id of addresses ) equal to ( student id of staff ) ) ) ) , ordered by ( ( monthly rental of addresses ) in ascending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "cell_mobile_number", "{COLUMN1}": "student_id", "{COLUMN2}": "monthly_rental", "{TABLE0}": "student addresses", "{TABLE1}": "students", "{SC0}": "asc"}, "( song ) that belongs to ( volume ) , ordered by ( ( weeks on top ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "song", "{COLUMN1}": "volume", "{COLUMN2}": "weeks_on_top", "{SC0}": "desc"}, "( address id of staff ) , ( zip postcode of addresses ) that belongs to ( ( addresses ) , and ( ( student addresses ) satisfied that ( ( address id of addresses ) equal to ( address id of staff ) ) ) ) , ordered by ( ( monthly rental ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "address_id", "{COLUMN1}": "zip_postcode", "{COLUMN2}": "monthly_rental", "{TABLE0}": "addresses", "{TABLE1}": "student addresses", "{SC0}": "desc"}, "( county name ) that belongs to ( county ) , ordered by ( ( population ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "county_name", "{COLUMN1}": "population", "{TABLE0}": "county", "{SC0}": "desc"}, "( name ) that belongs to ( mountain ) , ordered by ( ( height ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "mountain", "{SC0}": "desc"}, "( name ) that belongs to ( wrestler ) , ordered by ( ( days held ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "days_held", "{TABLE0}": "wrestler", "{SC0}": "asc"}, "( name of addresses ) , ( population of addresses ) that belongs to ( ( country ) , and ( ( roller coaster ) satisfied that ( ( country id of addresses ) equal to ( country id of staff ) ) ) ) , ordered by ( ( height of staff ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "population", "{COLUMN2}": "country_id", "{COLUMN3}": "height", "{TABLE0}": "country", "{TABLE1}": "roller coaster", "{SC0}": "desc"}, "( headquarters ) that belongs to ( company ) , ordered by ( ( sales in billion ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "headquarters", "{COLUMN1}": "sales_in_billion", "{TABLE0}": "company", "{SC0}": "desc"}, "( part id ) , ( chargeable amount ) that belongs to ( parts ) , ordered by ( ( chargeable amount ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "part_id", "{COLUMN1}": "chargeable_amount", "{TABLE0}": "parts", "{SC0}": "asc"}, "( publisher ) that belongs to ( publication ) , ordered by ( ( price ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "publisher", "{COLUMN1}": "price", "{TABLE0}": "publication", "{SC0}": "desc"}, "( distinct ( player name of addresses ) ) , ( birthday of addresses ) that belongs to ( ( player ) , and ( ( player attributes ) satisfied that ( ( player api id of addresses ) equal to ( player api id of staff ) ) ) ) , ordered by ( ( potential ) in descending order ) , limited to the top ( 5 )": {"{VALUE6}": "5", "{COLUMN0}": "player_name", "{COLUMN1}": "birthday", "{COLUMN2}": "player_api_id", "{COLUMN3}": "potential", "{TABLE0}": "player", "{TABLE1}": "player attributes", "{SC0}": "desc"}, "( location ) that belongs to ( perpetrator ) , ordered by ( ( killed ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "location", "{COLUMN1}": "killed", "{TABLE0}": "perpetrator", "{SC0}": "desc"}, "( name of addresses ) that belongs to ( ( physician ) , and ( ( prescribes ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) ) , ordered by ( ( dose of staff ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "physician", "{COLUMN2}": "employeeid", "{COLUMN3}": "dose", "{TABLE0}": "prescribes", "{SC0}": "desc"}, "( name ) that belongs to ( artist ) , ordered by ( ( year join ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "year_join", "{TABLE0}": "artist", "{SC0}": "desc"}, "( problem log id ) that belongs to ( problem log ) , ordered by ( ( log entry date ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "problem_log_id", "{COLUMN1}": "log_entry_date", "{TABLE0}": "problem log", "{SC0}": "desc"}, "( name of addresses ) that belongs to ( ( people ) , and ( ( perpetrator ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( weight of addresses ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "weight", "{TABLE0}": "people", "{TABLE1}": "perpetrator", "{SC0}": "desc"}, "( location ) that belongs to ( party ) , ordered by ( ( number of hosts ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "location", "{COLUMN1}": "number_of_hosts", "{TABLE0}": "party", "{SC0}": "desc"}, "( support rate ) that belongs to ( candidate ) , ordered by ( ( support rate ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "support_rate", "{TABLE0}": "candidate", "{SC0}": "desc"}, "( shop name ) that belongs to ( shop ) , ordered by ( ( open year ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "shop_name", "{COLUMN1}": "open_year", "{TABLE0}": "shop", "{SC0}": "desc"}, "all items that belongs to ( airport ) , ordered by ( ( international passengers ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "international_passengers", "{TABLE0}": "airport", "{SC0}": "desc"}, "( name ) that belongs to ( instructor ) , ordered by ( ( salary ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "salary", "{TABLE0}": "instructor", "{SC0}": "desc"}, "( amount ) that belongs to ( payment ) , ordered by ( ( amount ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "amount", "{TABLE0}": "payment", "{SC0}": "desc"}, "( date ) that belongs to ( performance ) , ordered by ( ( attendance ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "date", "{COLUMN1}": "attendance", "{TABLE0}": "performance", "{SC0}": "desc"}, "( team ) that belongs to ( player ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "team", "{COLUMN1}": "player", "{COLUMN2}": "age", "{SC0}": "desc"}, "( resname ) , ( rating ) that belongs to ( restaurant ) , ordered by ( ( rating ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "resname", "{COLUMN1}": "rating", "{TABLE0}": "restaurant", "{SC0}": "desc"}, "( name ) , ( price ) that belongs to ( products ) , ordered by ( ( price ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "price", "{TABLE0}": "products", "{SC0}": "asc"}, "( park ) that belongs to ( roller coaster ) , ordered by ( ( speed ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "park", "{COLUMN1}": "speed", "{TABLE0}": "roller coaster", "{SC0}": "desc"}, "( name of staff ) that belongs to ( ( entrepreneur ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( weight of staff ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "weight", "{TABLE0}": "entrepreneur", "{TABLE1}": "people", "{SC0}": "desc"}, "( founded ) that belongs to ( university ) , ordered by ( ( enrollment ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "founded", "{COLUMN1}": "enrollment", "{TABLE0}": "university", "{SC0}": "desc"}, "( starting year ) that belongs to ( technician ) , ordered by ( ( age ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "starting_year", "{COLUMN1}": "age", "{TABLE0}": "technician", "{SC0}": "desc"}, "( player name ) that belongs to ( player ) , ordered by ( ( votes ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "player_name", "{COLUMN1}": "votes", "{TABLE0}": "player", "{SC0}": "desc"}, "( cust name ) , ( acc type ) , ( acc bal ) that belongs to ( customer ) , ordered by ( ( credit score ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "cust_name", "{COLUMN1}": "acc_type", "{COLUMN2}": "acc_bal", "{COLUMN3}": "credit_score", "{TABLE0}": "customer", "{SC0}": "desc"}, "( customer name of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , ordered by ( ( order date of member of club ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_date", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{SC0}": "desc"}, "( open year ) , ( name ) that belongs to ( manufacturer ) , ordered by ( ( num of shops ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "open_year", "{COLUMN1}": "name", "{COLUMN2}": "num_of_shops", "{TABLE0}": "manufacturer", "{SC0}": "desc"}, "( date claim made ) that belongs to ( claims ) , ordered by ( ( date claim made ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "date_claim_made", "{TABLE0}": "claims", "{SC0}": "asc"}, "( date to ) that belongs to ( project staff ) , ordered by ( ( date to ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "date_to", "{TABLE0}": "project staff", "{SC0}": "desc"}, "( party ) that belongs to ( people ) , ordered by ( ( age ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "party", "{COLUMN1}": "age", "{TABLE0}": "people", "{SC0}": "asc"}, "( song name ) , ( releasedate ) that belongs to ( song ) , ordered by ( ( releasedate ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "song_name", "{COLUMN1}": "releasedate", "{TABLE0}": "song", "{SC0}": "desc"}, "( weight ) that belongs to ( people ) , ordered by ( ( height ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "weight", "{COLUMN1}": "height", "{TABLE0}": "people", "{SC0}": "asc"}, "( name ) that belongs to ( races ) , ordered by ( ( date ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "date", "{TABLE0}": "drivers", "{SC0}": "desc"}, "( district name ) that belongs to ( district ) , ordered by ( ( city population ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "district_name", "{COLUMN1}": "city_population", "{TABLE0}": "district", "{SC0}": "desc"}, "( payment date ) that belongs to ( payment ) , ordered by ( ( payment date ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "payment_date", "{TABLE0}": "payment", "{SC0}": "asc"}, "( document name ) , ( access count ) that belongs to ( documents ) , ordered by ( ( access count ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "document_name", "{COLUMN1}": "access_count", "{TABLE0}": "documents", "{SC0}": "desc"}, "( host city ) that belongs to ( hosting city ) , ordered by ( ( year ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "host_city", "{COLUMN1}": "year", "{TABLE0}": "hosting city", "{SC0}": "desc"}, "( catalog entry name ) that belongs to ( catalog contents ) , ordered by ( ( capacity ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "catalog_entry_name", "{COLUMN1}": "capacity", "{TABLE0}": "catalog contents", "{SC0}": "asc"}, "( speed ) that belongs to ( roller coaster ) , ordered by ( ( length ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "speed", "{COLUMN1}": "length", "{TABLE0}": "roller coaster", "{SC0}": "desc"}, "( gdp ) that belongs to ( city ) , ordered by ( ( regional population ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "gdp", "{COLUMN1}": "city", "{COLUMN2}": "regional_population", "{SC0}": "desc"}, "( apt number ) that belongs to ( apartments ) , ordered by ( ( bedroom count ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "apt_number", "{COLUMN1}": "bedroom_count", "{TABLE0}": "apartments", "{SC0}": "desc"}, "( roomid ) , ( roomname ) that belongs to ( rooms ) , ordered by ( ( baseprice ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "roomid", "{COLUMN1}": "roomname", "{COLUMN2}": "baseprice", "{TABLE0}": "rooms", "{SC0}": "desc"}, "( f id ) that belongs to ( files ) , ordered by ( ( duration ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "f_id", "{COLUMN1}": "duration", "{TABLE0}": "files", "{SC0}": "desc"}, "( manufacturer id of club ) , ( num of shops of club ) that belongs to ( ( manufacturer ) , and ( ( furniture manufacte ) satisfied that ( ( manufacturer id of club ) equal to ( manufacturer id of member of club ) ) ) ) , ordered by ( ( price in dollar of member of club ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "manufacturer_id", "{COLUMN1}": "num_of_shops", "{COLUMN2}": "price_in_dollar", "{TABLE0}": "manufacturer", "{TABLE1}": "furniture manufacte", "{SC0}": "desc"}, "( roomname ) , ( baseprice ) that belongs to ( rooms ) , ordered by ( ( baseprice ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms", "{SC0}": "asc"}, "( first name of staff ) , ( last name of staff ) that belongs to ( ( film actor ) , and ( ( actor ) satisfied that ( ( actor id of addresses ) equal to ( actor id of staff ) ) ) ) , grouped by ( actor id of staff ) , that have ( ( the number of ( all items ) ) greater than ( 30 ) )": {"{VALUE7}": "30", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "actor_id", "{TABLE0}": "film actor", "{TABLE1}": "actor", "{OP0}": ">", "{AGG0}": "count"}, "( title of addresses ) , ( credits of addresses ) , ( dept name of addresses ) that belongs to ( ( course ) , and ( ( prereq ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , grouped by ( course id of staff ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "credits", "{COLUMN2}": "dept_name", "{COLUMN3}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{OP0}": ">", "{AGG0}": "count"}, "( location of staff ) that belongs to ( ( player ) , and ( ( school ) satisfied that ( ( school id of addresses ) equal to ( school id of staff ) ) ) ) , grouped by ( school id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "location", "{COLUMN1}": "player", "{COLUMN2}": "school", "{COLUMN3}": "school_id", "{OP0}": ">", "{AGG0}": "count"}, "( competition type ) that belongs to ( competition ) , grouped by ( competition type ) , that have ( ( the number of ( all items ) ) less than or equal to ( 5 ) )": {"{VALUE0}": "5", "{COLUMN0}": "competition_type", "{TABLE0}": "competition", "{OP0}": "<=", "{AGG0}": "count"}, "( product id of club ) , ( color description of member of club ) that belongs to ( ( products ) , and ( ( ref colors ) satisfied that ( ( color code of club ) equal to ( color code of member of club ) ) ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of student ) ) ) ) , grouped by ( product id of club ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE1}": "2", "{COLUMN0}": "product_id", "{COLUMN1}": "color_description", "{COLUMN2}": "color_code", "{TABLE0}": "products", "{TABLE1}": "reference colors", "{TABLE2}": "product characteristics", "{OP0}": ">=", "{AGG0}": "count"}, "( carrier of staff ) that belongs to ( ( stock ) , and ( ( device ) satisfied that ( ( device id of addresses ) equal to ( device id of staff ) ) ) ) , grouped by ( device id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "carrier", "{COLUMN1}": "device", "{COLUMN2}": "device_id", "{TABLE0}": "stock", "{OP0}": ">", "{AGG0}": "count"}, "( membership card ) that belongs to ( member ) , grouped by ( membership card ) , that have ( ( the number of ( all items ) ) greater than ( 5 ) )": {"{VALUE0}": "5", "{COLUMN0}": "membership_card", "{TABLE0}": "member", "{OP0}": ">", "{AGG0}": "count"}, "( title of addresses ) that belongs to ( ( course ) , and ( ( prereq ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , grouped by ( course id of staff ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )": {"{VALUE2}": "2", "{COLUMN0}": "title", "{COLUMN1}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{OP0}": "=", "{AGG0}": "count"}, "( team ) that belongs to ( elimination ) , grouped by ( team ) , that have ( ( the number of ( all items ) ) greater than ( 3 ) )": {"{VALUE0}": "3", "{COLUMN0}": "team", "{TABLE0}": "elimination", "{OP0}": ">", "{AGG0}": "count"}, "( name of addresses ) , ( email of addresses ) that belongs to ( ( user profiles ) , and ( ( follows ) satisfied that ( ( uid of addresses ) equal to ( f1 of staff ) ) ) ) , grouped by ( f1 of staff ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "email", "{COLUMN2}": "uid", "{COLUMN3}": "f1", "{TABLE0}": "user profiles", "{TABLE1}": "follows", "{OP0}": ">", "{AGG0}": "count"}, "( characteristic name of student ) that belongs to ( ( products ) , and ( ( product characteristics ) satisfied that ( ( product id of club ) equal to ( product id of member of club ) ) ) , and ( ( characteristics ) satisfied that ( ( characteristic id of member of club ) equal to ( characteristic id of student ) ) ) ) , grouped by ( characteristic name of student ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE2}": "2", "{COLUMN0}": "characteristic_name", "{COLUMN1}": "product_id", "{COLUMN2}": "characteristic_id", "{TABLE0}": "products", "{TABLE1}": "product characteristics", "{TABLE2}": "characteristics", "{OP0}": ">=", "{AGG0}": "count"}, "( document id ) , ( the number of ( all items ) ) that belongs to ( draft copies ) , grouped by ( document id ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "document_id", "{TABLE0}": "draft copies", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "( director ) that belongs to ( movie ) , grouped by ( director ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "director", "{TABLE0}": "movie", "{OP0}": "=", "{AGG0}": "count"}, "( city ) that belongs to ( airports ) , grouped by ( city ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "city", "{TABLE0}": "airports", "{OP0}": "=", "{AGG0}": "count"}, "( customer first name of staff ) , ( customer id of addresses ) that belongs to ( ( accounts ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "customer_first_name", "{COLUMN1}": "customer_id", "{TABLE0}": "accounts", "{TABLE1}": "customers", "{OP0}": ">=", "{AGG0}": "count"}, "( writer ) that belongs to ( book ) , grouped by ( writer ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "writer", "{TABLE0}": "book", "{OP0}": ">", "{AGG0}": "count"}, "( title ) that belongs to ( course ) , grouped by ( title ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "title", "{TABLE0}": "course", "{OP0}": ">", "{AGG0}": "count"}, "( product type code ) that belongs to ( products ) , grouped by ( product type code ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "product_type_code", "{TABLE0}": "products", "{OP0}": ">=", "{AGG0}": "count"}, "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{TABLE0}": "customer", "{TABLE1}": "loan", "{OP0}": ">", "{AGG0}": "count"}, "( nationality ) that belongs to ( ship ) , grouped by ( nationality ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "nationality", "{TABLE0}": "ship", "{OP0}": ">", "{AGG0}": "count"}, "( location code ) that belongs to ( document locations ) , grouped by ( location code ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 3 ) )": {"{VALUE0}": "3", "{COLUMN0}": "location_code", "{TABLE0}": "document locations", "{OP0}": ">=", "{AGG0}": "count"}, "( location ) that belongs to ( performance ) , grouped by ( location ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "location", "{TABLE0}": "performance", "{OP0}": ">=", "{AGG0}": "count"}, "( customer name of staff ) that belongs to ( ( orders ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of staff ) , that have ( ( the number of ( all items ) ) less than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{TABLE0}": "orders", "{TABLE1}": "customers", "{OP0}": "<=", "{AGG0}": "count"}, "( project id ) that belongs to ( documents ) , grouped by ( project id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "project_id", "{TABLE0}": "documents", "{OP0}": ">=", "{AGG0}": "count"}, "( id of addresses ) , ( name of addresses ) that belongs to ( ( web client accelerator ) , and ( ( accelerator compatible browser ) satisfied that ( ( accelerator id of staff ) equal to ( id of addresses ) ) ) ) , grouped by ( id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE3}": "2", "{COLUMN0}": "id", "{COLUMN1}": "name", "{COLUMN2}": "accelerator_id", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{OP0}": ">=", "{AGG0}": "count"}, "( country ) that belongs to ( member ) , grouped by ( country ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "country", "{TABLE0}": "member", "{OP0}": ">", "{AGG0}": "count"}, "( department id ) , ( the sum of ( salary ) ) that belongs to ( employees ) , grouped by ( department id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "department_id", "{COLUMN1}": "salary", "{TABLE0}": "employees", "{OP0}": ">=", "{AGG0}": "sum", "{AGG1}": "count"}, "( course description of addresses ) , ( course name of addresses ) that belongs to ( ( courses ) , and ( ( student course enrolment ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , grouped by ( course name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE3}": "2", "{COLUMN0}": "course_description", "{COLUMN1}": "course_name", "{COLUMN2}": "course_id", "{TABLE0}": "courses", "{TABLE1}": "student course enrolment", "{OP0}": ">", "{AGG0}": "count"}, "( event name ) that belongs to ( party events ) , grouped by ( event name ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "event_name", "{TABLE0}": "party events", "{OP0}": ">", "{AGG0}": "count"}, "( investor ) that belongs to ( entrepreneur ) , grouped by ( investor ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "investor", "{TABLE0}": "entrepreneur", "{OP0}": ">=", "{AGG0}": "count"}, "( name ) that belongs to ( storm ), and except that ( ( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ))": {"{VALUE2}": "2", "{COLUMN0}": "name", "{COLUMN1}": "storm_id", "{TABLE0}": "storm", "{TABLE1}": "affected region", "{OP0}": ">=", "{AGG0}": "count"}, "( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( match ) satisfied that ( ( aircraft id of addresses ) equal to ( winning aircraft of staff ) ) ) ) , grouped by ( winning aircraft of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE2}": "2", "{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "winning_aircraft", "{TABLE0}": "match", "{OP0}": ">=", "{AGG0}": "count"}, "( pilot name of staff ) , ( the number of ( all items ) ) that belongs to ( ( pilot record ) , and ( ( pilot ) satisfied that ( ( pilot id of addresses ) equal to ( pilot id of staff ) ) ) ) , grouped by ( pilot name of staff ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "pilot_name", "{COLUMN1}": "pilot_id", "{TABLE0}": "pilot record", "{TABLE1}": "pilot", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "count"}, "( headquarters ) that belongs to ( company ) , grouped by ( headquarters ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "headquarters", "{TABLE0}": "company", "{OP0}": ">=", "{AGG0}": "count"}, "( customer id of addresses ) , ( customer first name of staff ) , ( customer last name of staff ) that belongs to ( ( customers cards ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE1}": "2", "{COLUMN0}": "customer_id", "{COLUMN1}": "customer_first_name", "{COLUMN2}": "customer_last_name", "{TABLE0}": "customers cards", "{TABLE1}": "customers", "{OP0}": ">=", "{AGG0}": "count"}, "( advisor ) that belongs to ( student ) , grouped by ( advisor ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "advisor", "{TABLE0}": "student", "{OP0}": ">=", "{AGG0}": "count"}, "( name of addresses ) that belongs to ( ( country ) , and ( ( roller coaster ) satisfied that ( ( country id of addresses ) equal to ( country id of staff ) ) ) ) , grouped by ( name of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "country_id", "{TABLE0}": "country", "{TABLE1}": "roller coaster", "{OP0}": ">", "{AGG0}": "count"}, "( product name of addresses ) that belongs to ( ( products ) , and ( ( products in events ) satisfied that ( ( product id of addresses ) equal to ( product id of staff ) ) ) ) , grouped by ( product name of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE2}": "2", "{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "products in events", "{OP0}": ">=", "{AGG0}": "count"}, "( driverid of addresses ) , ( the number of ( all items ) ) that belongs to ( ( drivers ) , and ( ( results ) satisfied that ( ( driverid of addresses ) equal to ( driverid of staff ) ) ) , and ( ( races ) satisfied that ( ( raceid of staff ) equal to ( raceid of enzyme ) ) ) ) , grouped by ( driverid of addresses ) , that have ( ( the number of ( all items ) ) less than or equal to ( 30 ) )": {"{VALUE9}": "30", "{COLUMN0}": "driverid", "{COLUMN1}": "raceid", "{TABLE0}": "status", "{TABLE1}": "driver standings", "{TABLE2}": "drivers", "{OP0}": "<=", "{AGG0}": "count", "{AGG1}": "count"}, "( county name of addresses ) that belongs to ( ( county ) , and ( ( election ) satisfied that ( ( county id of addresses ) equal to ( district of staff ) ) ) ) , grouped by ( county id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE2}": "2", "{COLUMN0}": "county_name", "{COLUMN1}": "county_id", "{COLUMN2}": "district", "{TABLE0}": "county", "{TABLE1}": "election", "{OP0}": ">=", "{AGG0}": "count"}, "( date of latest revision ) that belongs to ( catalogs ) , grouped by ( date of latest revision ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "date_of_latest_revision", "{TABLE0}": "catalogs", "{OP0}": ">", "{AGG0}": "count"}, "( emp fname of staff ) that belongs to ( ( class ) , and ( ( employee ) satisfied that ( ( prof num of addresses ) equal to ( emp num of staff ) ) ) ) , grouped by ( prof num of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "emp_fname", "{COLUMN1}": "prof_num", "{COLUMN2}": "emp_num", "{TABLE0}": "class", "{TABLE1}": "employee", "{OP0}": ">", "{AGG0}": "count"}, "( stuid ) that belongs to ( has allergy ) , grouped by ( stuid ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "2", "{COLUMN0}": "stuid", "{TABLE0}": "has allergy", "{OP0}": ">=", "{AGG0}": "count"}, "( industry ) that belongs to ( companies ) , that have ( ( headquarters ) equal to ( usa ) ), and intersect with ( ( industry ) that belongs to ( companies ) , that have ( ( headquarters ) equal to ( china ) ))": {"{VALUE0}": "usa", "{VALUE1}": "china", "{COLUMN0}": "industry", "{COLUMN1}": "headquarters", "{TABLE0}": "companies", "{OP0}": "=", "{OP1}": "="}, "( type ) that belongs to ( ship ) , that have ( ( flag ) equal to ( 'panama' ) ), and intersect with ( ( type ) that belongs to ( ship ) , that have ( ( flag ) equal to ( 'malta' ) ))": {"{VALUE0}": "panama", "{VALUE1}": "malta", "{COLUMN0}": "type", "{COLUMN1}": "flag", "{TABLE0}": "ship", "{OP0}": "=", "{OP1}": "="}, "( title of addresses ) that belongs to ( ( album ) , and ( ( track ) satisfied that ( ( albumid of addresses ) equal to ( albumid of staff ) ) ) , and ( ( genre ) satisfied that ( ( genreid of staff ) equal to ( genreid of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'reggae' ) ), and intersect with ( ( title of addresses ) that belongs to ( ( album ) , and ( ( track ) satisfied that ( ( albumid of addresses ) equal to ( albumid of staff ) ) ) , and ( ( genre ) satisfied that ( ( genreid of staff ) equal to ( genreid of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'rock' ) ))": {"{VALUE0}": "reggae", "{VALUE1}": "rock", "{COLUMN0}": "title", "{COLUMN1}": "albumid", "{COLUMN2}": "genreid", "{COLUMN3}": "name", "{TABLE0}": "album", "{TABLE1}": "track", "{TABLE2}": "genre", "{OP0}": "=", "{OP1}": "="}, "( location ) that belongs to ( shop ) , that have ( ( open year ) greater than ( 2012 ) ), and intersect with ( ( location ) that belongs to ( shop ) , that have ( ( open year ) less than ( 2008 ) ))": {"{VALUE0}": "2012", "{VALUE1}": "2008", "{COLUMN0}": "location", "{COLUMN1}": "open_year", "{TABLE0}": "shop", "{OP0}": ">", "{OP1}": "<"}, "( nationality ) that belongs to ( host ) , that have ( ( age ) greater than ( 45 ) ), and intersect with ( ( nationality ) that belongs to ( host ) , that have ( ( age ) less than ( 35 ) ))": {"{VALUE0}": "45", "{VALUE1}": "35", "{COLUMN0}": "nationality", "{COLUMN1}": "age", "{TABLE0}": "host", "{OP0}": ">", "{OP1}": "<"}, "( college ) that belongs to ( submission ) , that have ( ( scores ) greater than ( 90 ) ), and intersect with ( ( college ) that belongs to ( submission ) , that have ( ( scores ) less than ( 80 ) ))": {"{VALUE0}": "90", "{VALUE1}": "80", "{COLUMN0}": "college", "{COLUMN1}": "scores", "{TABLE0}": "submission", "{OP0}": ">", "{OP1}": "<"}, "( grant amount of addresses ) that belongs to ( ( grants ) , and ( ( documents ) satisfied that ( ( grant id of addresses ) equal to ( grant id of staff ) ) ) ) , that have ( ( sent date of staff ) less than ( '1986-08-26 20:49:27' ) ), and intersect with ( ( grant amount ) that belongs to ( grants ) , that have ( ( grant end date ) greater than ( '1989-03-16 18:27:16' ) ))": {"{VALUE0}": "1986-08-26 20:49:27", "{VALUE1}": "1989-03-16 18:27:16", "{COLUMN0}": "grant_amount", "{COLUMN1}": "grant_id", "{COLUMN2}": "sent_date", "{COLUMN3}": "grant_end_date", "{TABLE0}": "grants", "{TABLE1}": "documents", "{OP0}": "<", "{OP1}": ">"}, "( driverid of staff ) , ( forename of enzyme ) that belongs to ( ( races ) , and ( ( results ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) , and ( ( drivers ) satisfied that ( ( driverid of staff ) equal to ( driverid of enzyme ) ) ) ) , that have ( ( name of addresses ) equal to ( australian grand prix ) ), and intersect with ( ( driverid of staff ) , ( forename of enzyme ) that belongs to ( ( races ) , and ( ( results ) satisfied that ( ( raceid of addresses ) equal to ( raceid of staff ) ) ) , and ( ( drivers ) satisfied that ( ( driverid of staff ) equal to ( driverid of enzyme ) ) ) ) , that have ( ( name of addresses ) equal to ( chinese grand prix ) ))": {"{VALUE0}": "australian grand prix", "{VALUE1}": "chinese grand prix", "{COLUMN0}": "driverid", "{COLUMN1}": "forename", "{COLUMN2}": "raceid", "{COLUMN3}": "name", "{TABLE0}": "drivers", "{TABLE1}": "driver standings", "{TABLE2}": "status", "{OP0}": "=", "{OP1}": "="}, "( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'cutter' ) ), and intersect with ( ( rank ) that belongs to ( captain ) , that have ( ( class ) equal to ( 'armed schooner' ) ))": {"{VALUE0}": "cutter", "{VALUE1}": "armed schooner", "{COLUMN0}": "rank", "{COLUMN1}": "class", "{TABLE0}": "captain", "{OP0}": "=", "{OP1}": "="}, "( name of addresses ) , ( trade name of addresses ) that belongs to ( ( medicine ) , and ( ( medicine enzyme interaction ) satisfied that ( ( medicine id of staff ) equal to ( id of addresses ) ) ) ) , that have ( ( interaction type ) equal to ( 'inhibitor' ) ), and intersect with ( ( name of addresses ) , ( trade name of addresses ) that belongs to ( ( medicine ) , and ( ( medicine enzyme interaction ) satisfied that ( ( medicine id of staff ) equal to ( id of addresses ) ) ) ) , that have ( ( interaction type ) equal to ( 'activitor' ) ))": {"{VALUE0}": "inhibitor", "{VALUE1}": "activitor", "{COLUMN0}": "name", "{COLUMN1}": "trade_name", "{COLUMN2}": "medicine_id", "{COLUMN3}": "id", "{COLUMN4}": "interaction_type", "{TABLE0}": "medicine", "{TABLE1}": "medicine enzyme interaction", "{OP0}": "=", "{OP1}": "="}, "( owner of club ) that belongs to ( ( program ) , and ( ( broadcast ) satisfied that ( ( program id of club ) equal to ( program id of member of club ) ) ) ) , that have ( ( time of day of member of club ) equal to ( morning ) ), and intersect with ( ( owner of club ) that belongs to ( ( program ) , and ( ( broadcast ) satisfied that ( ( program id of club ) equal to ( program id of member of club ) ) ) ) , that have ( ( time of day of member of club ) equal to ( night ) ))": {"{VALUE0}": "morning", "{VALUE1}": "night", "{COLUMN0}": "owner", "{COLUMN1}": "program_id", "{COLUMN2}": "time_of_day", "{TABLE0}": "program", "{TABLE1}": "broadcast", "{OP0}": "=", "{OP1}": "="}, "( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , that have ( ( stars of addresses ) equal to ( 3 ) ), and intersect with ( ( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , that have ( ( stars of addresses ) equal to ( 4 ) ))": {"{VALUE6}": "3", "{VALUE13}": "4", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{COLUMN2}": "stars", "{TABLE0}": "rating", "{TABLE1}": "movie", "{OP0}": "=", "{OP1}": "="}, "( theme of staff ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) ) , that have ( ( attendance of addresses ) less than ( 100 ) ), and intersect with ( ( theme of staff ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) ) , that have ( ( attendance of addresses ) greater than ( 500 ) ))": {"{VALUE6}": "100", "{VALUE13}": "500", "{COLUMN0}": "theme", "{COLUMN1}": "exhibition_id", "{COLUMN2}": "attendance", "{TABLE0}": "exhibition record", "{TABLE1}": "exhibition", "{OP0}": "<", "{OP1}": ">"}, "( product type code ) that belongs to ( products ) , that have ( ( product price ) greater than ( 4500 ) ), and intersect with ( ( product type code ) that belongs to ( products ) , that have ( ( product price ) less than ( 3000 ) ))": {"{VALUE0}": "4500", "{VALUE1}": "3000", "{COLUMN0}": "product_type_code", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{OP0}": ">", "{OP1}": "<"}, "( name ) that belongs to ( procedures ) , that have ( ( cost ) less than ( 5000 ) ), and intersect with ( ( name of enzyme ) that belongs to ( ( physician ) , and ( ( trained in ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( procedures ) satisfied that ( ( code of enzyme ) equal to ( treatment of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( john wen ) ))": {"{VALUE0}": "john wen", "{VALUE1}": "5000", "{COLUMN0}": "name", "{COLUMN1}": "procedures", "{COLUMN2}": "cost", "{COLUMN3}": "physician", "{COLUMN4}": "employeeid", "{COLUMN5}": "code", "{COLUMN6}": "treatment", "{TABLE0}": "trained in", "{OP0}": "<", "{OP1}": "="}, "( college ) that belongs to ( match season ) , that have ( ( position ) equal to ( midfielder ) ), and intersect with ( ( college ) that belongs to ( match season ) , that have ( ( position ) equal to ( defender ) ))": {"{VALUE0}": "midfielder", "{VALUE1}": "defender", "{COLUMN0}": "college", "{COLUMN1}": "position", "{TABLE0}": "match season", "{OP0}": "=", "{OP1}": "="}, "( studio ) that belongs to ( film ) , that have ( ( director ) equal to ( nicholas meyer ) ), and intersect with ( ( studio ) that belongs to ( film ) , that have ( ( director ) equal to ( walter hill ) ))": {"{VALUE0}": "nicholas meyer", "{VALUE1}": "walter hill", "{COLUMN0}": "studio", "{COLUMN1}": "director", "{TABLE0}": "film", "{OP0}": "=", "{OP1}": "="}, "( name of enzyme ) that belongs to ( ( affected region ) , and ( ( region ) satisfied that ( ( region id of addresses ) equal to ( region id of staff ) ) ) , and ( ( storm ) satisfied that ( ( storm id of addresses ) equal to ( storm id of enzyme ) ) ) ) , that have ( ( region name of staff ) equal to ( 'afghanistan' ) ), and intersect with ( ( name of enzyme ) that belongs to ( ( affected region ) , and ( ( region ) satisfied that ( ( region id of addresses ) equal to ( region id of staff ) ) ) , and ( ( storm ) satisfied that ( ( storm id of addresses ) equal to ( storm id of enzyme ) ) ) ) , that have ( ( region name of staff ) equal to ( 'albania' ) ))": {"{VALUE0}": "afghanistan", "{VALUE1}": "albania", "{COLUMN0}": "name", "{COLUMN1}": "region_id", "{COLUMN2}": "storm_id", "{COLUMN3}": "region_name", "{TABLE0}": "affected region", "{TABLE1}": "region", "{TABLE2}": "storm", "{OP0}": "=", "{OP1}": "="}, "( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'movies' ) ), and intersect with ( ( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'music' ) ))": {"{VALUE0}": "movies", "{VALUE1}": "music", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "playlist_id", "{TABLE0}": "tracks", "{TABLE1}": "playlist tracks", "{TABLE2}": "playlists", "{OP0}": "=", "{OP1}": "="}, "( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( airport name of enzyme ) equal to ( london heathrow ) ), and intersect with ( ( aircraft of addresses ) that belongs to ( ( aircraft ) , and ( ( airport aircraft ) satisfied that ( ( aircraft id of addresses ) equal to ( aircraft id of staff ) ) ) , and ( ( airport ) satisfied that ( ( airport id of staff ) equal to ( airport id of enzyme ) ) ) ) , that have ( ( airport name of enzyme ) equal to ( london gatwick ) ))": {"{VALUE0}": "london heathrow", "{VALUE1}": "london gatwick", "{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "airport_id", "{COLUMN3}": "airport_name", "{TABLE0}": "airport aircraft", "{TABLE1}": "airport", "{OP0}": "=", "{OP1}": "="}, "( f id ) that belongs to ( files ) , that have ( ( formats ) equal to ( mp4 ) ), and intersect with ( ( f id ) that belongs to ( song ) , that have ( ( resolution ) less than ( 1000 ) ))": {"{VALUE0}": "mp4", "{VALUE2}": "1000", "{COLUMN0}": "f_id", "{COLUMN1}": "formats", "{COLUMN2}": "resolution", "{TABLE0}": "files", "{TABLE1}": "song", "{OP0}": "=", "{OP1}": "<"}, "( customer name of club ) that belongs to ( ( customers ) , and ( ( first notification of loss ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( services ) satisfied that ( ( service id of member of club ) equal to ( service id of student ) ) ) ) , that have ( ( service name of student ) equal to ( close a policy ) ), and intersect with ( ( customer name of club ) that belongs to ( ( customers ) , and ( ( first notification of loss ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( services ) satisfied that ( ( service id of member of club ) equal to ( service id of student ) ) ) ) , that have ( ( service name of student ) equal to ( new policy application ) ))": {"{VALUE0}": "close a policy", "{VALUE1}": "new policy application", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "service_id", "{COLUMN3}": "service_name", "{TABLE0}": "customers", "{TABLE1}": "first notification of loss", "{TABLE2}": "services", "{OP0}": "=", "{OP1}": "="}, "( customer name of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( order status code of staff ) equal to ( 'completed' ) ), and intersect with ( ( customer name of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( order status code of staff ) equal to ( 'part' ) ))": {"{VALUE0}": "completed", "{VALUE1}": "part", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_status_code", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{OP0}": "=", "{OP1}": "="}, "( investor ) that belongs to ( entrepreneur ) , that have ( ( money requested ) greater than ( 140000 ) ), and intersect with ( ( investor ) that belongs to ( entrepreneur ) , that have ( ( money requested ) less than ( 120000 ) ))": {"{VALUE0}": "140000", "{VALUE1}": "120000", "{COLUMN0}": "investor", "{COLUMN1}": "money_requested", "{TABLE0}": "entrepreneur", "{OP0}": ">", "{OP1}": "<"}, "( name of staff ) that belongs to ( ( membership register branch ) , and ( ( branch ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of enzyme ) ) ) ) , that have ( ( hometown of enzyme ) equal to ( 'louisville , kentucky' ) ), and intersect with ( ( name of staff ) that belongs to ( ( membership register branch ) , and ( ( branch ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) , and ( ( member ) satisfied that ( ( member id of addresses ) equal to ( member id of enzyme ) ) ) ) , that have ( ( hometown of enzyme ) equal to ( 'hiram , georgia' ) ))": {"{VALUE0}": "louisville ,  kentucky", "{VALUE1}": "hiram ,  georgia", "{COLUMN0}": "name", "{COLUMN1}": "branch_id", "{COLUMN2}": "member_id", "{COLUMN3}": "hometown", "{TABLE0}": "membership register branch", "{TABLE1}": "branch", "{TABLE2}": "member", "{OP0}": "=", "{OP1}": "="}, "( publisher ) that belongs to ( book club ) , that have ( ( year ) equal to ( 1989 ) ), and intersect with ( ( publisher ) that belongs to ( book club ) , that have ( ( year ) equal to ( 1990 ) ))": {"{VALUE0}": "1989", "{VALUE1}": "1990", "{COLUMN0}": "publisher", "{COLUMN1}": "year", "{TABLE0}": "book club", "{OP0}": "=", "{OP1}": "="}, "( status ) that belongs to ( city ) , that have ( ( population ) greater than ( 1500 ) ), and intersect with ( ( status ) that belongs to ( city ) , that have ( ( population ) less than ( 500 ) ))": {"{VALUE0}": "1500", "{VALUE1}": "500", "{COLUMN0}": "status", "{COLUMN1}": "population", "{TABLE0}": "city", "{OP0}": ">", "{OP1}": "<"}, "( document date of addresses ) that belongs to ( ( documents ) , and ( ( documents with expenses ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) ) , that have ( ( budget type code of staff ) equal to ( 'gv' ) ), and intersect with ( ( document date of addresses ) that belongs to ( ( documents ) , and ( ( documents with expenses ) satisfied that ( ( document id of addresses ) equal to ( document id of staff ) ) ) ) , that have ( ( budget type code of staff ) equal to ( 'sf' ) ))": {"{VALUE0}": "gv", "{VALUE1}": "sf", "{COLUMN0}": "document_date", "{COLUMN1}": "document_id", "{COLUMN2}": "budget_type_code", "{TABLE0}": "documents", "{TABLE1}": "documents with expenses", "{OP0}": "=", "{OP1}": "="}, "( country ) that belongs to ( competition ) , that have ( ( competition type ) equal to ( 'friendly' ) ), and intersect with ( ( country ) that belongs to ( competition ) , that have ( ( competition type ) equal to ( 'tournament' ) ))": {"{VALUE0}": "friendly", "{VALUE1}": "tournament", "{COLUMN0}": "country", "{COLUMN1}": "competition_type", "{TABLE0}": "competition", "{OP0}": "=", "{OP1}": "="}, "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , that have ( ( loan type ) equal to ( 'mortgages' ) ), and intersect with ( ( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , that have ( ( loan type ) equal to ( 'auto' ) ))": {"{VALUE0}": "mortgages", "{VALUE1}": "auto", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "loan_type", "{TABLE0}": "customer", "{TABLE1}": "loan", "{OP0}": "=", "{OP1}": "="}, "( customer name of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( order items ) satisfied that ( ( order id of member of club ) equal to ( order id of student ) ) ) , and ( ( products ) satisfied that ( ( product id of student ) equal to ( product id of inst ) ) ) ) , that have ( ( product details of inst ) equal to ( 'latte' ) ), and intersect with ( ( customer name of club ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( order items ) satisfied that ( ( order id of member of club ) equal to ( order id of student ) ) ) , and ( ( products ) satisfied that ( ( product id of student ) equal to ( product id of inst ) ) ) ) , that have ( ( product details of inst ) equal to ( 'americano' ) ))": {"{VALUE0}": "latte", "{VALUE1}": "americano", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_id", "{COLUMN3}": "product_id", "{COLUMN4}": "product_details", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{TABLE2}": "order items", "{TABLE3}": "products", "{OP0}": "=", "{OP1}": "="}, "( year ) that belongs to ( festival detail ) , that have ( ( location ) equal to ( 'united states' ) ), and intersect with ( ( year ) that belongs to ( festival detail ) , that have ( ( location ) not equal to ( 'united states' ) ))": {"{VALUE0}": "united states", "{VALUE1}": "united states", "{COLUMN0}": "year", "{COLUMN1}": "location", "{TABLE0}": "festival detail", "{OP0}": "=", "{OP1}": "!="}, "( stuid ) that belongs to ( student ) , that have ( ( major ) equal to ( 600 ) ), and intersect with ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( onscholarship ) equal to ( 'y' ) ))": {"{VALUE0}": "y", "{VALUE1}": "600", "{COLUMN0}": "stuid", "{COLUMN1}": "major", "{COLUMN2}": "onscholarship", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "( apt number of staff ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( booking status code of addresses ) equal to ( confirmed ) ), and intersect with ( ( apt number of staff ) that belongs to ( ( apartment bookings ) , and ( ( apartments ) satisfied that ( ( apt id of addresses ) equal to ( apt id of staff ) ) ) ) , that have ( ( booking status code of addresses ) equal to ( provisional ) ))": {"{VALUE0}": "confirmed", "{VALUE1}": "provisional", "{COLUMN0}": "apt_number", "{COLUMN1}": "apt_id", "{COLUMN2}": "booking_status_code", "{TABLE0}": "apartment bookings", "{TABLE1}": "apartments", "{OP0}": "=", "{OP1}": "="}, "( nominee ) that belongs to ( musical ) , that have ( ( award ) equal to ( tony award ) ), and intersect with ( ( nominee ) that belongs to ( musical ) , that have ( ( award ) equal to ( drama desk award ) ))": {"{VALUE0}": "tony award", "{VALUE1}": "drama desk award", "{COLUMN0}": "nominee", "{COLUMN1}": "award", "{TABLE0}": "musical", "{OP0}": "=", "{OP1}": "="}, "( stuid ) that belongs to ( student ) , that have ( ( sex ) equal to ( 'f' ) ), and intersect with ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( football ) ))": {"{VALUE0}": "football", "{VALUE1}": "f", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{COLUMN2}": "sportname", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "( project details of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , that have ( ( outcome code of staff ) equal to ( 'paper' ) ), and intersect with ( ( project details of addresses ) that belongs to ( ( projects ) , and ( ( project outcomes ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , that have ( ( outcome code of staff ) equal to ( 'patent' ) ))": {"{VALUE0}": "paper", "{VALUE1}": "patent", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{COLUMN2}": "outcome_code", "{TABLE0}": "projects", "{TABLE1}": "project outcomes", "{OP0}": "=", "{OP1}": "="}, "( vehicle flight number ) , ( date ) , ( pilot ) that belongs to ( flight ) , ordered by ( ( altitude ) in ascending order )": {"{COLUMN0}": "vehicle_flight_number", "{COLUMN1}": "date", "{COLUMN2}": "pilot", "{COLUMN3}": "altitude", "{TABLE0}": "flight", "{SC0}": "asc"}, "( name of addresses ) that belongs to ( ( actor ) , and ( ( musical ) satisfied that ( ( musical id of addresses ) equal to ( musical id of staff ) ) ) ) , ordered by ( ( year of staff ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "musical_id", "{COLUMN2}": "year", "{TABLE0}": "actor", "{TABLE1}": "musical", "{SC0}": "desc"}, "( age of staff ) that belongs to ( ( gymnast ) , and ( ( people ) satisfied that ( ( gymnast id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( total points of addresses ) in descending order )": {"{COLUMN0}": "age", "{COLUMN1}": "gymnast_id", "{COLUMN2}": "people_id", "{COLUMN3}": "total_points", "{TABLE0}": "gymnast", "{TABLE1}": "people", "{SC0}": "desc"}, "( name ) that belongs to ( captain ) , ordered by ( ( age ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "captain", "{SC0}": "desc"}, "( name ) that belongs to ( journalist ) , ordered by ( ( years working ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "years_working", "{TABLE0}": "journalist", "{SC0}": "asc"}, "( author ) that belongs to ( submission ) , ordered by ( ( scores ) in ascending order )": {"{COLUMN0}": "author", "{COLUMN1}": "scores", "{TABLE0}": "submission", "{SC0}": "asc"}, "( name ) that belongs to ( browser ) , ordered by ( ( market share ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "market_share", "{TABLE0}": "browser", "{SC0}": "desc"}, "( company ) that belongs to ( entrepreneur ) , ordered by ( ( money requested ) in descending order )": {"{COLUMN0}": "company", "{COLUMN1}": "money_requested", "{TABLE0}": "entrepreneur", "{SC0}": "desc"}, "( name ) that belongs to ( wrestler ) , ordered by ( ( days held ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "days_held", "{TABLE0}": "wrestler", "{SC0}": "desc"}, "( company ) , ( rank ) that belongs to ( company ) , ordered by ( ( sales billion ) in descending order )": {"{COLUMN0}": "company", "{COLUMN1}": "rank", "{COLUMN2}": "sales_billion", "{SC0}": "desc"}, "( year ) , ( book title ) , ( publisher ) that belongs to ( book club ) , ordered by ( ( year ) in descending order )": {"{COLUMN0}": "year", "{COLUMN1}": "book_title", "{COLUMN2}": "publisher", "{TABLE0}": "book club", "{SC0}": "desc"}, "( name ) that belongs to ( people ) , ordered by ( ( height ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "people", "{SC0}": "asc"}, "( name ) that belongs to ( buildings ) , ordered by ( ( height ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "buildings", "{SC0}": "desc"}, "( date ) that belongs to ( game ) , ordered by ( ( home team ) in descending order )": {"{COLUMN0}": "date", "{COLUMN1}": "home_team", "{TABLE0}": "game", "{SC0}": "desc"}, "( name ) that belongs to ( people ) , ordered by ( ( weight ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "weight", "{TABLE0}": "people", "{SC0}": "asc"}, "( name ) that belongs to ( company ) , ordered by ( ( sales in billion ) in ascending order )": {"{COLUMN0}": "name", "{COLUMN1}": "sales_in_billion", "{TABLE0}": "company", "{SC0}": "asc"}, "( name of staff ) that belongs to ( ( body builder ) , and ( ( people ) satisfied that ( ( people id of addresses ) equal to ( people id of staff ) ) ) ) , ordered by ( ( total of addresses ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{COLUMN2}": "total", "{TABLE0}": "body builder", "{TABLE1}": "people", "{SC0}": "desc"}, "( name ) that belongs to ( pilot ) , ordered by ( ( name ) in ascending order )": {"{COLUMN0}": "name", "{TABLE0}": "pilot", "{SC0}": "asc"}, "( team name ) that belongs to ( basketball match ) , ordered by ( ( all home ) in descending order )": {"{COLUMN0}": "team_name", "{COLUMN1}": "all_home", "{TABLE0}": "basketball match", "{SC0}": "desc"}, "( theme ) that belongs to ( farm competition ) , ordered by ( ( year ) in ascending order )": {"{COLUMN0}": "theme", "{COLUMN1}": "year", "{TABLE0}": "farm competition", "{SC0}": "asc"}, "( company ) , ( headquarters ) that belongs to ( company ) , ordered by ( ( market value ) in descending order )": {"{COLUMN0}": "company", "{COLUMN1}": "headquarters", "{COLUMN2}": "market_value", "{SC0}": "desc"}, "( builder ) that belongs to ( railway ) , ordered by ( ( builder ) in ascending order )": {"{COLUMN0}": "builder", "{COLUMN1}": "railway", "{SC0}": "asc"}, "( case burden ) that belongs to ( county public safety ) , ordered by ( ( population ) in descending order )": {"{COLUMN0}": "case_burden", "{COLUMN1}": "population", "{TABLE0}": "county public safety", "{SC0}": "desc"}, "( name ) that belongs to ( actor ) , ordered by ( ( name ) in ascending order )": {"{COLUMN0}": "name", "{TABLE0}": "actor", "{SC0}": "asc"}, "( name ) that belongs to ( county public safety ) , ordered by ( ( population ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "population", "{TABLE0}": "county public safety", "{SC0}": "desc"}, "( name ) that belongs to ( companies ) , ordered by ( ( market value billion ) in descending order )": {"{COLUMN0}": "name", "{COLUMN1}": "market_value_billion", "{TABLE0}": "companies", "{SC0}": "desc"}, "( apt number ) that belongs to ( apartments ) , ordered by ( ( room count ) in ascending order )": {"{COLUMN0}": "apt_number", "{COLUMN1}": "room_count", "{TABLE0}": "apartments", "{SC0}": "asc"}, "( distinct ( forename ) ) that belongs to ( drivers ) , ordered by ( ( forename ) in ascending order )": {"{COLUMN0}": "forename", "{TABLE0}": "status", "{SC0}": "asc"}, "( staff details ) that belongs to ( research staff ) , ordered by ( ( staff details ) in ascending order )": {"{COLUMN0}": "staff_details", "{TABLE0}": "research staff", "{SC0}": "asc"}, "( crime rate ) that belongs to ( county public safety ) , ordered by ( ( police officers ) in ascending order )": {"{COLUMN0}": "crime_rate", "{COLUMN1}": "police_officers", "{TABLE0}": "county public safety", "{SC0}": "asc"}, "( county name ) that belongs to ( county ) , ordered by ( ( population ) in ascending order )": {"{COLUMN0}": "county_name", "{COLUMN1}": "population", "{TABLE0}": "county", "{SC0}": "asc"}, "( name ) that belongs to ( city ) , ordered by ( ( name ) in ascending order )": {"{COLUMN0}": "name", "{TABLE0}": "city", "{SC0}": "asc"}, "( chair name ) that belongs to ( festival detail ) , ordered by ( ( year ) in ascending order )": {"{COLUMN0}": "chair_name", "{COLUMN1}": "year", "{TABLE0}": "festival detail", "{SC0}": "asc"}, "( party theme ) that belongs to ( party ) , ordered by ( ( number of hosts ) in ascending order )": {"{COLUMN0}": "party_theme", "{COLUMN1}": "number_of_hosts", "{TABLE0}": "party", "{SC0}": "asc"}, "( product name ) that belongs to ( products ) , ordered by ( ( product price ) in ascending order )": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{SC0}": "asc"}, "( name of enzyme ) , ( district of staff ) that belongs to ( ( phone market ) , and ( ( market ) satisfied that ( ( market id of addresses ) equal to ( market id of staff ) ) ) , and ( ( phone ) satisfied that ( ( phone id of addresses ) equal to ( phone id of enzyme ) ) ) ) , ordered by ( ( ranking of staff ) )": {"{COLUMN0}": "name", "{COLUMN1}": "district", "{COLUMN2}": "market_id", "{COLUMN3}": "phone_id", "{COLUMN4}": "ranking", "{TABLE0}": "phone market", "{TABLE1}": "market", "{TABLE2}": "phone"}, "( time of purchase ) , ( age ) , ( address ) that belongs to ( member ) , ordered by ( ( time of purchase ) )": {"{COLUMN0}": "time_of_purchase", "{COLUMN1}": "age", "{COLUMN2}": "address", "{TABLE0}": "member"}, "( name ) , ( address road ) , ( city ) that belongs to ( branch ) , ordered by ( ( open year ) )": {"{COLUMN0}": "name", "{COLUMN1}": "address_road", "{COLUMN2}": "city", "{COLUMN3}": "open_year", "{TABLE0}": "branch"}, "( personal name ) , ( family name ) that belongs to ( students ) , ordered by ( ( family name ) )": {"{COLUMN0}": "personal_name", "{COLUMN1}": "family_name", "{TABLE0}": "students"}, "( name ) , ( service ) that belongs to ( train ) , ordered by ( ( time ) )": {"{COLUMN0}": "name", "{COLUMN1}": "service", "{COLUMN2}": "time", "{TABLE0}": "train"}, "( flno ) , ( origin ) , ( destination ) that belongs to ( flight ) , ordered by ( ( origin ) )": {"{COLUMN0}": "flno", "{COLUMN1}": "origin", "{COLUMN2}": "destination", "{TABLE0}": "flight"}, "( name ) , ( job ) that belongs to ( person ) , ordered by ( ( name ) )": {"{COLUMN0}": "name", "{COLUMN1}": "job", "{TABLE0}": "person"}, "( name of enzyme ) that belongs to ( ( repair assignment ) , and ( ( machine ) satisfied that ( ( machine id of addresses ) equal to ( machine id of staff ) ) ) , and ( ( technician ) satisfied that ( ( technician id of addresses ) equal to ( technician id of enzyme ) ) ) ) , ordered by ( ( quality rank of staff ) )": {"{COLUMN0}": "name", "{COLUMN1}": "machine_id", "{COLUMN2}": "technician_id", "{COLUMN3}": "quality_rank", "{TABLE0}": "repair assignment", "{TABLE1}": "machine", "{TABLE2}": "technician"}, "( station id ) , ( location ) , ( manager name ) that belongs to ( gas station ) , ordered by ( ( open year ) )": {"{COLUMN0}": "station_id", "{COLUMN1}": "location", "{COLUMN2}": "manager_name", "{COLUMN3}": "open_year", "{TABLE0}": "gas station"}, "( distinct ( name ) ) that belongs to ( instructor ) , ordered by ( ( name ) )": {"{COLUMN0}": "name", "{TABLE0}": "instructor"}, "( name ) that belongs to ( people ) , ordered by ( ( date of birth ) )": {"{COLUMN0}": "name", "{COLUMN1}": "date_of_birth", "{TABLE0}": "people"}, "( document name ) , ( access count ) that belongs to ( documents ) , ordered by ( ( document name ) )": {"{COLUMN0}": "document_name", "{COLUMN1}": "access_count", "{TABLE0}": "documents"}, "( name ) , ( dept name ) that belongs to ( student ) , ordered by ( ( tot cred ) )": {"{COLUMN0}": "name", "{COLUMN1}": "dept_name", "{COLUMN2}": "tot_cred", "{TABLE0}": "student"}, "( distinct ( region name ) ) that belongs to ( region ) , ordered by ( ( label ) )": {"{COLUMN0}": "region_name", "{COLUMN1}": "label", "{TABLE0}": "region"}, "( name ) that belongs to ( scientists ) , ordered by ( ( name ) )": {"{COLUMN0}": "name", "{TABLE0}": "scientists"}, "( first name ) that belongs to ( people ) , ordered by ( ( first name ) )": {"{COLUMN0}": "first_name", "{TABLE0}": "people"}, "( distinct ( product name ) ) that belongs to ( product ) , ordered by ( ( product id ) )": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_id", "{TABLE0}": "product"}, "( cname ) that belongs to ( course ) , ordered by ( ( credits ) )": {"{COLUMN0}": "cname", "{COLUMN1}": "credits", "{TABLE0}": "course"}, "( city ) that belongs to ( addresses ) , ordered by ( ( city ) )": {"{COLUMN0}": "city", "{TABLE0}": "addresses"}, "( customer name ) , ( customer phone ) , ( customer email ) that belongs to ( customers ) , ordered by ( ( date became customer ) )": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_phone", "{COLUMN2}": "customer_email", "{COLUMN3}": "date_became_customer", "{TABLE0}": "customers"}, "all items that belongs to ( college ) , ordered by ( ( enr ) )": {"{COLUMN0}": "enr", "{TABLE0}": "college"}, "( service name ) that belongs to ( services ) , ordered by ( ( service name ) )": {"{COLUMN0}": "service_name", "{TABLE0}": "services"}, "( dname ) that belongs to ( department ) , ordered by ( ( mgr start date ) )": {"{COLUMN0}": "dname", "{COLUMN1}": "mgr_start_date", "{TABLE0}": "department"}, "( name ) that belongs to ( accounts ) , ordered by ( ( name ) )": {"{COLUMN0}": "name", "{TABLE0}": "accounts"}, "all items that belongs to ( course authors and tutors ) , ordered by ( ( personal name ) )": {"{COLUMN0}": "personal_name", "{TABLE0}": "course authors and tutors"}, "( source system code of addresses ) , ( council tax id of staff ) that belongs to ( ( cmi cross references ) , and ( ( benefits overpayments ) satisfied that ( ( cmi cross ref id of addresses ) equal to ( cmi cross ref id of staff ) ) ) ) , ordered by ( ( council tax id of staff ) )": {"{COLUMN0}": "source_system_code", "{COLUMN1}": "council_tax_id", "{COLUMN2}": "cmi_cross_ref_id", "{TABLE0}": "cmi cross references", "{TABLE1}": "benefits overpayments"}, "all items that belongs to ( instructor ) , ordered by ( ( salary ) )": {"{COLUMN0}": "salary", "{TABLE0}": "instructor"}, "( course name ) that belongs to ( courses ) , ordered by ( ( course name ) )": {"{COLUMN0}": "course_name", "{TABLE0}": "courses"}, "( region name ) that belongs to ( region ) , ordered by ( ( region name ) )": {"{COLUMN0}": "region_name", "{TABLE0}": "region"}, "( distinct ( product name ) ) that belongs to ( product ) , ordered by ( ( product name ) )": {"{COLUMN0}": "product_name", "{TABLE0}": "product"}, "( roomname ) that belongs to ( rooms ) , ordered by ( ( baseprice ) )": {"{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms"}, "( gname ) , ( gtype ) that belongs to ( video games ) , ordered by ( ( gname ) )": {"{COLUMN0}": "gname", "{COLUMN1}": "gtype", "{TABLE0}": "video games"}, "( name ) , ( city ) that belongs to ( branch ) , that have ( ( branch_id ) not in ( ( branch id ) that belongs to ( membership register branch ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "city", "{COLUMN2}": "branch_id", "{TABLE0}": "branch", "{TABLE1}": "membership register branch"}, "( famous title ) that belongs to ( artist ) , that have ( ( artist_id ) not in ( ( ( artist id ) that belongs to ( volume ) ) ) )": {"{COLUMN0}": "famous_title", "{COLUMN1}": "artist", "{COLUMN2}": "artist_id", "{COLUMN3}": "volume"}, "( name ) that belongs to ( club ) , that have ( ( club_id ) not in ( ( club id ) that belongs to ( player ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "club_id", "{TABLE0}": "club", "{TABLE1}": "player"}, "( name ) that belongs to ( people ) , that have ( ( people_id ) not in ( ( people id ) that belongs to ( perpetrator ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "people_id", "{TABLE0}": "people", "{TABLE1}": "perpetrator"}, "( first name ) , ( last name ) that belongs to ( maintenance engineers ) , that have ( ( engineer_id ) not in ( ( engineer id ) that belongs to ( engineer visits ) ) )": {"{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "engineer_id", "{TABLE0}": "maintenance engineers", "{TABLE1}": "engineer visits"}, "( name ) that belongs to ( musical ) , that have ( ( musical_id ) not in ( ( musical id ) that belongs to ( actor ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "musical_id", "{TABLE0}": "musical", "{TABLE1}": "actor"}, "( title ) that belongs to ( book ) , that have ( ( book_id ) not in ( ( book id ) that belongs to ( publication ) ) )": {"{COLUMN0}": "title", "{COLUMN1}": "book_id", "{TABLE0}": "book", "{TABLE1}": "publication"}, "( city ) that belongs to ( addresses ) , that have ( ( city ) not in ( ( distinct ( city of student ) ) that belongs to ( ( customers ) , and ( ( customer addresses ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) , and ( ( addresses ) satisfied that ( ( address id of member of club ) equal to ( address id of student ) ) ) ) ) )": {"{COLUMN0}": "city", "{COLUMN1}": "customer_id", "{COLUMN2}": "address_id", "{TABLE0}": "addresses", "{TABLE1}": "customers", "{TABLE2}": "customer addresses"}, "( name ) that belongs to ( team ) , that have ( ( team_id ) not in ( ( team ) that belongs to ( match season ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "team", "{COLUMN2}": "team_id", "{TABLE0}": "match season"}, "( the number of ( all items ) ) that belongs to ( camera lens ) , that have ( ( id ) not in ( ( camera lens id ) that belongs to ( photos ) ) )": {"{COLUMN0}": "id", "{COLUMN1}": "camera_lens_id", "{TABLE0}": "camera lens", "{TABLE1}": "photos", "{AGG0}": "count"}, "( name ) that belongs to ( driver ) , that have ( ( driver_id ) not in ( ( driver id ) that belongs to ( school bus ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "driver_id", "{TABLE0}": "driver", "{TABLE1}": "school bus"}, "( the number of ( all items ) ) that belongs to ( artist ) , that have ( ( artistid ) not in ( ( ( artistid ) that belongs to ( album ) ) ) )": {"{COLUMN0}": "artistid", "{TABLE0}": "artist", "{TABLE1}": "album", "{AGG0}": "count"}, "( author ) that belongs to ( submission ) , that have ( ( submission_id ) not in ( ( submission id ) that belongs to ( acceptance ) ) )": {"{COLUMN0}": "author", "{COLUMN1}": "submission_id", "{TABLE0}": "submission", "{TABLE1}": "acceptance"}, "( the number of ( all items ) ) that belongs to ( course ) , that have ( ( course_id ) not in ( ( course id ) that belongs to ( prereq ) ) )": {"{COLUMN0}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{AGG0}": "count"}, "( name ) that belongs to ( projects ) , that have ( ( code ) not in ( ( project ) that belongs to ( assignedto ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "code", "{COLUMN2}": "project", "{TABLE0}": "projects", "{TABLE1}": "assigned to"}, "( aircraft ) that belongs to ( aircraft ) , that have ( ( aircraft_id ) not in ( ( winning aircraft ) that belongs to ( match ) ) )": {"{COLUMN0}": "aircraft", "{COLUMN1}": "aircraft_id", "{COLUMN2}": "winning_aircraft", "{TABLE0}": "match"}, "( title ) that belongs to ( course ) , that have ( ( course_id ) not in ( ( course id ) that belongs to ( prereq ) ) )": {"{COLUMN0}": "title", "{COLUMN1}": "course_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite"}, "( customer name ) , ( customer phone ) that belongs to ( customers ) , that have ( ( customer_id ) not in ( ( customer id ) that belongs to ( mailshot customers ) ) )": {"{COLUMN0}": "customer_name", "{COLUMN1}": "customer_phone", "{COLUMN2}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "mailshot customers"}, "( the number of ( all items ) ) that belongs to ( products ) , that have ( ( product_id ) not in ( ( product id ) that belongs to ( order items ) ) )": {"{COLUMN0}": "product_id", "{TABLE0}": "products", "{TABLE1}": "order items", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( customers ) , that have ( ( customer_id ) not in ( ( customer id ) that belongs to ( accounts ) ) )": {"{COLUMN0}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "accounts", "{AGG0}": "count"}, "( fname ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid ) that belongs to ( enrolled in ) ) )": {"{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{TABLE0}": "student", "{TABLE1}": "enrolled in"}, "( official name ) that belongs to ( city ) , that have ( ( city_id ) not in ( ( host city id ) that belongs to ( farm competition ) ) )": {"{COLUMN0}": "official_name", "{COLUMN1}": "city_id", "{COLUMN2}": "host_city_id", "{TABLE0}": "city", "{TABLE1}": "farm competition"}, "( product price ) that belongs to ( products ) , that have ( ( product_id ) not in ( ( product id ) that belongs to ( complaints ) ) )": {"{COLUMN0}": "product_price", "{COLUMN1}": "product_id", "{TABLE0}": "products", "{TABLE1}": "complaints"}, "( name ) that belongs to ( county public safety ) , that have ( ( county_id ) not in ( ( county id ) that belongs to ( city ) ) )": {"{COLUMN0}": "name", "{COLUMN1}": "county_id", "{TABLE0}": "county public safety", "{TABLE1}": "city"}, "all items that belongs to ( employees ) , that have ( ( employee_id ) not in ( ( employee id ) that belongs to ( job history ) ) )": {"{COLUMN0}": "employee_id", "{TABLE0}": "employees", "{TABLE1}": "job history"}, "( pilot name ) that belongs to ( pilot ) , that have ( ( pilot_id ) not in ( ( pilot id ) that belongs to ( pilot record ) ) )": {"{COLUMN0}": "pilot_name", "{COLUMN1}": "pilot_id", "{TABLE0}": "pilot", "{TABLE1}": "pilot record"}, "( document name ) that belongs to ( documents ) , that have ( ( document_code ) not in ( ( document code ) that belongs to ( document sections ) ) )": {"{COLUMN0}": "document_name", "{COLUMN1}": "document_code", "{TABLE0}": "documents", "{TABLE1}": "document sections"}, "( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( roomid ) not in ( ( distinct ( room ) ) that belongs to ( reservations ) ) )": {"{COLUMN0}": "roomid", "{COLUMN1}": "room", "{TABLE0}": "rooms", "{TABLE1}": "reservations", "{AGG0}": "count"}, "( party name ) that belongs to ( party ) , that have ( ( party_id ) not in ( ( party id ) that belongs to ( member ) ) )": {"{COLUMN0}": "party_name", "{COLUMN1}": "party_id", "{TABLE0}": "party", "{TABLE1}": "member"}, "( the number of ( all items ) ) that belongs to ( scientists ) , that have ( ( ssn ) not in ( ( scientist ) that belongs to ( assignedto ) ) )": {"{COLUMN0}": "ssn", "{COLUMN1}": "scientist", "{TABLE0}": "scientists", "{TABLE1}": "assigned to", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( enzyme ) , that have ( ( id ) not in ( ( enzyme id ) that belongs to ( medicine enzyme interaction ) ) )": {"{COLUMN0}": "id", "{COLUMN1}": "enzyme_id", "{TABLE0}": "enzyme", "{TABLE1}": "medicine enzyme interaction", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( customers ) , that have ( ( customer_id ) not in ( ( customer id ) that belongs to ( customer payments ) ) )": {"{COLUMN0}": "customer_id", "{TABLE0}": "customers", "{TABLE1}": "customer payments", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( visitors ) , that have ( ( tourist_id ) not in ( ( tourist id ) that belongs to ( visits ) ) )": {"{COLUMN0}": "tourist_id", "{TABLE0}": "visitors", "{TABLE1}": "visits", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( web client accelerator ) , that have ( ( id ) not in ( ( accelerator id ) that belongs to ( accelerator compatible browser ) ) )": {"{COLUMN0}": "id", "{COLUMN1}": "accelerator_id", "{TABLE0}": "web client accelerator", "{TABLE1}": "accelerator compatible browser", "{AGG0}": "count"}, "( name of addresses ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) ) , that have ( ( balance of staff ) less than ( the average of ( balance ) ) that belongs to ( checking ) )": {"{COLUMN0}": "name", "{COLUMN1}": "custid", "{COLUMN2}": "balance", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{OP0}": "<", "{AGG0}": "avg"}, "( title of enzyme ) , ( credits of enzyme ) that belongs to ( ( classroom ) , and ( ( section ) satisfied that ( ( ( building of addresses ) equal to ( building of staff ) ) and ( ( room number of addresses ) equal to ( room number of staff ) ) ) ) , and ( ( course ) satisfied that ( ( course id of staff ) equal to ( course id of enzyme ) ) ) ) , that have ( ( capacity of addresses ) equal to ( the maximum of ( capacity ) ) that belongs to ( classroom ) )": {"{COLUMN0}": "title", "{COLUMN1}": "credits", "{COLUMN2}": "building", "{COLUMN3}": "room_number", "{COLUMN4}": "course_id", "{COLUMN5}": "capacity", "{TABLE0}": "classroom", "{TABLE1}": "section", "{TABLE2}": "course", "{OP0}": "=", "{AGG0}": "max"}, "( dept name ) , ( building ) that belongs to ( department ) , that have ( ( budget ) greater than ( the average of ( budget ) ) that belongs to ( department ) )": {"{COLUMN0}": "dept_name", "{COLUMN1}": "building", "{COLUMN2}": "budget", "{TABLE0}": "department", "{OP0}": ">", "{AGG0}": "avg"}, "( distinct ( state ) ) that belongs to ( college ) , that have ( ( enr ) less than ( the maximum of ( enr ) ) that belongs to ( college ) )": {"{COLUMN0}": "state", "{COLUMN1}": "enr", "{TABLE0}": "college", "{OP0}": "<", "{AGG0}": "max"}, "( the number of ( all items ) ) that belongs to ( savings ) , that have ( ( balance ) greater than ( the average of ( balance ) ) that belongs to ( savings ) )": {"{COLUMN0}": "balance", "{TABLE0}": "savings", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "avg"}, "( name ) , ( location ) , ( year opened ) that belongs to ( track ) , that have ( ( seating ) greater than ( the average of ( seating ) ) that belongs to ( track ) )": {"{COLUMN0}": "name", "{COLUMN1}": "location", "{COLUMN2}": "year_opened", "{COLUMN3}": "seating", "{TABLE0}": "track", "{OP0}": ">", "{AGG0}": "avg"}, "( dept name ) , ( budget ) that belongs to ( department ) , that have ( ( budget ) greater than ( the average of ( budget ) ) that belongs to ( department ) )": {"{COLUMN0}": "dept_name", "{COLUMN1}": "budget", "{TABLE0}": "department", "{OP0}": ">", "{AGG0}": "avg"}, "( the sum of ( number deaths ) ) , ( the sum of ( damage millions usd ) ) that belongs to ( storm ) , that have ( ( max speed ) greater than ( the average of ( max speed ) ) that belongs to ( storm ) )": {"{COLUMN0}": "number_deaths", "{COLUMN1}": "damage_millions_usd", "{COLUMN2}": "max_speed", "{TABLE0}": "storm", "{OP0}": ">", "{AGG0}": "sum", "{AGG1}": "sum", "{AGG2}": "avg"}, "( distinct ( name of staff ) ) , ( friend of staff ) , ( age of addresses ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , that have ( ( age of addresses ) greater than ( the average of ( age ) ) that belongs to ( person ) )": {"{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "age", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": ">", "{AGG0}": "avg"}, "( shop id ) , ( address ) that belongs to ( shop ) , that have ( ( score ) less than ( the average of ( score ) ) that belongs to ( shop ) )": {"{COLUMN0}": "shop_id", "{COLUMN1}": "address", "{COLUMN2}": "score", "{TABLE0}": "shop", "{OP0}": "<", "{AGG0}": "avg"}, "( date claim made ) that belongs to ( claims ) , that have ( ( amount settled ) less than or equal to ( the average of ( amount settled ) ) that belongs to ( claims ) )": {"{COLUMN0}": "date_claim_made", "{COLUMN1}": "amount_settled", "{TABLE0}": "claims", "{OP0}": "<=", "{AGG0}": "avg"}, "( name ) that belongs to ( player ) , that have ( ( points ) greater than ( the average of ( points ) ) that belongs to ( player ) )": {"{COLUMN0}": "name", "{COLUMN1}": "points", "{TABLE0}": "player", "{OP0}": ">", "{AGG0}": "avg"}, "( customer details of student ) that belongs to ( ( claim headers ) , and ( ( policies ) satisfied that ( ( policy id of club ) equal to ( policy id of member of club ) ) ) , and ( ( customers ) satisfied that ( ( customer id of member of club ) equal to ( customer id of student ) ) ) ) , that have ( ( amount piad of club ) equal to ( the minimum of ( amount piad ) ) that belongs to ( claim headers ) )": {"{COLUMN0}": "customer_details", "{COLUMN1}": "policy_id", "{COLUMN2}": "customer_id", "{COLUMN3}": "amount_piad", "{TABLE0}": "claim headers", "{TABLE1}": "policies", "{TABLE2}": "customers", "{OP0}": "=", "{AGG0}": "min"}, "( name ) , ( country ) that belongs to ( people ) , that have ( ( age ) less than ( the average of ( age ) ) that belongs to ( people ) )": {"{COLUMN0}": "name", "{COLUMN1}": "country", "{COLUMN2}": "age", "{TABLE0}": "people", "{OP0}": "<", "{AGG0}": "avg"}, "( name ) that belongs to ( people ) , that have ( ( height ) less than ( the average of ( height ) ) that belongs to ( people ) )": {"{COLUMN0}": "name", "{COLUMN1}": "height", "{TABLE0}": "people", "{OP0}": "<", "{AGG0}": "avg"}, "( name of club ) that belongs to ( ( furniture ) , and ( ( furniture manufacte ) satisfied that ( ( furniture id of club ) equal to ( furniture id of member of club ) ) ) ) , that have ( ( price in dollar of member of club ) less than ( the maximum of ( price in dollar ) ) that belongs to ( furniture manufacte ) )": {"{COLUMN0}": "name", "{COLUMN1}": "furniture_id", "{COLUMN2}": "price_in_dollar", "{TABLE0}": "furniture", "{TABLE1}": "furniture manufacte", "{OP0}": "<", "{AGG0}": "max"}, "( name ) that belongs to ( person ) , that have ( ( age ) equal to ( the maximum of ( age ) ) that belongs to ( person ) )": {"{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "person", "{OP0}": "=", "{AGG0}": "max"}, "( distinct ( salary ) ) that belongs to ( instructor ) , that have ( ( salary ) less than ( the maximum of ( salary ) ) that belongs to ( instructor ) )": {"{COLUMN0}": "salary", "{TABLE0}": "instructor", "{OP0}": "<", "{AGG0}": "max"}, "( distinct ( name of staff ) ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , that have ( ( age of addresses ) less than ( the average of ( age ) ) that belongs to ( person ) )": {"{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "age", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "<", "{AGG0}": "avg"}, "( distinct ( player name of addresses ) ) that belongs to ( ( player ) , and ( ( player attributes ) satisfied that ( ( player api id of addresses ) equal to ( player api id of staff ) ) ) ) , that have ( ( overall rating of staff ) greater than ( the average of ( overall rating ) ) that belongs to ( player attributes ) )": {"{COLUMN0}": "player_name", "{COLUMN1}": "player_api_id", "{COLUMN2}": "overall_rating", "{TABLE0}": "player", "{TABLE1}": "player attributes", "{OP0}": ">", "{AGG0}": "avg"}, "( the number of ( distinct ( state ) ) ) that belongs to ( college ) , that have ( ( enr ) less than ( the average of ( enr ) ) that belongs to ( college ) )": {"{COLUMN0}": "state", "{COLUMN1}": "enr", "{TABLE0}": "college", "{OP0}": "<", "{AGG0}": "count", "{AGG1}": "avg"}, "( customer details of student ) that belongs to ( ( claim headers ) , and ( ( policies ) satisfied that ( ( policy id of club ) equal to ( policy id of member of club ) ) ) , and ( ( customers ) satisfied that ( ( customer id of member of club ) equal to ( customer id of student ) ) ) ) , that have ( ( amount claimed of club ) equal to ( the maximum of ( amount claimed ) ) that belongs to ( claim headers ) )": {"{COLUMN0}": "customer_details", "{COLUMN1}": "policy_id", "{COLUMN2}": "customer_id", "{COLUMN3}": "amount_claimed", "{TABLE0}": "claim headers", "{TABLE1}": "policies", "{TABLE2}": "customers", "{OP0}": "=", "{AGG0}": "max"}, "( team name of member of club ) that belongs to ( ( university ) , and ( ( basketball match ) satisfied that ( ( school id of club ) equal to ( school id of member of club ) ) ) ) , that have ( ( enrollment ) less than ( the average of ( enrollment ) ) that belongs to ( university ) )": {"{COLUMN0}": "team_name", "{COLUMN1}": "school_id", "{COLUMN2}": "enrollment", "{TABLE0}": "university", "{TABLE1}": "basketball match", "{OP0}": "<", "{AGG0}": "avg"}, "( customer details of member of club ) that belongs to ( ( policies ) , and ( ( customers ) satisfied that ( ( customer id of club ) equal to ( customer id of member of club ) ) ) ) , that have ( ( start date of club ) equal to ( the maximum of ( start date ) ) that belongs to ( policies ) )": {"{COLUMN0}": "customer_details", "{COLUMN1}": "customer_id", "{COLUMN2}": "start_date", "{TABLE0}": "policies", "{TABLE1}": "customers", "{OP0}": "=", "{AGG0}": "max"}, "( distinct ( product name ) ) that belongs to ( products ) , that have ( ( product price ) greater than ( the average of ( product price ) ) that belongs to ( products ) )": {"{COLUMN0}": "product_name", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{OP0}": ">", "{AGG0}": "avg"}, "( roomname ) that belongs to ( rooms ) , that have ( ( baseprice ) greater than ( the average of ( baseprice ) ) that belongs to ( rooms ) )": {"{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms", "{OP0}": ">", "{AGG0}": "avg"}, "( the number of ( all items ) ) that belongs to ( csu fees ) , that have ( ( campusfee ) greater than ( the average of ( campusfee ) ) that belongs to ( csu fees ) )": {"{COLUMN0}": "campusfee", "{TABLE0}": "csu fees", "{OP0}": ">", "{AGG0}": "count", "{AGG1}": "avg"}, "( distinct ( pilot of staff ) ) that belongs to ( ( airport ) , and ( ( flight ) satisfied that ( ( id of addresses ) equal to ( airport id of staff ) ) ) ) , that have ( ( ( country of addresses ) equal to ( 'united states' ) ) or ( ( name of addresses ) equal to ( 'billund airport' ) ) )": {"{VALUE0}": "united states", "{VALUE1}": "billund airport", "{COLUMN0}": "pilot", "{COLUMN1}": "id", "{COLUMN2}": "airport_id", "{COLUMN3}": "country", "{COLUMN4}": "name", "{TABLE0}": "airport", "{TABLE1}": "flight", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( mountain ) , that have ( ( ( height ) greater than ( 5000 ) ) or ( ( prominence ) greater than ( 1000 ) ) )": {"{VALUE0}": "5000", "{VALUE1}": "1000", "{COLUMN0}": "name", "{COLUMN1}": "height", "{COLUMN2}": "prominence", "{TABLE0}": "mountain", "{OP0}": ">", "{OP1}": ">"}, "( distinct ( name of addresses ) ) , ( age of addresses ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( name of staff ) ) ) ) , that have ( ( ( friend of staff ) equal to ( 'dan' ) ) or ( ( friend of staff ) equal to ( 'alice' ) ) )": {"{VALUE0}": "dan", "{VALUE1}": "alice", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "friend", "{TABLE0}": "person", "{TABLE1}": "person friend", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( people ) , that have ( ( ( age ) equal to ( 35 ) ) or ( ( age ) equal to ( 36 ) ) )": {"{VALUE0}": "35", "{VALUE1}": "36", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "people", "{OP0}": "=", "{OP1}": "="}, "( date of transaction ) that belongs to ( transactions ) , that have ( ( ( share count ) greater than or equal to ( 100 ) ) or ( ( amount of transaction ) greater than or equal to ( 100 ) ) )": {"{VALUE0}": "100", "{COLUMN0}": "date_of_transaction", "{COLUMN1}": "share_count", "{COLUMN2}": "amount_of_transaction", "{TABLE0}": "transactions", "{OP0}": ">=", "{OP1}": ">="}, "( the number of ( all items ) ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) ) , that have ( ( ( attendance of addresses ) greater than ( 100 ) ) or ( ( ticket price of staff ) less than ( 10 ) ) )": {"{VALUE5}": "100", "{VALUE7}": "10", "{COLUMN0}": "exhibition_id", "{COLUMN1}": "attendance", "{COLUMN2}": "ticket_price", "{TABLE0}": "exhibition record", "{TABLE1}": "exhibition", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "count"}, "( date of transaction ) that belongs to ( transactions ) , that have ( ( ( share count ) greater than ( 100 ) ) or ( ( amount of transaction ) greater than ( 1000 ) ) )": {"{VALUE0}": "100", "{VALUE1}": "1000", "{COLUMN0}": "date_of_transaction", "{COLUMN1}": "share_count", "{COLUMN2}": "amount_of_transaction", "{TABLE0}": "transactions", "{OP0}": ">", "{OP1}": ">"}, "( name of trip ) that belongs to ( ( wedding ) , and ( ( people ) satisfied that ( ( male id of addresses ) equal to ( people id of staff ) ) ) , and ( ( people ) satisfied that ( ( female id of addresses ) equal to ( people id of enzyme ) ) ) , and ( ( church ) satisfied that ( ( church id of trip ) equal to ( church id of addresses ) ) ) ) , that have ( ( ( age of staff ) greater than ( 30 ) ) or ( ( age of enzyme ) greater than ( 30 ) ) )": {"{VALUE12}": "30", "{COLUMN0}": "name", "{COLUMN1}": "male_id", "{COLUMN2}": "people_id", "{COLUMN3}": "female_id", "{COLUMN4}": "church_id", "{COLUMN5}": "age", "{TABLE0}": "wedding", "{TABLE1}": "people", "{TABLE2}": "church", "{OP0}": ">", "{OP1}": ">"}, "( employee id of addresses ) that belongs to ( ( employees ) , and ( ( roles ) satisfied that ( ( role code of addresses ) equal to ( role code of staff ) ) ) ) , that have ( ( ( role name of staff ) equal to ( human resource ) ) or ( ( role name of staff ) equal to ( manager ) ) )": {"{VALUE0}": "human resource", "{VALUE1}": "manager", "{COLUMN0}": "employee_id", "{COLUMN1}": "role_code", "{COLUMN2}": "role_name", "{TABLE0}": "employees", "{TABLE1}": "roles", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( member ) , that have ( ( ( address ) equal to ( 'harford' ) ) or ( ( address ) equal to ( 'waterbury' ) ) )": {"{VALUE0}": "harford", "{VALUE1}": "waterbury", "{COLUMN0}": "name", "{COLUMN1}": "address", "{TABLE0}": "member", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( journalist ) , that have ( ( ( nationality ) equal to ( england ) ) or ( ( nationality ) equal to ( wales ) ) )": {"{VALUE0}": "england", "{VALUE1}": "wales", "{COLUMN0}": "name", "{COLUMN1}": "nationality", "{TABLE0}": "journalist", "{OP0}": "=", "{OP1}": "="}, "( official name ) that belongs to ( city ) , that have ( ( ( population ) greater than ( 1500 ) ) or ( ( population ) less than ( 500 ) ) )": {"{VALUE0}": "1500", "{VALUE1}": "500", "{COLUMN0}": "official_name", "{COLUMN1}": "population", "{TABLE0}": "city", "{OP0}": ">", "{OP1}": "<"}, "( name ) , ( open year ) that belongs to ( manufacturer ) , that have ( ( ( num of shops ) greater than ( 10 ) ) or ( ( num of factories ) less than ( 10 ) ) )": {"{VALUE0}": "10", "{COLUMN0}": "name", "{COLUMN1}": "open_year", "{COLUMN2}": "num_of_shops", "{COLUMN3}": "num_of_factories", "{TABLE0}": "manufacturer", "{OP0}": ">", "{OP1}": "<"}, "( electoral register id of addresses ) that belongs to ( ( electoral register ) , and ( ( cmi cross references ) satisfied that ( ( cmi cross ref id of addresses ) equal to ( cmi cross ref id of staff ) ) ) ) , that have ( ( ( source system code of staff ) equal to ( 'electoral' ) ) or ( ( source system code of staff ) equal to ( 'tax' ) ) )": {"{VALUE0}": "electoral", "{VALUE1}": "tax", "{COLUMN0}": "electoral_register_id", "{COLUMN1}": "cmi_cross_ref_id", "{COLUMN2}": "source_system_code", "{TABLE0}": "electoral register", "{TABLE1}": "cmi cross references", "{OP0}": "=", "{OP1}": "="}, "( the sum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( ( headquarter ) equal to ( 'tokyo' ) ) or ( ( headquarter ) equal to ( 'taiwan' ) ) )": {"{VALUE0}": "tokyo", "{VALUE1}": "taiwan", "{COLUMN0}": "revenue", "{COLUMN1}": "headquarter", "{TABLE0}": "manufacturers", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "sum"}, "( date of latest logon ) that belongs to ( students ) , that have ( ( ( family name ) equal to ( jaskolski ) ) or ( ( family name ) equal to ( langosh ) ) )": {"{VALUE0}": "jaskolski", "{VALUE1}": "langosh", "{COLUMN0}": "date_of_latest_logon", "{COLUMN1}": "family_name", "{TABLE0}": "students", "{OP0}": "=", "{OP1}": "="}, "( the number of ( all items ) ) that belongs to ( student ) , that have ( ( ( city code ) equal to ( hkg ) ) or ( ( city code ) equal to ( chi ) ) )": {"{VALUE0}": "hkg", "{VALUE1}": "chi", "{COLUMN0}": "city_code", "{TABLE0}": "student", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( circuitid ) , ( location ) that belongs to ( circuits ) , that have ( ( ( country ) equal to ( france ) ) or ( ( country ) equal to ( belgium ) ) )": {"{VALUE0}": "france", "{VALUE1}": "belgium", "{COLUMN0}": "circuitid", "{COLUMN1}": "location", "{COLUMN2}": "country", "{TABLE0}": "races", "{OP0}": "=", "{OP1}": "="}, "( the minimum of ( membership amount ) ) , ( the maximum of ( membership amount ) ) that belongs to ( branch ) , that have ( ( ( open year ) equal to ( 2011 ) ) or ( ( city ) equal to ( 'london' ) ) )": {"{VALUE0}": "london", "{VALUE1}": "2011", "{COLUMN0}": "membership_amount", "{COLUMN1}": "open_year", "{COLUMN2}": "city", "{TABLE0}": "branch", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "min", "{AGG1}": "max"}, "( product price ) that belongs to ( products ) , that have ( ( ( product name ) equal to ( dining ) ) or ( ( product name ) equal to ( trading policy ) ) )": {"{VALUE0}": "dining", "{VALUE1}": "trading policy", "{COLUMN0}": "product_price", "{COLUMN1}": "product_name", "{TABLE0}": "products", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( races ) , that have ( ( ( time ) greater than ( 12:00:00 ) ) or ( ( time ) less than ( 09:00:00 ) ) )": {"{VALUE0}": "12:00:00", "{VALUE1}": "09:00:00", "{COLUMN0}": "name", "{COLUMN1}": "time", "{TABLE0}": "drivers", "{OP0}": ">", "{OP1}": "<"}, "( name ) that belongs to ( circuits ) , that have ( ( ( country ) equal to ( uk ) ) or ( ( country ) equal to ( malaysia ) ) )": {"{VALUE0}": "uk", "{VALUE1}": "malaysia", "{COLUMN0}": "name", "{COLUMN1}": "country", "{TABLE0}": "races", "{OP0}": "=", "{OP1}": "="}, "( distinct ( invoice details ) ) that belongs to ( invoices ) , that have ( ( ( invoice date ) less than ( 1989-09-03 ) ) or ( ( invoice date ) greater than ( 2007-12-25 ) ) )": {"{VALUE0}": "1989-09-03", "{VALUE1}": "2007-12-25", "{COLUMN0}": "invoice_details", "{COLUMN1}": "invoice_date", "{TABLE0}": "invoices", "{OP0}": "<", "{OP1}": ">"}, "( roomname ) that belongs to ( rooms ) , that have ( ( ( bedtype ) equal to ( king ) ) or ( ( bedtype ) equal to ( queen ) ) )": {"{VALUE0}": "king", "{VALUE1}": "queen", "{COLUMN0}": "roomname", "{COLUMN1}": "bedtype", "{TABLE0}": "rooms", "{OP0}": "=", "{OP1}": "="}, "( name of staff ) , ( the average of ( age of addresses ) ) that belongs to ( ( person ) , and ( ( personfriend ) satisfied that ( ( name of addresses ) equal to ( friend of staff ) ) ) ) , grouped by ( name of staff ) , ordered by ( ( the average of ( age of addresses ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "friend", "{TABLE0}": "person", "{TABLE1}": "person friend", "{AGG0}": "avg", "{AGG1}": "avg", "{SC0}": "desc"}, "( color of addresses ) that belongs to ( ( grapes ) , and ( ( wine ) satisfied that ( ( grape of addresses ) equal to ( grape of staff ) ) ) ) , grouped by ( grape of staff ) , ordered by ( ( the average of ( price ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "color", "{COLUMN1}": "grape", "{COLUMN2}": "price", "{TABLE0}": "grapes", "{TABLE1}": "wine", "{AGG0}": "avg", "{SC0}": "desc"}, "( title of staff ) , ( the average of ( stars of addresses ) ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , grouped by ( mid of addresses ) , ordered by ( ( the average of ( stars of addresses ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "title", "{COLUMN1}": "stars", "{COLUMN2}": "mid", "{TABLE0}": "rating", "{TABLE1}": "movie", "{AGG0}": "avg", "{AGG1}": "avg", "{SC0}": "desc"}, "( customer id ) , ( the sum of ( amount paid ) ) that belongs to ( payments ) , grouped by ( customer id ) , ordered by ( ( the sum of ( amount paid ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "customer_id", "{COLUMN1}": "amount_paid", "{TABLE0}": "payments", "{AGG0}": "sum", "{AGG1}": "sum", "{SC0}": "desc"}, "( major ) , ( the number of ( all items ) ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( major ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "major", "{TABLE0}": "student", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "asc"}, "( bname of addresses ) that belongs to ( ( bank ) , and ( ( loan ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , grouped by ( bname of addresses ) , ordered by ( ( the sum of ( amount of staff ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "bname", "{COLUMN1}": "branch_id", "{COLUMN2}": "amount", "{TABLE0}": "bank", "{TABLE1}": "loan", "{AGG0}": "sum", "{SC0}": "desc"}, "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , ordered by ( ( the sum of ( amount of staff ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "amount", "{TABLE0}": "customer", "{TABLE1}": "loan", "{AGG0}": "sum", "{SC0}": "desc"}, "( effective date of club ) that belongs to ( ( claims ) , and ( ( settlements ) satisfied that ( ( claim id of club ) equal to ( claim id of member of club ) ) ) ) , grouped by ( claim id of club ) , ordered by ( ( the sum of ( settlement amount of member of club ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "effective_date", "{COLUMN1}": "claim_id", "{COLUMN2}": "settlement_amount", "{TABLE0}": "claims", "{TABLE1}": "settlements", "{AGG0}": "sum", "{SC0}": "desc"}, "( first name of addresses ) , ( last name of addresses ) , ( customer id of addresses ) that belongs to ( ( customer ) , and ( ( payment ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , ordered by ( ( the sum of ( amount ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "customer_id", "{COLUMN3}": "amount", "{TABLE0}": "customer", "{TABLE1}": "payment", "{AGG0}": "sum", "{SC0}": "asc"}, "( dept name of enzyme ) that belongs to ( ( course ) , and ( ( class ) satisfied that ( ( crs code of addresses ) equal to ( crs code of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of enzyme ) ) ) ) , grouped by ( dept code of addresses ) , ordered by ( ( the sum of ( crs credit of addresses ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "crs_code", "{COLUMN2}": "dept_code", "{COLUMN3}": "crs_credit", "{TABLE0}": "course", "{TABLE1}": "class", "{TABLE2}": "department", "{AGG0}": "sum", "{SC0}": "desc"}, "( year ) that belongs to ( degrees ) , grouped by ( year ) , ordered by ( ( the sum of ( degrees ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "year", "{COLUMN1}": "degrees", "{AGG0}": "sum", "{SC0}": "desc"}, "( billing country ) , ( the sum of ( total ) ) that belongs to ( invoices ) , grouped by ( billing country ) , ordered by ( ( the sum of ( total ) ) in descending order ) , limited to the top ( 8 )": {"{VALUE0}": "8", "{COLUMN0}": "billing_country", "{COLUMN1}": "total", "{TABLE0}": "invoices", "{AGG0}": "sum", "{AGG1}": "sum", "{SC0}": "desc"}, "( campus ) that belongs to ( degrees ) , grouped by ( campus ) , ordered by ( ( the sum of ( degrees ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "campus", "{COLUMN1}": "degrees", "{AGG0}": "sum", "{SC0}": "desc"}, "( name of addresses ) , ( team id of addresses ) that belongs to ( ( team ) , and ( ( salary ) satisfied that ( ( team id of addresses ) equal to ( team id of staff ) ) ) ) , grouped by ( team id of addresses ) , ordered by ( ( the average of ( salary of staff ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "team_id", "{COLUMN2}": "salary", "{TABLE0}": "team", "{AGG0}": "avg", "{SC0}": "asc"}, "( title of addresses ) , ( i id of addresses ) that belongs to ( ( item ) , and ( ( review ) satisfied that ( ( i id of addresses ) equal to ( i id of staff ) ) ) ) , grouped by ( i id of staff ) , ordered by ( ( the average of ( rank of staff ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "title", "{COLUMN1}": "i_id", "{COLUMN2}": "rank", "{TABLE0}": "item", "{TABLE1}": "review", "{AGG0}": "avg", "{SC0}": "desc"}, "( state ) that belongs to ( bank ) , grouped by ( state ) , ordered by ( ( the sum of ( no of customers ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "state", "{COLUMN1}": "no_of_customers", "{TABLE0}": "bank", "{AGG0}": "sum", "{SC0}": "desc"}, "( dept name ) that belongs to ( course ) , grouped by ( dept name ) , ordered by ( ( the sum of ( credits ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "credits", "{TABLE0}": "course", "{AGG0}": "sum", "{SC0}": "desc"}, "( decor of staff ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , grouped by ( decor of staff ) , ordered by ( ( the number of ( decor of staff ) ) in ascending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "decor", "{COLUMN1}": "room", "{COLUMN2}": "roomid", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{AGG0}": "count", "{SC0}": "asc"}, "( apt type code ) , ( bathroom count ) , ( bedroom count ) that belongs to ( apartments ) , grouped by ( apt type code ) , ordered by ( ( the sum of ( room count ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "apt_type_code", "{COLUMN1}": "bathroom_count", "{COLUMN2}": "bedroom_count", "{COLUMN3}": "room_count", "{TABLE0}": "apartments", "{AGG0}": "sum", "{SC0}": "desc"}, "( billing country ) , ( the average of ( total ) ) that belongs to ( invoices ) , grouped by ( billing country ) , ordered by ( ( the average of ( total ) ) in descending order ) , limited to the top ( 10 )": {"{VALUE0}": "10", "{COLUMN0}": "billing_country", "{COLUMN1}": "total", "{TABLE0}": "invoices", "{AGG0}": "avg", "{AGG1}": "avg", "{SC0}": "desc"}, "( investor id ) , ( the number of ( all items ) ) that belongs to ( transactions ) , that have ( ( transaction type code ) equal to ( sale ) ) , grouped by ( investor id )": {"{VALUE0}": "sale", "{COLUMN0}": "investor_id", "{COLUMN1}": "transaction_type_code", "{TABLE0}": "transactions", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( sex ) that belongs to ( people ) , that have ( ( weight ) greater than ( 85 ) ) , grouped by ( sex )": {"{VALUE0}": "85", "{COLUMN0}": "sex", "{COLUMN1}": "weight", "{TABLE0}": "people", "{OP0}": ">", "{AGG0}": "count"}, "( name of staff ) , ( the number of ( all items ) ) that belongs to ( ( membership register branch ) , and ( ( branch ) satisfied that ( ( branch id of addresses ) equal to ( branch id of staff ) ) ) ) , that have ( ( register year of addresses ) greater than ( 2015 ) ) , grouped by ( branch id of staff )": {"{VALUE6}": "2015", "{COLUMN0}": "name", "{COLUMN1}": "branch_id", "{COLUMN2}": "register_year", "{TABLE0}": "membership register branch", "{TABLE1}": "branch", "{OP0}": ">", "{AGG0}": "count"}, "( classroom ) , ( the number of ( all items ) ) that belongs to ( list ) , that have ( ( grade ) equal to ( 0 ) ) , grouped by ( classroom )": {"{VALUE0}": "0", "{VALUE1}": "0", "{COLUMN0}": "classroom", "{COLUMN1}": "grade", "{TABLE0}": "list", "{OP0}": "=", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( affiliation ) that belongs to ( university ) , that have ( ( enrollment ) greater than ( 20000 ) ) , grouped by ( affiliation )": {"{VALUE0}": "20000", "{COLUMN0}": "affiliation", "{COLUMN1}": "enrollment", "{TABLE0}": "university", "{OP0}": ">", "{AGG0}": "count"}, "( the average of ( acc bal ) ) , ( acc type ) that belongs to ( customer ) , that have ( ( credit score ) less than ( 50 ) ) , grouped by ( acc type )": {"{VALUE0}": "50", "{COLUMN0}": "acc_bal", "{COLUMN1}": "acc_type", "{COLUMN2}": "credit_score", "{TABLE0}": "customer", "{OP0}": "<", "{AGG0}": "avg"}, "( the number of ( all items ) ) , ( dorm name of enzyme ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) , and ( ( dorm ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of staff ) ) ) ) , that have ( ( age of addresses ) greater than ( 20 ) ) , grouped by ( dorm name of enzyme )": {"{VALUE9}": "20", "{COLUMN0}": "dorm_name", "{COLUMN1}": "stuid", "{COLUMN2}": "dormid", "{COLUMN3}": "age", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{OP0}": ">", "{AGG0}": "count"}, "( decor ) , ( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( baseprice ) greater than ( 120 ) ) , grouped by ( decor )": {"{VALUE0}": "120", "{COLUMN0}": "decor", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms", "{OP0}": ">", "{AGG0}": "count"}, "( the average of ( age ) ) , ( job ) that belongs to ( person ) , that have ( ( gender ) equal to ( 'male' ) ) , grouped by ( job )": {"{VALUE0}": "male", "{COLUMN0}": "age", "{COLUMN1}": "job", "{COLUMN2}": "gender", "{TABLE0}": "person", "{OP0}": "=", "{AGG0}": "avg"}, "( decor ) , ( the number of ( all items ) ) that belongs to ( rooms ) , that have ( ( bedtype ) equal to ( king ) ) , grouped by ( decor )": {"{VALUE0}": "king", "{COLUMN0}": "decor", "{COLUMN1}": "bedtype", "{TABLE0}": "rooms", "{OP0}": "=", "{AGG0}": "count"}, "( the maximum of ( hs of addresses ) ) , ( ppos ) that belongs to ( ( player ) , and ( ( tryout ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( hs of addresses ) greater than ( 1000 ) ) , grouped by ( ppos of staff )": {"{VALUE6}": "1000", "{COLUMN0}": "hs", "{COLUMN1}": "ppos", "{COLUMN2}": "pid", "{TABLE0}": "player", "{TABLE1}": "tryout", "{OP0}": ">", "{AGG0}": "max"}, "( zip code ) , ( the number of ( all items ) ) that belongs to ( weather ) , that have ( ( max wind speed mph ) greater than or equal to ( 25 ) ) , grouped by ( zip code )": {"{VALUE0}": "25", "{COLUMN0}": "zip_code", "{COLUMN1}": "max_wind_speed_mph", "{TABLE0}": "weather", "{OP0}": ">=", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( sex ) that belongs to ( employee ) , that have ( ( salary ) less than ( 50000 ) ) , grouped by ( sex )": {"{VALUE0}": "50000", "{COLUMN0}": "sex", "{COLUMN1}": "salary", "{TABLE0}": "employee", "{OP0}": "<", "{AGG0}": "count"}, "( the number of ( all items ) ) , ( dormid of addresses ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of addresses ) equal to ( dormid of staff ) ) ) ) , that have ( ( student capacity of addresses ) greater than ( 100 ) ) , grouped by ( dormid of addresses )": {"{VALUE6}": "100", "{COLUMN0}": "dormid", "{COLUMN1}": "student_capacity", "{TABLE0}": "dorm", "{TABLE1}": "has amenity", "{OP0}": ">", "{AGG0}": "count"}, "( billing state ) , ( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( billing country ) equal to ( usa ) ) , grouped by ( billing state )": {"{VALUE0}": "usa", "{COLUMN0}": "billing_state", "{COLUMN1}": "billing_country", "{TABLE0}": "invoices", "{OP0}": "=", "{AGG0}": "count"}, "( gender of addresses ) , ( artist name of addresses ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , ordered by ( ( resolution of staff ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "gender", "{COLUMN1}": "artist_name", "{COLUMN2}": "resolution", "{TABLE0}": "artist", "{TABLE1}": "song"}, "( lat of addresses ) , ( long of addresses ) , ( city of addresses ) that belongs to ( ( station ) , and ( ( trip ) satisfied that ( ( id of addresses ) equal to ( start station id of staff ) ) ) ) , ordered by ( ( duration of staff ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "lat", "{COLUMN1}": "long", "{COLUMN2}": "city", "{COLUMN3}": "id", "{COLUMN4}": "start_station_id", "{COLUMN5}": "duration", "{TABLE0}": "station", "{TABLE1}": "trip"}, "( team name of member of club ) , ( acc regular season of member of club ) that belongs to ( ( university ) , and ( ( basketball match ) satisfied that ( ( school id of club ) equal to ( school id of member of club ) ) ) ) , ordered by ( ( founded of club ) ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{COLUMN0}": "team_name", "{COLUMN1}": "acc_regular_season", "{COLUMN2}": "school_id", "{COLUMN3}": "founded", "{TABLE0}": "university", "{TABLE1}": "basketball match"}, "( name ) , ( lat ) , ( city ) that belongs to ( station ) , ordered by ( ( lat ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "lat", "{COLUMN2}": "city", "{TABLE0}": "station"}, "( product id ) , ( product type code ) that belongs to ( products ) , ordered by ( ( product price ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "product_id", "{COLUMN1}": "product_type_code", "{COLUMN2}": "product_price", "{TABLE0}": "products"}, "( name of club ) that belongs to ( ( ship ) , and ( ( captain ) satisfied that ( ( ship id of club ) equal to ( ship id of member of club ) ) ) ) , ordered by ( ( age of member of club ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "ship_id", "{COLUMN2}": "age", "{TABLE0}": "ship", "{TABLE1}": "captain"}, "( winery ) that belongs to ( wine ) , ordered by ( ( score ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "winery", "{COLUMN1}": "score", "{TABLE0}": "wine"}, "( name of club ) , ( age of club ) that belongs to ( ( pilot ) , and ( ( match ) satisfied that ( ( pilot id of club ) equal to ( winning pilot of member of club ) ) ) ) , ordered by ( ( age of club ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "age", "{COLUMN2}": "pilot_id", "{COLUMN3}": "winning_pilot", "{TABLE0}": "pilot", "{TABLE1}": "match"}, "( order id ) , ( customer id ) that belongs to ( orders ) , ordered by ( ( date order placed ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "order_id", "{COLUMN1}": "customer_id", "{COLUMN2}": "date_order_placed", "{TABLE0}": "orders"}, "( name ) that belongs to ( wine ) , ordered by ( ( score ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "score", "{TABLE0}": "wine"}, "( dept name of staff ) that belongs to ( ( student ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) ) , ordered by ( ( stu gpa ) ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "dept_code", "{COLUMN2}": "stu_gpa", "{TABLE0}": "student", "{TABLE1}": "department"}, "( name ) , ( num of component ) that belongs to ( furniture ) , ordered by ( ( market rate ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "name", "{COLUMN1}": "num_of_component", "{COLUMN2}": "market_rate", "{TABLE0}": "furniture"}, "( last name of club ) that belongs to ( ( staff ) , and ( ( complaints ) satisfied that ( ( staff id of club ) equal to ( staff id of member of club ) ) ) ) , ordered by ( ( date complaint raised of member of club ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "last_name", "{COLUMN1}": "staff_id", "{COLUMN2}": "date_complaint_raised", "{TABLE0}": "staff", "{TABLE1}": "complaints"}, "( problem log id ) , ( problem id ) that belongs to ( problem log ) , ordered by ( ( log entry date ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "problem_log_id", "{COLUMN1}": "problem_id", "{COLUMN2}": "log_entry_date", "{TABLE0}": "problem log"}, "( name ) that belongs to ( procedures ) , ordered by ( ( cost ) ) , limited to the top ( 3 )": {"{VALUE0}": "3", "{COLUMN0}": "name", "{COLUMN1}": "procedures", "{COLUMN2}": "cost"}, "( emp fname ) , ( emp lname ) that belongs to ( employee ) , ordered by ( ( emp dob ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_lname", "{COLUMN2}": "emp_dob", "{TABLE0}": "employee"}, "( grape ) , ( winery ) , ( year ) that belongs to ( wine ) , that have ( ( price ) greater than ( 100 ) ) , ordered by ( ( year ) )": {"{VALUE0}": "100", "{COLUMN0}": "grape", "{COLUMN1}": "winery", "{COLUMN2}": "year", "{COLUMN3}": "price", "{TABLE0}": "wine", "{OP0}": ">"}, "( title of addresses ) , ( name of enzyme ) that belongs to ( ( course ) , and ( ( teaches ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) , and ( ( instructor ) satisfied that ( ( id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( year ) equal to ( 2008 ) ) , ordered by ( ( title of addresses ) )": {"{VALUE9}": "2008", "{COLUMN0}": "title", "{COLUMN1}": "name", "{COLUMN2}": "course_id", "{COLUMN3}": "id", "{COLUMN4}": "year", "{TABLE0}": "course", "{TABLE1}": "teaches", "{TABLE2}": "instructor", "{OP0}": "="}, "( duration of addresses ) , ( file size of addresses ) , ( formats of addresses ) that belongs to ( ( files ) , and ( ( song ) satisfied that ( ( f id of addresses ) equal to ( f id of staff ) ) ) ) , that have ( ( genre is of staff ) equal to ( pop ) ) , ordered by ( ( song name of staff ) )": {"{VALUE0}": "pop", "{COLUMN0}": "duration", "{COLUMN1}": "file_size", "{COLUMN2}": "formats", "{COLUMN3}": "f_id", "{COLUMN4}": "genre_is", "{COLUMN5}": "song_name", "{TABLE0}": "files", "{TABLE1}": "song", "{OP0}": "="}, "( first name ) , ( last name ) , ( gender mf ) that belongs to ( customers ) , that have ( ( good or bad customer ) equal to ( 'good' ) ) , ordered by ( ( last name ) )": {"{VALUE0}": "good", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "gender_mf", "{COLUMN3}": "good_or_bad_customer", "{TABLE0}": "customers", "{OP0}": "="}, "( name of staff ) that belongs to ( ( advisor ) , and ( ( instructor ) satisfied that ( ( i id of addresses ) equal to ( id of staff ) ) ) , and ( ( student ) satisfied that ( ( s id of addresses ) equal to ( id of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'math' ) ) , ordered by ( ( tot cred of enzyme ) )": {"{VALUE0}": "math", "{COLUMN0}": "name", "{COLUMN1}": "i_id", "{COLUMN2}": "id", "{COLUMN3}": "s_id", "{COLUMN4}": "dept_name", "{COLUMN5}": "tot_cred", "{TABLE0}": "advisor", "{TABLE1}": "instructor", "{TABLE2}": "student", "{OP0}": "="}, "( order id ) , ( customer id ) that belongs to ( customer orders ) , that have ( ( order status code ) equal to ( cancelled ) ) , ordered by ( ( order date ) )": {"{VALUE0}": "cancelled", "{COLUMN0}": "order_id", "{COLUMN1}": "customer_id", "{COLUMN2}": "order_status_code", "{COLUMN3}": "order_date", "{TABLE0}": "customer orders", "{OP0}": "="}, "( f id ) , ( genre is ) , ( artist name ) that belongs to ( song ) , that have ( ( languages ) equal to ( english ) ) , ordered by ( ( rating ) )": {"{VALUE0}": "english", "{COLUMN0}": "f_id", "{COLUMN1}": "genre_is", "{COLUMN2}": "artist_name", "{COLUMN3}": "languages", "{COLUMN4}": "rating", "{TABLE0}": "song", "{OP0}": "="}, "( name ) that belongs to ( person ) , that have ( ( gender ) equal to ( 'male' ) ) , ordered by ( ( age ) )": {"{VALUE0}": "male", "{COLUMN0}": "name", "{COLUMN1}": "gender", "{COLUMN2}": "age", "{TABLE0}": "person", "{OP0}": "="}, "( student id of staff ) that belongs to ( ( courses ) , and ( ( student course registrations ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( course name of addresses ) equal to ( statistics ) ) , ordered by ( ( registration date of staff ) )": {"{VALUE0}": "statistics", "{COLUMN0}": "student_id", "{COLUMN1}": "course_id", "{COLUMN2}": "course_name", "{COLUMN3}": "registration_date", "{TABLE0}": "courses", "{TABLE1}": "student course registrations", "{OP0}": "="}, "( emp fname ) that belongs to ( employee ) , that have ( ( emp jobcode ) equal to ( 'prof' ) ) , ordered by ( ( emp dob ) )": {"{VALUE0}": "prof", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_jobcode", "{COLUMN2}": "emp_dob", "{TABLE0}": "employee", "{OP0}": "="}, "( fname ) that belongs to ( faculty ) , that have ( ( rank ) equal to ( professor ) ) , ordered by ( ( fname ) )": {"{VALUE0}": "professor", "{COLUMN0}": "fname", "{COLUMN1}": "rank", "{TABLE0}": "faculty", "{OP0}": "="}, "( id ) that belongs to ( trip ) , that have ( ( duration ) greater than or equal to ( the average of ( duration ) ) that belongs to ( trip ) , that have ( ( zip code ) equal to ( 94103 ) ) )": {"{VALUE0}": "94103", "{COLUMN0}": "id", "{COLUMN1}": "duration", "{COLUMN2}": "zip_code", "{TABLE0}": "trip", "{OP0}": ">=", "{OP1}": "=", "{AGG0}": "avg"}, "( distinct ( driverid ) ) , ( stop ) that belongs to ( pitstops ) , that have ( ( duration ) greater than ( the minimum of ( duration ) ) that belongs to ( pitstops ) , that have ( ( raceid ) equal to ( 841 ) ) )": {"{VALUE0}": "841", "{COLUMN0}": "driverid", "{COLUMN1}": "stop", "{COLUMN2}": "duration", "{COLUMN3}": "raceid", "{TABLE0}": "pitstops", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "( name ) that belongs to ( instructor ) , that have ( ( salary ) greater than ( the minimum of ( salary ) ) that belongs to ( instructor ) , that have ( ( dept name ) equal to ( 'biology' ) ) )": {"{VALUE0}": "biology", "{COLUMN0}": "name", "{COLUMN1}": "salary", "{COLUMN2}": "dept_name", "{TABLE0}": "instructor", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "( the sum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( revenue ) greater than ( the minimum of ( revenue ) ) that belongs to ( manufacturers ) , that have ( ( headquarter ) equal to ( 'austin' ) ) )": {"{VALUE0}": "austin", "{COLUMN0}": "revenue", "{COLUMN1}": "headquarter", "{TABLE0}": "manufacturers", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "sum", "{AGG1}": "min"}, "( f id ) that belongs to ( song ) , that have ( ( resolution ) greater than ( the maximum of ( resolution ) ) that belongs to ( song ) , that have ( ( rating ) less than ( 8 ) ) )": {"{VALUE0}": "8", "{COLUMN0}": "f_id", "{COLUMN1}": "resolution", "{COLUMN2}": "rating", "{TABLE0}": "song", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "max"}, "( employee id ) , ( salary ) that belongs to ( employees ) , that have ( ( manager id ) equal to ( employee id ) that belongs to ( employees ) , that have ( ( first name ) equal to ( 'payam' ) ) )": {"{VALUE0}": "payam", "{COLUMN0}": "employee_id", "{COLUMN1}": "salary", "{COLUMN2}": "manager_id", "{COLUMN3}": "first_name", "{TABLE0}": "employees", "{OP0}": "=", "{OP1}": "="}, "( title ) that belongs to ( movie ) , that have ( ( year ) greater than ( the maximum of ( year ) ) that belongs to ( movie ) , that have ( ( director ) equal to ( steven spielberg ) ) )": {"{VALUE0}": "steven spielberg", "{COLUMN0}": "title", "{COLUMN1}": "year", "{COLUMN2}": "director", "{TABLE0}": "movie", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "max"}, "( staff id ) that belongs to ( staff department assignments ) , that have ( ( date assigned to ) less than ( the maximum of ( date assigned to ) ) that belongs to ( staff department assignments ) , that have ( ( job title code ) equal to ( 'clerical staff' ) ) )": {"{VALUE0}": "clerical staff", "{COLUMN0}": "staff_id", "{COLUMN1}": "date_assigned_to", "{COLUMN2}": "job_title_code", "{TABLE0}": "staff department assignments", "{OP0}": "<", "{OP1}": "=", "{AGG0}": "max"}, "( distinct ( cname ) ) that belongs to ( college ) , that have ( ( enr ) greater than ( the minimum of ( enr ) ) that belongs to ( college ) , that have ( ( state ) equal to ( 'fl' ) ) )": {"{VALUE0}": "fl", "{COLUMN0}": "cname", "{COLUMN1}": "enr", "{COLUMN2}": "state", "{TABLE0}": "college", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "( distinct ( customer id ) ) that belongs to ( customer orders ) , that have ( ( order date ) greater than ( the minimum of ( order date ) ) that belongs to ( customer orders ) , that have ( ( order status code ) equal to ( cancelled ) ) )": {"{VALUE0}": "cancelled", "{COLUMN0}": "customer_id", "{COLUMN1}": "order_date", "{COLUMN2}": "order_status_code", "{TABLE0}": "customer orders", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "min"}, "( id of addresses ) that belongs to ( ( trip ) , and ( ( weather ) satisfied that ( ( zip code of addresses ) equal to ( zip code of staff ) ) ) ) , grouped by ( zip code of staff ) , that have ( ( the average of ( mean temperature f of staff ) ) greater than ( 60 ) )": {"{VALUE7}": "60", "{COLUMN0}": "id", "{COLUMN1}": "zip_code", "{COLUMN2}": "mean_temperature_f", "{TABLE0}": "trip", "{TABLE1}": "weather", "{OP0}": ">", "{AGG0}": "avg"}, "( name of enzyme ) that belongs to ( ( exhibition record ) , and ( ( exhibition ) satisfied that ( ( exhibition id of addresses ) equal to ( exhibition id of staff ) ) ) , and ( ( artist ) satisfied that ( ( artist id of enzyme ) equal to ( artist id of staff ) ) ) ) , grouped by ( artist id of enzyme ) , that have ( ( the average of ( attendance of addresses ) ) greater than ( 200 ) )": {"{VALUE10}": "200", "{COLUMN0}": "name", "{COLUMN1}": "exhibition_id", "{COLUMN2}": "artist_id", "{COLUMN3}": "attendance", "{TABLE0}": "exhibition record", "{TABLE1}": "exhibition", "{TABLE2}": "artist", "{OP0}": ">", "{AGG0}": "avg"}, "( title of addresses ) that belongs to ( ( albums ) , and ( ( tracks ) satisfied that ( ( id of addresses ) equal to ( album id of staff ) ) ) ) , grouped by ( id of addresses ) , that have ( ( the number of ( id of addresses ) ) greater than ( 10 ) )": {"{VALUE7}": "10", "{COLUMN0}": "title", "{COLUMN1}": "id", "{COLUMN2}": "album_id", "{TABLE0}": "albums", "{TABLE1}": "tracks", "{OP0}": ">", "{AGG0}": "count"}, "( the number of ( distinct ( dept name ) ) ) , ( school code ) that belongs to ( department ) , grouped by ( school code ) , that have ( ( the number of ( distinct ( dept name ) ) ) less than ( 5 ) )": {"{VALUE0}": "5", "{COLUMN0}": "dept_name", "{COLUMN1}": "school_code", "{TABLE0}": "department", "{OP0}": "<", "{AGG0}": "count", "{AGG1}": "count"}, "( name of staff ) that belongs to ( ( playlist tracks ) , and ( ( playlists ) satisfied that ( ( id of staff ) equal to ( playlist id of addresses ) ) ) ) , grouped by ( playlist id of addresses ) , that have ( ( the number of ( track id of addresses ) ) greater than ( 100 ) )": {"{VALUE7}": "100", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "playlist_id", "{COLUMN3}": "track_id", "{TABLE0}": "playlist tracks", "{TABLE1}": "playlists", "{OP0}": ">", "{AGG0}": "count"}, "( product name ) that belongs to ( products ) , grouped by ( product name ) , that have ( ( the average of ( product price ) ) less than ( 1000000 ) )": {"{VALUE0}": "1000000", "{COLUMN0}": "product_name", "{COLUMN1}": "product_price", "{TABLE0}": "products", "{OP0}": "<", "{AGG0}": "avg"}, "( channel code ) that belongs to ( customer contact channels ) , grouped by ( channel code ) , that have ( ( the number of ( customer id ) ) less than ( 5 ) )": {"{VALUE0}": "5", "{COLUMN0}": "channel_code", "{COLUMN1}": "customer_id", "{TABLE0}": "customer contact channels", "{OP0}": "<", "{AGG0}": "count"}, "( gname ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) ) , grouped by ( gameid of addresses ) , that have ( ( the sum of ( hours played ) ) greater than or equal to ( 1000 ) )": {"{VALUE5}": "1000", "{COLUMN0}": "gname", "{COLUMN1}": "gameid", "{COLUMN2}": "hours_played", "{TABLE0}": "plays games", "{TABLE1}": "video games", "{OP0}": ">=", "{AGG0}": "sum"}, "( job id ) that belongs to ( employees ) , grouped by ( job id ) , that have ( ( the average of ( salary ) ) greater than ( 8000 ) )": {"{VALUE0}": "8000", "{COLUMN0}": "job_id", "{COLUMN1}": "salary", "{TABLE0}": "employees", "{OP0}": ">", "{AGG0}": "avg"}, "( name ) , ( flag ) that belongs to ( ship ) , that have ( ( ship_id ) not in ( ( ship id ) that belongs to ( captain ) , that have ( ( rank ) equal to ( 'midshipman' ) ) ) )": {"{VALUE0}": "midshipman", "{COLUMN0}": "name", "{COLUMN1}": "flag", "{COLUMN2}": "ship_id", "{COLUMN3}": "rank", "{TABLE0}": "ship", "{TABLE1}": "captain", "{OP0}": "="}, "( name of staff ) that belongs to ( ( train station ) , and ( ( train ) satisfied that ( ( train id of addresses ) equal to ( train id of staff ) ) ) ) , that have ( ( t1.station_id ) not in ( ( station id of trip ) that belongs to ( ( train station ) , and ( ( station ) satisfied that ( ( station id of enzyme ) equal to ( station id of trip ) ) ) ) , that have ( ( location of inst ) equal to ( london ) ) ) )": {"{VALUE0}": "london", "{COLUMN0}": "name", "{COLUMN1}": "train_id", "{COLUMN2}": "station_id", "{COLUMN3}": "location", "{TABLE0}": "train station", "{TABLE1}": "train", "{TABLE2}": "station", "{OP0}": "="}, "( fname of addresses ) , ( age of addresses ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( t2.dormid ) not in ( ( dormid of enzyme ) that belongs to ( ( has amenity ) , and ( ( dorm amenity ) satisfied that ( ( amenid of enzyme ) equal to ( amenid of trip ) ) ) ) , that have ( ( amenity name of trip ) equal to ( 'tv lounge' ) ) ) )": {"{VALUE0}": "tv lounge", "{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "dormid", "{COLUMN4}": "amenid", "{COLUMN5}": "amenity_name", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "has amenity", "{TABLE3}": "dorm amenity", "{OP0}": "="}, "( name ) that belongs to ( pilot ) , that have ( ( pilot_id ) not in ( ( winning pilot ) that belongs to ( match ) , that have ( ( country ) equal to ( 'australia' ) ) ) )": {"{VALUE0}": "australia", "{COLUMN0}": "name", "{COLUMN1}": "pilot_id", "{COLUMN2}": "winning_pilot", "{COLUMN3}": "country", "{TABLE0}": "pilot", "{TABLE1}": "match", "{OP0}": "="}, "( project details ) that belongs to ( projects ) , that have ( ( project_id ) not in ( ( project id ) that belongs to ( project staff ) , that have ( ( role code ) equal to ( 'researcher' ) ) ) )": {"{VALUE0}": "researcher", "{COLUMN0}": "project_details", "{COLUMN1}": "project_id", "{COLUMN2}": "role_code", "{TABLE0}": "projects", "{TABLE1}": "project staff", "{OP0}": "="}, "( the average of ( price ) ) that belongs to ( wine ) , that have ( ( appelation ) not in ( ( appelation of addresses ) that belongs to ( ( appellations ) , and ( ( wine ) satisfied that ( ( appelation of addresses ) equal to ( appelation of staff ) ) ) ) , that have ( ( county of addresses ) equal to ( 'sonoma' ) ) ) )": {"{VALUE0}": "sonoma", "{COLUMN0}": "price", "{COLUMN1}": "appelation", "{COLUMN2}": "county", "{TABLE0}": "wine", "{TABLE1}": "appellations", "{OP0}": "=", "{AGG0}": "avg"}, "( the number of ( distinct ( name ) ) ) that belongs to ( personfriend ) , that have ( ( friend ) not in ( ( name ) that belongs to ( person ) , that have ( ( city ) equal to ( 'austin' ) ) ) )": {"{VALUE0}": "austin", "{COLUMN0}": "name", "{COLUMN1}": "friend", "{COLUMN2}": "city", "{TABLE0}": "person friend", "{TABLE1}": "person", "{OP0}": "=", "{AGG0}": "count"}, "( fname ) , ( lname ) that belongs to ( student ) , that have ( ( stuid ) not in ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) ) ) )": {"{VALUE0}": "food", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "stuid", "{COLUMN3}": "allergy", "{COLUMN4}": "allergytype", "{TABLE0}": "student", "{TABLE1}": "has allergy", "{TABLE2}": "allergy type", "{OP0}": "="}, "( the number of ( all items ) ) that belongs to ( country ) , that have ( ( country_id ) not in ( ( country id ) that belongs to ( roller coaster ) , that have ( ( length ) greater than ( 3000 ) ) ) )": {"{VALUE0}": "3000", "{COLUMN0}": "country_id", "{COLUMN1}": "length", "{TABLE0}": "country", "{TABLE1}": "roller coaster", "{OP0}": ">", "{AGG0}": "count"}, "( name of staff ) , ( team id winner of addresses ) that belongs to ( ( postseason ) , and ( ( team ) satisfied that ( ( team id winner of addresses ) equal to ( team id br of staff ) ) ) ) , that have ( ( year of addresses ) equal to ( 2008 ) ) , grouped by ( team id winner of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{VALUE7}": "2008", "{COLUMN0}": "name", "{COLUMN1}": "team_id_winner", "{COLUMN2}": "team_id_br", "{COLUMN3}": "year", "{TABLE0}": "postseason", "{TABLE1}": "team", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( cloud cover ) that belongs to ( weather ) , that have ( ( zip code ) equal to ( 94107 ) ) , grouped by ( cloud cover ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "94107", "{VALUE1}": "3", "{COLUMN0}": "cloud_cover", "{COLUMN1}": "zip_code", "{TABLE0}": "weather", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( apt type code ) that belongs to ( apartments ) , that have ( ( bathroom count ) greater than ( 1 ) ) , grouped by ( apt type code ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "apt_type_code", "{COLUMN1}": "bathroom_count", "{TABLE0}": "apartments", "{OP0}": ">", "{AGG0}": "count", "{SC0}": "desc"}, "( clubname of club ) that belongs to ( ( club ) , and ( ( member of club ) satisfied that ( ( clubid of club ) equal to ( clubid of member of club ) ) ) , and ( ( student ) satisfied that ( ( stuid of member of club ) equal to ( stuid of student ) ) ) ) , that have ( ( sex of student ) equal to ( f ) ) , grouped by ( clubname of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "f", "{VALUE1}": "1", "{COLUMN0}": "clubname", "{COLUMN1}": "clubid", "{COLUMN2}": "stuid", "{COLUMN3}": "sex", "{TABLE0}": "club", "{TABLE1}": "member of club", "{TABLE2}": "student", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( start station name ) , ( start station id ) that belongs to ( trip ) , that have ( ( start_date ) like ( 8/% ) ) , grouped by ( start station name ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "8/", "{VALUE2}": "1", "{COLUMN0}": "start_station_name", "{COLUMN1}": "start_station_id", "{COLUMN2}": "start_date", "{TABLE0}": "trip", "{OP0}": "like", "{AGG0}": "count", "{SC0}": "desc"}, "( dept name of staff ) , ( dept code of addresses ) that belongs to ( ( professor ) , and ( ( department ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) ) , that have ( ( prof high degree of addresses ) equal to ( 'ph.d.' ) ) , grouped by ( dept code of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "ph.d.", "{VALUE2}": "1", "{COLUMN0}": "dept_name", "{COLUMN1}": "dept_code", "{COLUMN2}": "prof_high_degree", "{TABLE0}": "professor", "{TABLE1}": "department", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( billing state ) , ( the number of ( all items ) ) that belongs to ( invoices ) , that have ( ( billing country ) equal to ( usa ) ) , grouped by ( billing state ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "usa", "{VALUE2}": "1", "{COLUMN0}": "billing_state", "{COLUMN1}": "billing_country", "{TABLE0}": "invoices", "{OP0}": "=", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( lastname of staff ) that belongs to ( ( performance ) , and ( ( band ) satisfied that ( ( bandmate of addresses ) equal to ( id of staff ) ) ) ) , that have ( ( stageposition ) equal to ( back ) ) , grouped by ( lastname ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "back", "{VALUE2}": "1", "{COLUMN0}": "lastname", "{COLUMN1}": "bandmate", "{COLUMN2}": "id", "{COLUMN3}": "stageposition", "{TABLE0}": "performance", "{TABLE1}": "band", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( location ) that belongs to ( cinema ) , that have ( ( capacity ) greater than ( 300 ) ) , grouped by ( location ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "300", "{VALUE1}": "2", "{COLUMN0}": "location", "{COLUMN1}": "capacity", "{TABLE0}": "cinema", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "( artist name of addresses ) , ( country of addresses ) that belongs to ( ( artist ) , and ( ( song ) satisfied that ( ( artist name of addresses ) equal to ( artist name of staff ) ) ) ) , that have ( ( resolution of staff ) greater than ( 900 ) ) , grouped by ( artist name of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 1 ) )": {"{VALUE0}": "1", "{VALUE7}": "900", "{COLUMN0}": "artist_name", "{COLUMN1}": "country", "{COLUMN2}": "resolution", "{TABLE0}": "artist", "{TABLE1}": "song", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "( customer name of addresses ) that belongs to ( ( customers ) , and ( ( customer orders ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( payment method code of addresses ) equal to ( 'credit card' ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) )": {"{VALUE0}": "credit card", "{VALUE3}": "2", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "payment_method_code", "{TABLE0}": "customers", "{TABLE1}": "customer orders", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "count"}, "( customer name of staff ) that belongs to ( ( mailshot customers ) , and ( ( customers ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , that have ( ( outcome code ) equal to ( 'order' ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "order", "{VALUE1}": "2", "{COLUMN0}": "customer_name", "{COLUMN1}": "customer_id", "{COLUMN2}": "outcome_code", "{TABLE0}": "mailshot customers", "{TABLE1}": "customers", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "( director ) that belongs to ( movie ) , that have ( ( director ) is existed ) , grouped by ( director ) , that have ( ( the number of ( all items ) ) equal to ( 1 ) )": {"{VALUE0}": "null", "{VALUE2}": "1", "{COLUMN0}": "director", "{TABLE0}": "movie", "{OP0}": "!=", "{OP1}": "=", "{AGG0}": "count"}, "( investor id of staff ) , ( investor details of addresses ) that belongs to ( ( investors ) , and ( ( transactions ) satisfied that ( ( investor id of addresses ) equal to ( investor id of staff ) ) ) ) , that have ( ( transaction type code of staff ) equal to ( sale ) ) , grouped by ( investor id of staff ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "sale", "{VALUE1}": "2", "{COLUMN0}": "investor_id", "{COLUMN1}": "investor_details", "{COLUMN2}": "transaction_type_code", "{TABLE0}": "investors", "{TABLE1}": "transactions", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "( headquarters ) that belongs to ( company ) , that have ( ( main industry ) equal to ( 'banking' ) ) , grouped by ( headquarters ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "banking", "{VALUE2}": "2", "{COLUMN0}": "headquarters", "{COLUMN1}": "company", "{COLUMN2}": "main_industry", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "( driverid of addresses ) , ( forename of addresses ) , ( surname of addresses ) that belongs to ( ( drivers ) , and ( ( laptimes ) satisfied that ( ( driverid of addresses ) equal to ( driverid of staff ) ) ) ) , that have ( ( position ) equal to ( '1' ) ) , grouped by ( driverid of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "1", "{VALUE1}": "1", "{VALUE5}": "2", "{COLUMN0}": "driverid", "{COLUMN1}": "forename", "{COLUMN2}": "surname", "{COLUMN3}": "position", "{TABLE0}": "status", "{TABLE1}": "laptimes", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "count"}, "( title of addresses ) that belongs to ( ( course ) , and ( ( section ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( ( building ) equal to ( 'chandler' ) ) and ( ( semester ) equal to ( 'fall' ) ) and ( ( year ) equal to ( 2010 ) ) )": {"{VALUE0}": "chandler", "{VALUE1}": "fall", "{VALUE9}": "2010", "{COLUMN0}": "title", "{COLUMN1}": "course_id", "{COLUMN2}": "building", "{COLUMN3}": "semester", "{COLUMN4}": "year", "{TABLE0}": "course", "{TABLE1}": "section", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( lesson id of addresses ) that belongs to ( ( lessons ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( ( first name of staff ) equal to ( janessa ) ) and ( ( last name of staff ) equal to ( sawayn ) ) and ( ( nickname ) like ( %s% ) ) )": {"{VALUE0}": "janessa", "{VALUE1}": "sawayn", "{VALUE2}": "s", "{COLUMN0}": "lesson_id", "{COLUMN1}": "staff_id", "{COLUMN2}": "first_name", "{COLUMN3}": "last_name", "{COLUMN4}": "nickname", "{TABLE0}": "lessons", "{TABLE1}": "staff", "{OP0}": "=", "{OP1}": "=", "{OP2}": "like"}, "( campus of addresses ) that belongs to ( ( campuses ) , and ( ( enrollments ) satisfied that ( ( id of club ) equal to ( campus of member of club ) ) ) ) , that have ( ( ( year of member of club ) equal to ( 1956 ) ) and ( ( totalenrollment ay ) greater than ( 400 ) ) and ( ( fte ay ) greater than ( 200 ) ) )": {"{VALUE6}": "1956", "{VALUE7}": "400", "{VALUE8}": "200", "{COLUMN0}": "campus", "{COLUMN1}": "id", "{COLUMN2}": "year", "{COLUMN3}": "totalenrollment_ay", "{COLUMN4}": "fte_ay", "{TABLE0}": "campuses", "{TABLE1}": "enrollments", "{OP0}": "=", "{OP1}": ">", "{OP2}": ">"}, "( title of student ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) , and ( ( inst ) satisfied that ( ( instid of member of club ) equal to ( instid of inst ) ) ) ) , that have ( ( ( country of inst ) equal to ( japan ) ) and ( ( authorder of member of club ) equal to ( 1 ) ) and ( ( lname of club ) equal to ( ohori ) ) )": {"{VALUE0}": "japan", "{VALUE1}": "ohori", "{VALUE3}": "1", "{COLUMN0}": "title", "{COLUMN1}": "authid", "{COLUMN2}": "paperid", "{COLUMN3}": "instid", "{COLUMN4}": "country", "{COLUMN5}": "authorder", "{COLUMN6}": "lname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{TABLE3}": "institution", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( date ) that belongs to ( weather ) , that have ( ( ( zip code ) equal to ( 94107 ) ) and ( ( events ) not equal to ( fog ) ) and ( ( events ) not equal to ( rain ) ) )": {"{VALUE0}": "fog", "{VALUE1}": "rain", "{VALUE2}": "94107", "{COLUMN0}": "date", "{COLUMN1}": "zip_code", "{COLUMN2}": "events", "{TABLE0}": "weather", "{OP0}": "=", "{OP1}": "!=", "{OP2}": "!="}, "( campus of addresses ) that belongs to ( ( campuses ) , and ( ( faculty ) satisfied that ( ( id of club ) equal to ( campus of member of club ) ) ) ) , that have ( ( ( faculty of member of club ) greater than or equal to ( 600 ) ) and ( ( faculty of member of club ) less than or equal to ( 1000 ) ) and ( ( year of addresses ) equal to ( 2004 ) ) )": {"{VALUE6}": "600", "{VALUE8}": "1000", "{VALUE10}": "2004", "{COLUMN0}": "campus", "{COLUMN1}": "faculty", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": ">=", "{OP1}": "<=", "{OP2}": "="}, "( distinct ( lastname of addresses ) ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( grade of addresses ) equal to ( 3 ) ) and ( ( firstname of staff ) not equal to ( covin ) ) and ( ( lastname of staff ) not equal to ( jerome ) ) )": {"{VALUE0}": "covin", "{VALUE1}": "jerome", "{VALUE8}": "3", "{COLUMN0}": "lastname", "{COLUMN1}": "classroom", "{COLUMN2}": "grade", "{COLUMN3}": "firstname", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "!=", "{OP2}": "!="}, "( payment date ) that belongs to ( payment ) , that have ( ( amount ) greater than ( 10 ) ) and ( payment date of addresses ) that belongs to ( ( payment ) , and ( ( staff ) satisfied that ( ( staff id of addresses ) equal to ( staff id of staff ) ) ) ) , that have ( ( first name of staff ) equal to ( 'elsa' ) )": {"{VALUE0}": "elsa", "{VALUE1}": "10", "{COLUMN0}": "payment_date", "{COLUMN1}": "amount", "{COLUMN2}": "staff_id", "{COLUMN3}": "first_name", "{TABLE0}": "payment", "{TABLE1}": "staff", "{OP0}": ">", "{OP1}": "="}, "( name of addresses ) that belongs to ( ( tourist attractions ) , and ( ( tourist attraction features ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) , and ( ( features ) satisfied that ( ( feature id of staff ) equal to ( feature id of enzyme ) ) ) ) , that have ( ( feature details of enzyme ) equal to ( 'park' ) ) and ( name of addresses ) that belongs to ( ( tourist attractions ) , and ( ( tourist attraction features ) satisfied that ( ( tourist attraction id of addresses ) equal to ( tourist attraction id of staff ) ) ) , and ( ( features ) satisfied that ( ( feature id of staff ) equal to ( feature id of enzyme ) ) ) ) , that have ( ( feature details of enzyme ) equal to ( 'shopping' ) )": {"{VALUE0}": "park", "{VALUE1}": "shopping", "{COLUMN0}": "name", "{COLUMN1}": "tourist_attraction_id", "{COLUMN2}": "feature_id", "{COLUMN3}": "feature_details", "{TABLE0}": "tourist attractions", "{TABLE1}": "tourist attraction features", "{TABLE2}": "features", "{OP0}": "=", "{OP1}": "="}, "( course id ) that belongs to ( student course registrations ) , that have ( ( student id ) equal to ( 121 ) ) and ( course id ) that belongs to ( student course attendance ) , that have ( ( student id ) equal to ( 121 ) )": {"{VALUE0}": "121", "{COLUMN0}": "course_id", "{COLUMN1}": "student_id", "{TABLE0}": "student course registrations", "{TABLE1}": "student course attendance", "{OP0}": "=", "{OP1}": "="}, "( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2010 ) ) and ( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2001 ) )": {"{VALUE0}": "2010", "{VALUE1}": "2001", "{COLUMN0}": "salary", "{COLUMN1}": "year", "{OP0}": "=", "{OP1}": "="}, "( first name ) , ( last name ) that belongs to ( customers ) , that have ( ( amount_outstanding ) between ( 1000 ) and ( 3000 ) )": {"{VALUE0}": "1000", "{VALUE1}": "3000", "{COLUMN0}": "first_name", "{COLUMN1}": "last_name", "{COLUMN2}": "amount_outstanding", "{TABLE0}": "customers"}, "( title of staff ) that belongs to ( ( rating ) , and ( ( movie ) satisfied that ( ( mid of addresses ) equal to ( mid of staff ) ) ) ) , that have ( ( t1.stars ) between ( 3 ) and ( 5 ) )": {"{VALUE6}": "3", "{VALUE7}": "5", "{COLUMN0}": "title", "{COLUMN1}": "mid", "{COLUMN2}": "stars", "{TABLE0}": "rating", "{TABLE1}": "movie"}, "( date became customer ) that belongs to ( customers ) , that have ( ( customer_id ) between ( 10 ) and ( 20 ) )": {"{VALUE0}": "10", "{VALUE1}": "20", "{COLUMN0}": "date_became_customer", "{COLUMN1}": "customer_id", "{TABLE0}": "customers"}, "( phone number ) that belongs to ( employees ) , that have ( ( salary ) between ( 8000 ) and ( 12000 ) )": {"{VALUE0}": "8000", "{VALUE1}": "12000", "{COLUMN0}": "phone_number", "{COLUMN1}": "salary", "{TABLE0}": "employees"}, "( organized by ) , ( name ) that belongs to ( church ) , that have ( ( open_date ) between ( 1830 ) and ( 1840 ) )": {"{VALUE0}": "1830", "{VALUE1}": "1840", "{COLUMN0}": "organized_by", "{COLUMN1}": "name", "{COLUMN2}": "open_date", "{TABLE0}": "church"}, "( roomname ) that belongs to ( rooms ) , that have ( ( baseprice ) between ( 120 ) and ( 150 ) )": {"{VALUE0}": "120", "{VALUE1}": "150", "{COLUMN0}": "roomname", "{COLUMN1}": "baseprice", "{TABLE0}": "rooms"}, "( the number of ( all items ) ) , ( country ) that belongs to ( airports ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order )": {"{COLUMN0}": "country", "{TABLE0}": "airports", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( gender code ) , ( the number of ( all items ) ) that belongs to ( guests ) , grouped by ( gender code ) , ordered by ( ( the number of ( all items ) ) in descending order )": {"{COLUMN0}": "gender_code", "{TABLE0}": "guests", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( country ) , ( the number of ( all items ) ) that belongs to ( airlines ) , grouped by ( country ) , ordered by ( ( the number of ( all items ) ) in descending order )": {"{COLUMN0}": "country", "{TABLE0}": "airlines", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( software platform ) that belongs to ( device ) , grouped by ( software platform ) , ordered by ( ( the number of ( all items ) ) in descending order )": {"{COLUMN0}": "software_platform", "{COLUMN1}": "device", "{AGG0}": "count", "{SC0}": "desc"}, "( resident id of addresses ) , ( other details of addresses ) , ( the number of ( all items ) ) that belongs to ( ( residents ) , and ( ( residents services ) satisfied that ( ( resident id of addresses ) equal to ( resident id of staff ) ) ) ) , grouped by ( resident id of addresses ) , ordered by ( ( the number of ( all items ) ) in descending order )": {"{COLUMN0}": "resident_id", "{COLUMN1}": "other_details", "{TABLE0}": "residents", "{TABLE1}": "residents services", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( project id of addresses ) , ( the number of ( all items ) ) that belongs to ( ( project staff ) , and ( ( projects ) satisfied that ( ( project id of addresses ) equal to ( project id of staff ) ) ) ) , grouped by ( project id of addresses ) , ordered by ( ( the number of ( all items ) ) in ascending order )": {"{COLUMN0}": "project_id", "{TABLE0}": "project staff", "{TABLE1}": "projects", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "asc"}, "( campus of addresses ) that belongs to ( ( campuses ) , and ( ( faculty ) satisfied that ( ( id of addresses ) equal to ( campus of staff ) ) ) ) , that have ( ( year of staff ) equal to ( 2003 ) ) , ordered by ( ( faculty of staff ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{VALUE6}": "2003", "{COLUMN0}": "campus", "{COLUMN1}": "faculty", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{SC0}": "desc"}, "( name ) that belongs to ( student ) , that have ( ( dept name ) equal to ( 'history' ) ) , ordered by ( ( tot cred ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "history", "{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "dept_name", "{COLUMN2}": "tot_cred", "{TABLE0}": "student", "{OP0}": "=", "{SC0}": "desc"}, "( salary ) that belongs to ( salary ) , that have ( ( year ) equal to ( 2001 ) ) , ordered by ( ( salary ) in descending order ) , limited to the top ( 3 )": {"{VALUE0}": "2001", "{VALUE1}": "3", "{COLUMN0}": "salary", "{COLUMN1}": "year", "{OP0}": "=", "{SC0}": "desc"}, "( student id ) that belongs to ( student course attendance ) , that have ( ( course id ) equal to ( 301 ) ) , ordered by ( ( date of attendance ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "301", "{VALUE1}": "1", "{COLUMN0}": "student_id", "{COLUMN1}": "course_id", "{COLUMN2}": "date_of_attendance", "{TABLE0}": "student course attendance", "{OP0}": "=", "{SC0}": "desc"}, "( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'movies' ) ), and except that ( ( name of addresses ) that belongs to ( ( tracks ) , and ( ( playlist tracks ) satisfied that ( ( id of addresses ) equal to ( track id of staff ) ) ) , and ( ( playlists ) satisfied that ( ( playlist id of staff ) equal to ( id of enzyme ) ) ) ) , that have ( ( name of enzyme ) equal to ( 'music' ) ))": {"{VALUE0}": "movies", "{VALUE1}": "music", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "track_id", "{COLUMN3}": "playlist_id", "{TABLE0}": "tracks", "{TABLE1}": "playlist tracks", "{TABLE2}": "playlists", "{OP0}": "=", "{OP1}": "="}, "( name ) that belongs to ( procedures ) , that have ( ( cost ) greater than ( 1000 ) ), and except that ( ( name of enzyme ) that belongs to ( ( physician ) , and ( ( trained in ) satisfied that ( ( employeeid of addresses ) equal to ( physician of staff ) ) ) , and ( ( procedures ) satisfied that ( ( code of enzyme ) equal to ( treatment of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( john wen ) ))": {"{VALUE0}": "john wen", "{VALUE1}": "1000", "{COLUMN0}": "name", "{COLUMN1}": "procedures", "{COLUMN2}": "cost", "{COLUMN3}": "physician", "{COLUMN4}": "employeeid", "{COLUMN5}": "code", "{COLUMN6}": "treatment", "{TABLE0}": "trained in", "{OP0}": ">", "{OP1}": "="}, "( cname ) that belongs to ( tryout ) , that have ( ( ppos ) equal to ( 'mid' ) ), and except that ( ( cname ) that belongs to ( tryout ) , that have ( ( ppos ) equal to ( 'goalie' ) ))": {"{VALUE0}": "mid", "{VALUE1}": "goalie", "{COLUMN0}": "cname", "{COLUMN1}": "ppos", "{TABLE0}": "tryout", "{OP0}": "=", "{OP1}": "="}, "( stuid ) that belongs to ( student ) , that have ( ( sex ) equal to ( 'm' ) ), and except that ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( football ) ))": {"{VALUE0}": "football", "{VALUE1}": "m", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{COLUMN2}": "sportname", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "( the average of ( age ) ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( food ) ), and intersect with ( ( stuid of addresses ) that belongs to ( ( has allergy ) , and ( ( allergy type ) satisfied that ( ( allergy of addresses ) equal to ( allergy of staff ) ) ) ) , that have ( ( allergytype of staff ) equal to ( animal ) )) ) )": {"{VALUE0}": "food", "{VALUE1}": "animal", "{COLUMN0}": "age", "{COLUMN1}": "stuid", "{COLUMN2}": "allergy", "{COLUMN3}": "allergytype", "{TABLE0}": "student", "{TABLE1}": "has allergy", "{TABLE2}": "allergy type", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "avg"}, "( fname ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( football ) ), and intersect with ( ( stuid ) that belongs to ( sportsinfo ) , that have ( ( sportname ) equal to ( lacrosse ) )) ) )": {"{VALUE0}": "football", "{VALUE1}": "lacrosse", "{COLUMN0}": "fname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "sportname", "{TABLE0}": "student", "{TABLE1}": "sports info", "{OP0}": "=", "{OP1}": "="}, "( lname ) , ( age ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid ) that belongs to ( has allergy ) , that have ( ( allergy ) equal to ( milk ) ), and intersect with ( ( stuid ) that belongs to ( has allergy ) , that have ( ( allergy ) equal to ( cat ) )) ) )": {"{VALUE0}": "milk", "{VALUE1}": "cat", "{COLUMN0}": "lname", "{COLUMN1}": "age", "{COLUMN2}": "stuid", "{COLUMN3}": "allergy", "{TABLE0}": "student", "{TABLE1}": "has allergy", "{OP0}": "=", "{OP1}": "="}, "( lname ) , ( sex ) that belongs to ( student ) , that have ( ( stuid ) in ( ( stuid of addresses ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) ) , that have ( ( gname of staff ) equal to ( call of destiny ) ), and intersect with ( ( stuid of addresses ) that belongs to ( ( plays games ) , and ( ( video games ) satisfied that ( ( gameid of addresses ) equal to ( gameid of staff ) ) ) ) , that have ( ( gname of staff ) equal to ( works of widenius ) )) ) )": {"{VALUE0}": "call of destiny", "{VALUE1}": "works of widenius", "{COLUMN0}": "lname", "{COLUMN1}": "sex", "{COLUMN2}": "stuid", "{COLUMN3}": "gameid", "{COLUMN4}": "gname", "{TABLE0}": "student", "{TABLE1}": "plays games", "{TABLE2}": "video games", "{OP0}": "=", "{OP1}": "="}, "( name of addresses ) , ( ( balance of enzyme ) add ( balance of staff ) ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of enzyme ) ) ) ) , that have ( ( balance of enzyme ) less than ( balance of staff ) )": {"{COLUMN0}": "name", "{COLUMN1}": "balance", "{COLUMN2}": "custid", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{TABLE2}": "savings", "{OP0}": "<"}, "( title of addresses ) , ( year of addresses ) that belongs to ( ( movie ) , and ( ( movie ) satisfied that ( ( director of addresses ) equal to ( director of staff ) ) ) ) , that have ( ( title of addresses ) not equal to ( title of staff ) )": {"{COLUMN0}": "title", "{COLUMN1}": "year", "{COLUMN2}": "director", "{TABLE0}": "movie", "{OP0}": "!="}, "( distinct ( all items ) ) that belongs to ( ( employees ) , and ( ( departments ) satisfied that ( ( department id of addresses ) equal to ( department id of staff ) ) ) ) , that have ( ( employee id of addresses ) equal to ( manager id of staff ) )": {"{COLUMN0}": "department_id", "{COLUMN1}": "employee_id", "{COLUMN2}": "manager_id", "{TABLE0}": "employees", "{TABLE1}": "departments", "{OP0}": "="}, "( the average of ( total amount purchased ) ) , ( the average of ( total value purchased ) ) that belongs to ( product suppliers ) , that have ( ( supplier id ) equal to ( supplier id ) that belongs to ( product suppliers ) , grouped by ( supplier id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "total_amount_purchased", "{COLUMN1}": "total_value_purchased", "{COLUMN2}": "supplier_id", "{TABLE0}": "product suppliers", "{OP0}": "=", "{AGG0}": "avg", "{AGG1}": "avg", "{AGG2}": "count", "{SC0}": "desc"}, "( product ) that belongs to ( product ) , that have ( ( product ) not equal to ( max page size ) that belongs to ( product ) , grouped by ( max page size ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "product", "{COLUMN1}": "max_page_size", "{OP0}": "!=", "{AGG0}": "count", "{SC0}": "desc"}, "( fname ) , ( lname ) that belongs to ( student ) , that have ( ( major ) not equal to ( major ) that belongs to ( student ) , grouped by ( major ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "lname", "{COLUMN2}": "major", "{TABLE0}": "student", "{OP0}": "!=", "{AGG0}": "count", "{SC0}": "desc"}, "( customer name ) that belongs to ( customers ) , that have ( ( payment method ) equal to ( payment method ) that belongs to ( customers ) , grouped by ( payment method ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "customer_name", "{COLUMN1}": "payment_method", "{TABLE0}": "customers", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( emp fname of addresses ) that belongs to ( ( employee ) , and ( ( professor ) satisfied that ( ( emp num of addresses ) equal to ( emp num of staff ) ) ) , and ( ( department ) satisfied that ( ( dept code of staff ) equal to ( dept code of enzyme ) ) ) ) , that have ( ( dept name of enzyme ) equal to ( 'history' ) ), and except that ( ( emp fname of trip ) that belongs to ( ( employee ) , and ( ( class ) satisfied that ( ( emp num of trip ) equal to ( prof num of department ) ) ) ))": {"{VALUE0}": "history", "{COLUMN0}": "emp_fname", "{COLUMN1}": "emp_num", "{COLUMN2}": "dept_code", "{COLUMN3}": "dept_name", "{COLUMN4}": "prof_num", "{TABLE0}": "employee", "{TABLE1}": "professor", "{TABLE2}": "department", "{TABLE3}": "class", "{OP0}": "="}, "( document id ) that belongs to ( documents ) , that have ( ( document type code ) equal to ( cv ) ), and except that ( ( document id ) that belongs to ( documents with expenses ))": {"{VALUE0}": "cv", "{COLUMN0}": "document_id", "{COLUMN1}": "document_type_code", "{TABLE0}": "documents", "{TABLE1}": "documents with expenses", "{OP0}": "="}, "( school code of addresses ) that belongs to ( ( department ) , and ( ( professor ) satisfied that ( ( dept code of addresses ) equal to ( dept code of staff ) ) ) ) , grouped by ( school code of addresses ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "school_code", "{COLUMN1}": "dept_code", "{TABLE0}": "department", "{TABLE1}": "professor", "{AGG0}": "count"}, "( student id ) that belongs to ( student course registrations ) , grouped by ( student id ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "student_id", "{TABLE0}": "student course registrations", "{AGG0}": "count"}, "( semester ) , ( year ) that belongs to ( section ) , grouped by ( semester ) , ( year ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "semester", "{COLUMN1}": "year", "{TABLE0}": "section", "{AGG0}": "count", "{SC0}": "desc"}, "( lname of club ) that belongs to ( ( authors ) , and ( ( authorship ) satisfied that ( ( authid of club ) equal to ( authid of member of club ) ) ) , and ( ( papers ) satisfied that ( ( paperid of member of club ) equal to ( paperid of student ) ) ) ) , grouped by ( fname of club ) , ( lname of club ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "lname", "{COLUMN1}": "authid", "{COLUMN2}": "paperid", "{COLUMN3}": "fname", "{TABLE0}": "authors", "{TABLE1}": "authorship count", "{TABLE2}": "papers", "{AGG0}": "count", "{SC0}": "desc"}, "( firstname of staff ) , ( lastname of staff ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , grouped by ( firstname of staff ) , ( lastname of staff ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{TABLE0}": "list", "{TABLE1}": "teachers", "{AGG0}": "count", "{SC0}": "desc"}, "( name of enzyme ) , ( time of enzyme ) that belongs to ( ( train station ) , and ( ( station ) satisfied that ( ( station id of addresses ) equal to ( station id of staff ) ) ) , and ( ( train ) satisfied that ( ( train id of enzyme ) equal to ( train id of addresses ) ) ) ) , that have ( ( location of staff ) equal to ( 'london' ) ) , ordered by ( ( time of enzyme ) in descending order )": {"{VALUE0}": "london", "{COLUMN0}": "name", "{COLUMN1}": "time", "{COLUMN2}": "station_id", "{COLUMN3}": "train_id", "{COLUMN4}": "location", "{TABLE0}": "train station", "{TABLE1}": "station", "{TABLE2}": "train", "{OP0}": "=", "{SC0}": "desc"}, "( name ) that belongs to ( pilot ) , that have ( ( age ) less than or equal to ( 30 ) ) , ordered by ( ( name ) in descending order )": {"{VALUE0}": "30", "{COLUMN0}": "name", "{COLUMN1}": "age", "{TABLE0}": "pilot", "{OP0}": "<=", "{SC0}": "desc"}, "( the number of ( all items ) ) that belongs to ( \"l ( state of addresses ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) ) , that have ( ( ppos of staff ) equal to ( 'mid' ) ), and except that ( ( state of addresses ) that belongs to ( ( college ) , and ( ( tryout ) satisfied that ( ( cname of addresses ) equal to ( cname of staff ) ) ) ) , that have ( ( ppos of staff ) equal to ( 'goalie' ) )) r\" )": {"{VALUE0}": "mid", "{VALUE1}": "goalie", "{COLUMN0}": "state", "{COLUMN1}": "cname", "{COLUMN2}": "ppos", "{TABLE0}": "college", "{TABLE1}": "tryout", "{OP0}": "=", "{OP1}": "=", "{AGG0}": "count"}, "( campus of addresses ) , ( the sum of ( degrees of staff ) ) that belongs to ( ( campuses ) , and ( ( degrees ) satisfied that ( ( id of addresses ) equal to ( campus of staff ) ) ) ) , that have ( ( ( county of addresses ) equal to ( orange ) ) and ( ( year of staff ) greater than or equal to ( 2000 ) ) ) , grouped by ( campus of addresses )": {"{VALUE0}": "orange", "{VALUE10}": "2000", "{COLUMN0}": "campus", "{COLUMN1}": "degrees", "{COLUMN2}": "id", "{COLUMN3}": "county", "{COLUMN4}": "year", "{TABLE0}": "campuses", "{OP0}": "=", "{OP1}": ">=", "{AGG0}": "sum"}, "( campus of addresses ) , ( the sum of ( degrees of staff ) ) that belongs to ( ( campuses ) , and ( ( degrees ) satisfied that ( ( id of addresses ) equal to ( campus of staff ) ) ) ) , that have ( ( ( year of staff ) greater than or equal to ( 1998 ) ) and ( ( year of staff ) less than or equal to ( 2002 ) ) ) , grouped by ( campus of addresses )": {"{VALUE7}": "1998", "{VALUE9}": "2002", "{COLUMN0}": "campus", "{COLUMN1}": "degrees", "{COLUMN2}": "id", "{COLUMN3}": "year", "{TABLE0}": "campuses", "{OP0}": ">=", "{OP1}": "<=", "{AGG0}": "sum"}, "( city of addresses ) that belongs to ( ( city ) , and ( ( temperature ) satisfied that ( ( city id of addresses ) equal to ( city id of staff ) ) ) ) , that have ( ( feb of staff ) greater than ( jun of staff ) ) and ( city of enzyme ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of enzyme ) equal to ( host city of trip ) ) ) )": {"{COLUMN0}": "city", "{COLUMN1}": "city_id", "{COLUMN2}": "feb", "{COLUMN3}": "jun", "{COLUMN4}": "host_city", "{TABLE0}": "temperature", "{TABLE1}": "hosting city", "{OP0}": ">"}, "( title of addresses ) , ( director of addresses ) that belongs to ( ( movie ) , and ( ( movie ) satisfied that ( ( director of addresses ) equal to ( director of staff ) ) ) ) , that have ( ( title of addresses ) not equal to ( title of staff ) ) , ordered by ( ( director of addresses ),( title of addresses ) )": {"{COLUMN0}": "title", "{COLUMN1}": "director", "{TABLE0}": "movie", "{OP0}": "!="}, "( pname of staff ) that belongs to ( ( tryout ) , and ( ( player ) satisfied that ( ( pid of addresses ) equal to ( pid of staff ) ) ) ) , that have ( ( cname of addresses ) equal to ( cname ) that belongs to ( college ) , ordered by ( ( enr ) in descending order ) , limited to the top ( 1 ) )": {"{VALUE1}": "1", "{COLUMN0}": "pname", "{COLUMN1}": "pid", "{COLUMN2}": "cname", "{COLUMN3}": "enr", "{TABLE0}": "tryout", "{TABLE1}": "player", "{TABLE2}": "college", "{OP0}": "=", "{SC0}": "desc"}, "( employee id ) , ( first name ) , ( last name ) , ( salary ) that belongs to ( employees ) , that have ( ( ( salary ) greater than ( the average of ( salary ) ) that belongs to ( employees ) ) and ( ( department id ) in ( ( department id ) that belongs to ( employees ) , that have ( ( first name ) like ( '%j%' ) ) ) ) )": {"{VALUE0}": "j", "{COLUMN0}": "employee_id", "{COLUMN1}": "first_name", "{COLUMN2}": "last_name", "{COLUMN3}": "salary", "{COLUMN4}": "department_id", "{TABLE0}": "employees", "{OP0}": ">", "{OP1}": "like", "{AGG0}": "avg"}, "( title ) that belongs to ( course ) , that have ( ( course_id ) in ( ( prereq id of addresses ) that belongs to ( ( prereq ) , and ( ( course ) satisfied that ( ( course id of addresses ) equal to ( course id of staff ) ) ) ) , that have ( ( title of staff ) equal to ( 'international finance' ) ) ) )": {"{VALUE0}": "international finance", "{COLUMN0}": "title", "{COLUMN1}": "course_id", "{COLUMN2}": "prereq_id", "{TABLE0}": "course", "{TABLE1}": "prerequisite", "{OP0}": "="}, "( date from ) , ( date to ) that belongs to ( project staff ) , that have ( ( project_id ) in ( ( ( project id ) that belongs to ( project staff ) , grouped by ( project id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) ) ) and ( date from ) , ( date to ) that belongs to ( project staff ) , that have ( ( role code ) equal to ( 'leader' ) )": {"{VALUE0}": "leader", "{VALUE1}": "1", "{COLUMN0}": "date_from", "{COLUMN1}": "date_to", "{COLUMN2}": "project_id", "{COLUMN3}": "role_code", "{TABLE0}": "project staff", "{OP0}": "=", "{AGG0}": "count", "{SC0}": "desc"}, "( project details ) that belongs to ( projects ) , that have ( ( organisation_id ) in ( ( organisation id ) that belongs to ( projects ) , grouped by ( organisation id ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) )": {"{VALUE0}": "1", "{COLUMN0}": "project_details", "{COLUMN1}": "organisation_id", "{TABLE0}": "projects", "{AGG0}": "count", "{SC0}": "desc"}, "( fname of addresses ) that belongs to ( ( student ) , and ( ( lives in ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( t2.dormid ) in ( ( dormid of staff ) that belongs to ( ( dorm ) , and ( ( has amenity ) satisfied that ( ( dormid of enzyme ) equal to ( dormid of trip ) ) ) , and ( ( dorm amenity ) satisfied that ( ( amenid of trip ) equal to ( amenid of department ) ) ) ) , grouped by ( dormid of enzyme ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 ) ) )": {"{VALUE0}": "1", "{COLUMN0}": "fname", "{COLUMN1}": "stuid", "{COLUMN2}": "dormid", "{COLUMN3}": "amenid", "{TABLE0}": "student", "{TABLE1}": "lives in", "{TABLE2}": "dorm", "{TABLE3}": "has amenity", "{TABLE4}": "dorm amenity", "{AGG0}": "count", "{SC0}": "desc"}, "( name of staff ) , ( position of staff ) that belongs to ( ( department ) , and ( ( physician ) satisfied that ( ( head of addresses ) equal to ( employeeid of staff ) ) ) ) , grouped by ( departmentid ) , ordered by ( ( the number of ( departmentid ) ) ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{COLUMN0}": "name", "{COLUMN1}": "position", "{COLUMN2}": "department", "{COLUMN3}": "physician", "{COLUMN4}": "head", "{COLUMN5}": "employeeid", "{COLUMN6}": "departmentid", "{AGG0}": "count"}, "( head ) that belongs to ( department ) , grouped by ( departmentid ) , ordered by ( ( the number of ( departmentid ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "head", "{COLUMN1}": "department", "{COLUMN2}": "departmentid", "{AGG0}": "count"}, "( investor id ) , ( the average of ( share count ) ) that belongs to ( transactions ) , grouped by ( investor id ) , ordered by ( ( the average of ( share count ) ) )": {"{COLUMN0}": "investor_id", "{COLUMN1}": "share_count", "{TABLE0}": "transactions", "{AGG0}": "avg", "{AGG1}": "avg"}, "( cust name of addresses ) that belongs to ( ( customer ) , and ( ( loan ) satisfied that ( ( cust id of addresses ) equal to ( cust id of staff ) ) ) ) , grouped by ( cust name of addresses ) , ordered by ( ( the sum of ( amount of staff ) ) )": {"{COLUMN0}": "cust_name", "{COLUMN1}": "cust_id", "{COLUMN2}": "amount", "{TABLE0}": "customer", "{TABLE1}": "loan", "{AGG0}": "sum"}, "( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and intersect with ( ( name of addresses ) that belongs to ( ( storm ) , and ( ( affected region ) satisfied that ( ( storm id of addresses ) equal to ( storm id of staff ) ) ) ) , grouped by ( storm id of addresses ) , that have ( ( the sum of ( number city affected of staff ) ) greater than or equal to ( 10 ) ))": {"{VALUE2}": "2", "{VALUE14}": "10", "{COLUMN0}": "name", "{COLUMN1}": "storm_id", "{COLUMN2}": "number_city_affected", "{TABLE0}": "storm", "{TABLE1}": "affected region", "{OP0}": ">=", "{OP1}": ">=", "{AGG0}": "count", "{AGG1}": "sum"}, "( name ) , ( price ) that belongs to ( products ) , that have ( ( price ) greater than or equal to ( 180 ) ) , ordered by ( ( price ) desc,( name ) in ascending order )": {"{VALUE0}": "180", "{COLUMN0}": "name", "{COLUMN1}": "price", "{TABLE0}": "products", "{OP0}": ">=", "{SC0}": "desc", "{SC1}": "asc"}, "all items that belongs to ( employees ) , that have ( ( ( first name ) like ( '%d%' ) ) or ( ( first name ) like ( '%s%' ) ) ) , ordered by ( ( salary ) in descending order )": {"{VALUE0}": "d", "{VALUE1}": "s", "{COLUMN0}": "first_name", "{COLUMN1}": "salary", "{TABLE0}": "employees", "{OP0}": "like", "{OP1}": "like", "{SC0}": "desc"}, "( title ) that belongs to ( film ) , that have ( ( ( length ) greater than ( 100 ) ) or ( ( rating ) equal to ( 'pg' ) ) ), and except that ( ( title ) that belongs to ( film ) , that have ( ( replacement cost ) greater than ( 200 ) ))": {"{VALUE0}": "pg", "{VALUE1}": "100", "{VALUE3}": "200", "{COLUMN0}": "title", "{COLUMN1}": "length", "{COLUMN2}": "rating", "{COLUMN3}": "replacement_cost", "{TABLE0}": "film", "{OP0}": ">", "{OP1}": "=", "{OP2}": ">"}, "( title ) , ( film id ) that belongs to ( film ) , that have ( ( rental rate ) equal to ( 99 of 0 ) ), and intersect with ( ( title of addresses ) , ( film id of addresses ) that belongs to ( ( film ) , and ( ( inventory ) satisfied that ( ( film id of addresses ) equal to ( film id of staff ) ) ) ) , grouped by ( film id of addresses ) , that have ( ( the number of ( all items ) ) less than ( 3 ) ))": {"{VALUE0}": "0.99", "{VALUE8}": "3", "{COLUMN0}": "title", "{COLUMN1}": "film_id", "{COLUMN2}": "rental_rate", "{TABLE0}": "film", "{TABLE1}": "inventory", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "count"}, "( team id of staff ) , ( rank of staff ) that belongs to ( ( home game ) , and ( ( team ) satisfied that ( ( team id of addresses ) equal to ( team id of staff ) ) ) ) , that have ( ( year of addresses ) equal to ( 2014 ) ) , grouped by ( team id of addresses ) , ordered by ( ( the average of ( attendance of addresses ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE2}": "1", "{VALUE7}": "2014", "{COLUMN0}": "team_id", "{COLUMN1}": "rank", "{COLUMN2}": "year", "{COLUMN3}": "attendance", "{TABLE0}": "home game", "{TABLE1}": "team", "{OP0}": "=", "{AGG0}": "avg", "{SC0}": "desc"}, "( town city ) that belongs to ( customers ) , that have ( ( customer type code ) equal to ( good credit rating ) ) , grouped by ( town city ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "good credit rating", "{VALUE2}": "1", "{COLUMN0}": "town_city", "{COLUMN1}": "customer_type_code", "{TABLE0}": "customers", "{OP0}": "=", "{AGG0}": "count"}, "( lname ) that belongs to ( faculty ) , that have ( ( rank ) equal to ( 'professor' ) ), and except that ( ( distinct ( lname of addresses ) ) that belongs to ( ( faculty ) , and ( ( faculty participates in ) satisfied that ( ( facid of addresses ) equal to ( facid of staff ) ) ) , and ( ( activity ) satisfied that ( ( actid of staff ) equal to ( actid of staff ) ) ) ) , that have ( ( ( activity name of enzyme ) equal to ( 'canoeing' ) ) or ( ( activity name of enzyme ) equal to ( 'kayaking' ) ) ))": {"{VALUE0}": "professor", "{VALUE1}": "canoeing", "{VALUE2}": "kayaking", "{COLUMN0}": "lname", "{COLUMN1}": "rank", "{COLUMN2}": "facid", "{COLUMN3}": "actid", "{COLUMN4}": "activity_name", "{TABLE0}": "faculty", "{TABLE1}": "faculty participates in", "{TABLE2}": "activity", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( distinct ( firstname of addresses ) ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( grade of addresses ) equal to ( 1 ) ), and except that ( ( firstname of addresses ) , ( lastname of addresses ) that belongs to ( ( list ) , and ( ( teachers ) satisfied that ( ( classroom of addresses ) equal to ( classroom of staff ) ) ) ) , that have ( ( ( firstname of staff ) equal to ( otha ) ) and ( ( lastname of staff ) equal to ( moyer ) ) ))": {"{VALUE0}": "otha", "{VALUE1}": "moyer", "{VALUE2}": "1", "{COLUMN0}": "firstname", "{COLUMN1}": "lastname", "{COLUMN2}": "classroom", "{COLUMN3}": "grade", "{TABLE0}": "list", "{TABLE1}": "teachers", "{OP0}": "=", "{OP1}": "=", "{OP2}": "="}, "( id ) that belongs to ( station ) , that have ( ( lat ) greater than ( 4 of 37 ) ), and except that ( ( station id ) that belongs to ( status ) , grouped by ( station id ) , that have ( ( the minimum of ( bikes available ) ) less than ( 7 ) ))": {"{VALUE0}": "37.4", "{VALUE1}": "7", "{COLUMN0}": "id", "{COLUMN1}": "lat", "{COLUMN2}": "station_id", "{COLUMN3}": "bikes_available", "{TABLE0}": "station", "{TABLE1}": "status", "{OP0}": ">", "{OP1}": "<", "{AGG0}": "min"}, "( name ) that belongs to ( station ) , that have ( ( city ) equal to ( palo alto ) ), and except that ( ( end station name ) that belongs to ( trip ) , grouped by ( end station name ) , that have ( ( the number of ( all items ) ) greater than ( 100 ) ))": {"{VALUE0}": "palo alto", "{VALUE2}": "100", "{COLUMN0}": "name", "{COLUMN1}": "city", "{COLUMN2}": "end_station_name", "{TABLE0}": "station", "{TABLE1}": "trip", "{OP0}": "=", "{OP1}": ">", "{AGG0}": "count"}, "( the number of ( all items ) ) that belongs to ( ( has allergy ) , and ( ( student ) satisfied that ( ( stuid of addresses ) equal to ( stuid of staff ) ) ) ) , that have ( ( ( ( sex of staff ) equal to ( f ) ) and ( ( allergy of addresses ) equal to ( milk ) ) ) or ( ( allergy of addresses ) equal to ( eggs ) ) )": {"{VALUE0}": "f", "{VALUE1}": "milk", "{VALUE2}": "eggs", "{COLUMN0}": "stuid", "{COLUMN1}": "sex", "{COLUMN2}": "allergy", "{TABLE0}": "has allergy", "{TABLE1}": "student", "{OP0}": "=", "{OP1}": "=", "{OP2}": "=", "{AGG0}": "count"}, "( city of addresses ) that belongs to ( ( city ) , and ( ( temperature ) satisfied that ( ( city id of addresses ) equal to ( city id of staff ) ) ) ) , that have ( ( mar of staff ) less than ( jul of staff ) ), and intersect with ( ( city of enzyme ) that belongs to ( ( city ) , and ( ( hosting city ) satisfied that ( ( city id of enzyme ) equal to ( host city of trip ) ) ) ))": {"{COLUMN0}": "city", "{COLUMN1}": "city_id", "{COLUMN2}": "mar", "{COLUMN3}": "jul", "{COLUMN4}": "host_city", "{TABLE0}": "temperature", "{TABLE1}": "hosting city", "{OP0}": "<"}, "( the sum of ( amount claimed of club ) ) that belongs to ( ( claim headers ) , and ( ( claims documents ) satisfied that ( ( claim header id of club ) equal to ( claim id of member of club ) ) ) ) , that have ( ( created date of member of club ) equal to ( created date ) that belongs to ( claims documents ) , ordered by ( ( created date ) ) , limited to the top ( 1 ) )": {"{VALUE0}": "1", "{COLUMN0}": "amount_claimed", "{COLUMN1}": "claim_header_id", "{COLUMN2}": "claim_id", "{COLUMN3}": "created_date", "{TABLE0}": "claim headers", "{TABLE1}": "claims documents", "{OP0}": "=", "{AGG0}": "sum"}, "( individual last name of student ) that belongs to ( ( organizations ) , and ( ( organization contact individuals ) satisfied that ( ( organization id of club ) equal to ( organization id of member of club ) ) ) , and ( ( individuals ) satisfied that ( ( individual id of member of club ) equal to ( individual id of student ) ) ) ) , that have ( ( uk vat number of club ) equal to ( the maximum of ( uk vat number ) ) that belongs to ( organizations ) ) , ordered by ( ( date contact to of member of club ) in ascending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "individual_last_name", "{COLUMN1}": "organization_id", "{COLUMN2}": "individual_id", "{COLUMN3}": "uk_vat_number", "{COLUMN4}": "date_contact_to", "{TABLE0}": "organizations", "{TABLE1}": "organization contact individuals", "{TABLE2}": "individuals", "{OP0}": "=", "{AGG0}": "max", "{SC0}": "asc"}, "( the number of ( all items ) ) that belongs to ( building ) , that have ( ( ( height feet ) greater than ( the average of ( height feet ) ) that belongs to ( building ) ) or ( ( floors ) greater than ( the average of ( floors ) ) that belongs to ( building ) ) )": {"{COLUMN0}": "height_feet", "{COLUMN1}": "floors", "{TABLE0}": "building", "{OP0}": ">", "{OP1}": ">", "{AGG0}": "count", "{AGG1}": "avg", "{AGG2}": "avg"}, "( the average of ( long ) ) that belongs to ( station ) , that have ( ( id ) not in ( ( station id ) that belongs to ( status ) , grouped by ( station id ) , that have ( ( the maximum of ( bikes available ) ) greater than ( 10 ) ) ) )": {"{VALUE0}": "10", "{COLUMN0}": "long", "{COLUMN1}": "id", "{COLUMN2}": "station_id", "{COLUMN3}": "bikes_available", "{TABLE0}": "station", "{TABLE1}": "status", "{OP0}": ">", "{AGG0}": "avg", "{AGG1}": "max"}, "( name ) that belongs to ( student ) , that have ( ( id ) in ( ( id ) that belongs to ( takes ) , that have ( ( ( semester ) equal to ( 'fall' ) ) and ( ( year ) equal to ( 2003 ) ) ) ) )": {"{VALUE0}": "fall", "{VALUE2}": "2003", "{COLUMN0}": "name", "{COLUMN1}": "id", "{COLUMN2}": "semester", "{COLUMN3}": "year", "{TABLE0}": "student", "{TABLE1}": "takes classes", "{OP0}": "=", "{OP1}": "="}, "( rid ) that belongs to ( routes ) , that have ( ( ( dst apid ) in ( ( apid ) that belongs to ( airports ) , that have ( ( country ) equal to ( 'united states' ) ) ) ) and ( ( src apid ) in ( ( apid ) that belongs to ( airports ) , that have ( ( country ) equal to ( 'united states' ) ) ) ) )": {"{VALUE0}": "united states", "{VALUE1}": "united states", "{COLUMN0}": "rid", "{COLUMN1}": "dst_apid", "{COLUMN2}": "apid", "{COLUMN3}": "country", "{COLUMN4}": "src_apid", "{TABLE0}": "routes", "{TABLE1}": "airports", "{OP0}": "=", "{OP1}": "="}, "all items that belongs to ( employees ) , that have ( ( salary ) between ( the minimum of ( salary ) ) that belongs to ( employees ) and ( 2500 ) )": {"{VALUE0}": "2500", "{COLUMN0}": "salary", "{TABLE0}": "employees", "{AGG0}": "min"}, "( job id ) that belongs to ( job history ) , that have ( ( ( end date ) minus ( start date ) ) greater than ( 300 ) ) , grouped by ( job id ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) )": {"{VALUE0}": "300", "{VALUE1}": "2", "{COLUMN0}": "job_id", "{COLUMN1}": "end_date", "{COLUMN2}": "start_date", "{TABLE0}": "job history", "{OP0}": ">", "{OP1}": ">=", "{AGG0}": "count"}, "( balance of staff ) , ( balance of enzyme ) , ( name of addresses ) that belongs to ( ( accounts ) , and ( ( checking ) satisfied that ( ( custid of addresses ) equal to ( custid of staff ) ) ) , and ( ( savings ) satisfied that ( ( custid of addresses ) equal to ( custid of enzyme ) ) ) ) , ordered by ( ( ( balance of staff ) add ( balance of enzyme ) ) in descending order )": {"{COLUMN0}": "balance", "{COLUMN1}": "name", "{COLUMN2}": "custid", "{TABLE0}": "accounts", "{TABLE1}": "checking", "{TABLE2}": "savings", "{SC0}": "desc"}, "( roomname of staff ) , ( rate of addresses ) , ( checkin of addresses ) , ( checkout of addresses ) that belongs to ( ( reservations ) , and ( ( rooms ) satisfied that ( ( room of addresses ) equal to ( roomid of staff ) ) ) ) , grouped by ( room of addresses ) , ordered by ( ( rate of addresses ) in descending order ) , limited to the top ( 1 )": {"{VALUE1}": "1", "{COLUMN0}": "roomname", "{COLUMN1}": "rate", "{COLUMN2}": "checkin", "{COLUMN3}": "checkout", "{COLUMN4}": "room", "{COLUMN5}": "roomid", "{TABLE0}": "reservations", "{TABLE1}": "rooms", "{SC0}": "desc"}, "( the maximum of ( product price ) ) , ( the minimum of ( product price ) ) , ( product type code ) that belongs to ( products ) , grouped by ( product type code ) , ordered by ( ( product type code ) )": {"{COLUMN0}": "product_price", "{COLUMN1}": "product_type_code", "{TABLE0}": "products", "{AGG0}": "max", "{AGG1}": "min"}, "( area of addresses ) that belongs to ( ( appellations ) , and ( ( wine ) satisfied that ( ( appelation of addresses ) equal to ( appelation of staff ) ) ) ) , grouped by ( appelation of staff ) , that have ( ( year of staff ) less than ( 2010 ) ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{VALUE7}": "2010", "{COLUMN0}": "area", "{COLUMN1}": "appelation", "{COLUMN2}": "year", "{TABLE0}": "appellations", "{TABLE1}": "wine", "{OP0}": "<", "{AGG0}": "count", "{SC0}": "desc"}, "( the number of ( all items ) ) that belongs to ( restaurant , and ( type of restaurant satisfied that ( ( resid of restaurant ) equal to ( resid of type of restaurant ) ) ) , and ( restaurant type satisfied that ( ( restypeid of type of restaurant ) equal to ( restypeid of restaurant type ) ) ) ) , grouped by ( restypeid of type of restaurant ) , that have ( ( restypename of restaurant type ) equal to ( 'sandwich' ) )": {"{VALUE0}": "sandwich", "{COLUMN0}": "resid", "{COLUMN1}": "restypeid", "{COLUMN2}": "restypename", "{TABLE0}": "restaurant", "{TABLE1}": "type of restaurant", "{TABLE2}": "restaurant type", "{OP0}": "=", "{AGG0}": "count"}, "( the minimum of ( salary ) ) , ( dept name ) that belongs to ( instructor ) , grouped by ( dept name ) , that have ( ( the average of ( salary ) ) greater than ( the average of ( salary ) ) that belongs to ( instructor ) )": {"{COLUMN0}": "salary", "{COLUMN1}": "dept_name", "{TABLE0}": "instructor", "{OP0}": ">", "{AGG0}": "min", "{AGG1}": "avg", "{AGG2}": "avg"}, "( date claim made of addresses ) , ( claim id of addresses ) that belongs to ( ( claims ) , and ( ( settlements ) satisfied that ( ( claim id of addresses ) equal to ( claim id of staff ) ) ) ) , grouped by ( claim id of addresses ) , that have ( ( the number of ( all items ) ) greater than ( 2 ) ) and ( date claim made of addresses ) , ( claim id of addresses ) that belongs to ( ( claims ) , and ( ( settlements ) satisfied that ( ( claim id of addresses ) equal to ( claim id of staff ) ) ) ) , that have ( ( amount claimed of addresses ) equal to ( the maximum of ( amount claimed ) ) that belongs to ( claims ) )": {"{VALUE3}": "2", "{COLUMN0}": "date_claim_made", "{COLUMN1}": "claim_id", "{COLUMN2}": "amount_claimed", "{TABLE0}": "claims", "{TABLE1}": "settlements", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count", "{AGG1}": "max"}, "( asset id of addresses ) , ( asset details of addresses ) that belongs to ( ( assets ) , and ( ( asset parts ) satisfied that ( ( asset id of addresses ) equal to ( asset id of staff ) ) ) ) , grouped by ( asset id of addresses ) , that have ( ( the number of ( all items ) ) equal to ( 2 ) ), and intersect with ( ( asset id of addresses ) , ( asset details of addresses ) that belongs to ( ( assets ) , and ( ( fault log ) satisfied that ( ( asset id of addresses ) equal to ( asset id of staff ) ) ) ) , grouped by ( asset id of addresses ) , that have ( ( the number of ( all items ) ) less than ( 2 ) ))": {"{VALUE3}": "2", "{COLUMN0}": "asset_id", "{COLUMN1}": "asset_details", "{TABLE0}": "assets", "{TABLE1}": "asset parts", "{TABLE2}": "fault log", "{OP0}": "=", "{OP1}": "<", "{AGG0}": "count", "{AGG1}": "count"}, "( customer details of addresses ) , ( customer id of addresses ) that belongs to ( ( customers ) , and ( ( customer policies ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) ) , grouped by ( customer id of addresses ) , that have ( ( the number of ( all items ) ) greater than or equal to ( 2 ) ), and except that ( ( customer details of addresses ) , ( customer id of addresses ) that belongs to ( ( customers ) , and ( ( customer policies ) satisfied that ( ( customer id of addresses ) equal to ( customer id of staff ) ) ) , and ( ( claims ) satisfied that ( ( policy id of staff ) equal to ( policy id of enzyme ) ) ) ))": {"{VALUE3}": "2", "{COLUMN0}": "customer_details", "{COLUMN1}": "customer_id", "{COLUMN2}": "policy_id", "{TABLE0}": "customers", "{TABLE1}": "customer policies", "{TABLE2}": "claims", "{OP0}": ">=", "{AGG0}": "count"}, "( name of addresses ) that belongs to ( ( user profiles ) , and ( ( follows ) satisfied that ( ( uid of addresses ) equal to ( f1 of staff ) ) ) ) , grouped by ( f1 of staff ) , that have ( ( the number of ( all items ) ) greater than ( the number of ( all items ) ) that belongs to ( ( user profiles ) , and ( ( follows ) satisfied that ( ( uid of addresses ) equal to ( f1 of staff ) ) ) ) , that have ( ( name of addresses ) equal to ( 'tyler swift' ) ) )": {"{VALUE0}": "tyler swift", "{COLUMN0}": "name", "{COLUMN1}": "uid", "{COLUMN2}": "f1", "{TABLE0}": "user profiles", "{TABLE1}": "follows", "{OP0}": ">", "{OP1}": "=", "{AGG0}": "count", "{AGG1}": "count"}, "( state province county of addresses ) that belongs to ( ( addresses ) , and ( ( staff ) satisfied that ( ( address id of addresses ) equal to ( staff address id of staff ) ) ) ) , grouped by ( state province county of addresses ) , that have ( ( the number of ( all items ) ) between ( 2 ) and ( 4 ) )": {"{VALUE2}": "2", "{VALUE7}": "4", "{COLUMN0}": "state_province_county", "{COLUMN1}": "address_id", "{COLUMN2}": "staff_address_id", "{TABLE0}": "addresses", "{TABLE1}": "staff", "{AGG0}": "count"}, "( semester ) , ( year ) that belongs to ( takes ) , grouped by ( semester ) , ( year ) , ordered by ( ( the number of ( all items ) ) ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "semester", "{COLUMN1}": "year", "{TABLE0}": "takes classes", "{AGG0}": "count"}, "( distinct ( department id ) ) that belongs to ( employees ) , grouped by ( department id ) , ( manager id ) , that have ( ( the number of ( employee id ) ) greater than or equal to ( 4 ) )": {"{VALUE0}": "4", "{COLUMN0}": "department_id", "{COLUMN1}": "manager_id", "{COLUMN2}": "employee_id", "{TABLE0}": "employees", "{OP0}": ">=", "{AGG0}": "count"}, "( employee name of employees ) , ( the number of ( all items ) ) that belongs to ( employees , and ( circulation history satisfied that ( ( employee id of circulation history ) equal to ( employee id of employees ) ) ) ) , grouped by ( document id of circulation history ) , ( draft number of circulation history ) , ( copy number of circulation history ) , ordered by ( ( the number of ( all items ) ) in descending order ) , limited to the top ( 1 )": {"{VALUE0}": "1", "{COLUMN0}": "employee_name", "{COLUMN1}": "employee_id", "{COLUMN2}": "document_id", "{COLUMN3}": "draft_number", "{COLUMN4}": "copy_number", "{TABLE0}": "employees", "{TABLE1}": "circulation history", "{AGG0}": "count", "{AGG1}": "count", "{SC0}": "desc"}, "( rank ) , ( sex ) , ( the number of ( all items ) ) that belongs to ( faculty ) , grouped by ( rank ) , ( sex )": {"{COLUMN0}": "rank", "{COLUMN1}": "sex", "{TABLE0}": "faculty", "{AGG0}": "count"}}]